/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreLocation.framework/CoreLocation
 */

#import <Foundation/NSObject.h>
#import "CoreLocation-Structs.h"

@class CLHeading, NSString, NSSet, CLLocation;
@protocol CLLocationManagerDelegate;

@interface CLLocationManager : NSObject {
@private
	id _internal;
}
@property(readonly, assign, nonatomic) CLClientRef internalClient;
@property(readonly, assign, nonatomic) double bestAccuracy;
@property(assign, nonatomic) BOOL supportInfo;
@property(readonly, assign, nonatomic) double expectedGpsUpdateInterval;
@property(readonly, assign, nonatomic) BOOL locationServicesApproved;
@property(readonly, assign, nonatomic) BOOL locationServicesAvailable;
@property(assign, nonatomic) BOOL privateMode;
@property(readonly, assign, nonatomic) NSSet* monitoredRegions;
@property(readonly, assign, nonatomic) double maximumRegionMonitoringDistance;
@property(readonly, assign, nonatomic) CLHeading* heading;
@property(assign, nonatomic) int headingOrientation;
@property(assign, nonatomic) double headingFilter;
@property(readonly, assign, nonatomic) BOOL headingAvailable;
@property(readonly, assign, nonatomic) CLLocation* location;
@property(assign, nonatomic) double desiredAccuracy;
@property(assign, nonatomic) double distanceFilter;
@property(copy, nonatomic) NSString* purpose;
@property(readonly, assign, nonatomic) BOOL locationServicesEnabled;
@property(assign, nonatomic) id<CLLocationManagerDelegate> delegate;
+(id)sharedManager;
+(BOOL)locationServicesEnabled:(BOOL)enabled;
+(BOOL)locationServicesEnabled;
+(void)setLocationServicesEnabled:(BOOL)enabled;
+(BOOL)headingAvailable;
+(BOOL)significantLocationChangeMonitoringAvailable;
+(BOOL)regionMonitoringAvailable;
+(BOOL)regionMonitoringEnabled;
+(int)_authorizationStatus;
+(int)authorizationStatus;
-(id)init;
-(void)dealloc;
-(void)startUpdatingLocation;
-(void)stopUpdatingLocation;
-(void)historicLocationsFromDate:(id)date forInterval:(double)interval;
-(void)startUpdatingHeading;
-(void)stopUpdatingHeading;
-(void)dismissHeadingCalibrationDisplay;
-(void)startAppStatusUpdates;
-(void)stopAppStatusUpdates;
-(void)startTechStatusUpdates;
-(void)stopTechStatusUpdates;
-(void)startMonitoringSignificantLocationChanges;
-(void)stopMonitoringSignificantLocationChanges;
-(void)startMonitoringForRegion:(id)region desiredAccuracy:(double)accuracy;
-(void)stopMonitoringForRegion:(id)region;
-(void)authorizeAppWithBundleId:(id)bundleId;
-(void)deauthorizeAppWithBundleId:(id)bundleId;
-(void)resetApps;
-(id)appsUsingLocation;
-(id)appsUsingLocationWithDetails;
-(id)technologiesInUse;
-(void)onClientEvent:(int)event supportInfo:(id)info;
-(void)onClientEventAuthStatus:(id)status;
-(void)onClientEventLocation:(id)location;
-(void)onClientEventLocationUnavailable:(id)unavailable;
-(void)onClientEventHeading:(id)heading;
-(void)onClientEventHeadingCalibration:(id)calibration;
-(void)onClientEventHistoricLocation:(id)location;
-(void)onClientEventRegistered:(id)registered;
-(void)onClientEventError:(id)error;
-(void)onClientEventRegion:(id)region;
-(void)onClientEventRegionError:(id)error;
@end

