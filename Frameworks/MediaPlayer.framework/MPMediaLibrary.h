/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSCoding.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "MediaPlayer-Structs.h"
#import "MPMediaLibrary.h"

@class NSDate;

@interface MPMediaLibrary : XXUnknownSuperclass <NSCoding> {
	MPMediaLibraryInternal _internal;
}
@property(assign, nonatomic) MPMediaLibraryInternal _internal;
@property(readonly, assign, nonatomic) NSDate* lastModifiedDate;
+(id)defaultMediaLibrary;
+(void)setDefaultMediaLibrary:(id)library;
+(id)deviceMediaLibrary;
+(BOOL)isLibraryServerDisabled;
+(void)setLibraryServerDisabled:(BOOL)disabled;
+(void)setRunLoopForNotifications:(id)notifications;
+(id)_mediaLibraries;
+(id)mediaLibraries;
+(id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;
+(id)_libraryForDataProvider:(id)dataProvider;
+(id)_libraryDataProviders;
+(id)libraryDataProviders;
+(void)addLibraryDataProvider:(id)provider;
+(void)removeLibraryDataProvider:(id)provider;
+(void)reloadLibraryDataProvider:(id)provider;
+(void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;
-(id)init;
-(void)dealloc;
-(id)description;
-(BOOL)isEqual:(id)equal;
-(unsigned)hash;
-(void)encodeWithCoder:(id)coder;
-(id)initWithCoder:(id)coder;
-(void)_clearCachedEntities;
-(void)_clearCachedContentData;
-(void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;
-(void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;
-(void)_postLibraryDidChangeNotificationForSync;
-(void)_postDataProviderWillChangeITunesIsSyncingToValue:(BOOL)_postDataProvider;
-(void)_postDataProviderDidChangeITunesIsSyncingToValue:(BOOL)_postDataProvider;
-(void)iTunesSyncPhaseWillStart:(int)iTunesSyncPhase;
-(void)iTunesSyncPhaseDidFinish:(int)iTunesSyncPhase reason:(int)reason;
-(void)_didReceiveMemoryWarning:(id)warning;
-(void)beginGeneratingLibraryChangeNotifications;
-(void)endGeneratingLibraryChangeNotifications;
-(id)name;
-(id)uniqueIdentifier;
-(id)modificationToken;
-(BOOL)libraryHasBeenModifiedWithToken:(id)token;
-(unsigned long long)syncGenerationID;
-(BOOL)hasMediaOfType:(int)type;
-(BOOL)hasMedia;
-(BOOL)hasGeniusMixes;
-(BOOL)hasPlaylists;
-(BOOL)hasArtists;
-(BOOL)hasAlbums;
-(BOOL)hasSongs;
-(BOOL)hasPodcasts;
-(BOOL)hasGenres;
-(BOOL)hasComposers;
-(BOOL)hasAudiobooks;
-(BOOL)_checkHasContent:(BOOL*)content determined:(BOOL*)determined queryIsEmptyBlock:(id)block;
-(BOOL)_checkHasContent:(BOOL*)content determined:(BOOL*)determined mediaType:(int)type queryIsEmptyBlock:(id)block;
-(BOOL)hasVideos;
-(BOOL)hasMusicVideos;
-(BOOL)hasAudibleAudioBooks;
-(BOOL)hasMovies;
-(BOOL)hasCompilations;
-(BOOL)hasITunesUContent;
-(BOOL)hasMovieRentals;
-(BOOL)hasTVShows;
-(BOOL)hasVideoPodcasts;
-(BOOL)isSyncing;
-(id)itemWithPersistentID:(unsigned long long)persistentID;
-(id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;
-(id)playlistWithPersistentID:(unsigned long long)persistentID;
-(id)addPlaylistWithName:(id)name;
-(id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;
-(BOOL)removeItems:(id)items;
-(BOOL)removePlaylist:(id)playlist;
-(BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;
-(BOOL)isGeniusEnabled;
-(id)preferredAudioLanguages;
-(id)preferredSubtitleLanguages;
-(BOOL)requiresAuthentication;
-(void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;
-(id)connectionAssertionWithIdentifier:(id)identifier;
-(void)disconnect;
-(BOOL)performTransactionWithBlock:(id)block;
-(float)connectionProgress;
-(BOOL)isValidAssetURL:(id)url;
-(id)pathForAssetURL:(id)assetURL;
-(unsigned long long)_persistentIDForAssetURL:(id)assetURL;
-(BOOL)isFilteringDisabled;
-(void)setFilteringDisabled:(BOOL)disabled;
-(BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;
-(BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;
-(id)_itemsForQueryCriteria:(id)queryCriteria;
-(id)_collectionsForQueryCriteria:(id)queryCriteria;
-(void)_removeConnectionAssertion:(id)assertion;
-(void)_clearPendingDisconnection;
-(id)_initWithLibraryDataProvider:(id)libraryDataProvider;
-(id)libraryDataProvider;
@end

@interface MPMediaLibrary (MPAVErrorResolverAdditions)
-(id)errorResolverForMediaItem:(id)mediaItem;
@end

