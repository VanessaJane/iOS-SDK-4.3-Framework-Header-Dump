/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaLibraryDataProviderPrivate.h"
#import "MediaPlayer-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class ML3MusicLibrary, NSSet, NSString, NSArray;

@interface MPMediaLibraryDataProviderML3 : XXUnknownSuperclass <MPMediaLibraryDataProviderPrivate> {
	ML3MusicLibrary* _library;
}
@property(retain, nonatomic) ML3MusicLibrary* library;
@property(readonly, assign, nonatomic) NSString* name;
@property(readonly, assign, nonatomic) NSString* uniqueIdentifier;
@property(readonly, assign, nonatomic) BOOL requiresAuthentication;
@property(readonly, assign, nonatomic) NSSet* propertiesToCache;
@property(readonly, assign, nonatomic) BOOL isGeniusEnabled;
@property(readonly, assign, nonatomic) NSArray* preferredAudioLanguages;
@property(readonly, assign, nonatomic) NSArray* preferredSubtitleLanguages;
+(id)_unadjustedValueForMPProperty:(id)mpproperty withDefaultValue:(id)defaultValue;
-(id)initWithLibrary:(id)library;
-(void)dealloc;
-(id)lastModifiedDate;
-(BOOL)hasMediaOfType:(int)type;
-(BOOL)hasGeniusMixes;
-(BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;
-(BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;
-(void)loadQueryCriteria:(id)criteria hasItemsWithCompletionBlock:(id)completionBlock;
-(void)loadQueryCriteria:(id)criteria hasCollectionsWithCompletionBlock:(id)completionBlock;
-(void)enumerateItemIdentifiersForQueryCriteria:(id)queryCriteria cancelBlock:(id)block usingBlock:(id)block3;
-(void)enumerateCollectionIdentifiersForQueryCriteria:(id)queryCriteria cancelBlock:(id)block usingBlock:(id)block3;
-(void)loadValueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property queryCriteria:(id)criteria completionBlock:(id)block;
-(void)loadValueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property queryCriteria:(id)criteria completionBlock:(id)block;
-(void)loadItemsUsingFetchRequest:(id)request;
-(void)loadCollectionsUsingFetchRequest:(id)request;
-(void)loadProperties:(id)properties ofItemWithIdentifier:(long long)identifier completionBlock:(id)block;
-(void)loadProperties:(id)properties ofCollectionWithIdentifier:(long long)identifier completionBlock:(id)block;
-(BOOL)performTransactionWithBlock:(id)block;
-(BOOL)setValue:(id)value forProperty:(id)property ofItemWithIdentifier:(long long)identifier;
-(BOOL)setValue:(id)value forProperty:(id)property ofPlaylistWithIdentifier:(long long)identifier;
-(long long)addPlaylistWithValuesForProperties:(id)properties;
-(BOOL)removePlaylistWithIdentifier:(long long)identifier;
-(BOOL)removeItemsWithIdentifiers:(long long*)identifiers count:(unsigned)count;
-(void)addItemWithIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier2 insertedPhysicalOrderOut:(long long*)anOut fullReorderOccurredOut:(BOOL*)anOut4 completionBlock:(id)block;
-(void)insertItemsWithIdentifiers:(long long*)identifiers count:(unsigned)count toPlaylistWithIdentifier:(long long)identifier afterPhysicalOrder:(long long)order insertedPhysicalOrdersOut:(long long*)anOut fullReorderOccurredOut:(BOOL*)anOut6 completionBlock:(id)block;
-(void)removeItemAtPhysicalOrder:(long long)physicalOrder inPlaylistWithIdentifier:(long long)identifier completionBlock:(id)block;
-(void)removeAllItemsInPlaylistWithIdentifier:(long long)identifier;
-(void)moveItemFromPhysicalOrder:(long long)physicalOrder toAfterPhysicalOrder:(long long)afterPhysicalOrder inPlaylistWithIdentifier:(long long)identifier insertedPhysicalOrderOut:(long long*)anOut fullReorderOccurredOut:(BOOL*)anOut5 completionBlock:(id)block;
-(void)loadBestArtworkImageDataForSize:(CGSize)size ofItemWithIdentifier:(long long)identifier completionBlock:(id)block;
-(void)loadBestTimedArtworkImageDataForSize:(CGSize)size ofItemWithIdentifier:(long long)identifier atPlaybackTime:(double)playbackTime completionBlock:(id)block;
-(id)adjustedValueForMPProperty:(id)mpproperty ofEntity:(id)entity withDefaultValue:(id)defaultValue;
-(void)_libraryContentsDidChange:(id)_libraryContents;
-(void)_dynamicPropertiesDidChange:(id)_dynamicProperties;
-(void)_loadEntitiesUsingFetchRequest:(id)request entityQuery:(id)query writeBlock:(id)block;
-(void)_loadProperties:(id)properties ofEntityWithIdentifier:(long long)identifier ML3EntityClass:(Class)aClass completionBlock:(id)block;
-(void)_performBackgroundTaskWithBlock:(id)block;
-(void)_loadValueForAggregateFunction:(id)aggregateFunction entityClass:(Class)aClass property:(id)property query:(id)query completionBlock:(id)block;
-(BOOL)_removeEntitiesWithIdentifiers:(long long*)identifiers count:(unsigned)count entityClass:(Class)aClass;
@end

