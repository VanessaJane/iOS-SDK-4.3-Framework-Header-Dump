/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "MPMediaLibraryDataProvider.h"

@class NSArray;

@protocol MPMediaLibraryDataProviderPrivate <MPMediaLibraryDataProvider>
@optional
@property(readonly, assign, nonatomic) BOOL isGeniusEnabled;
@property(readonly, assign, nonatomic) NSArray* preferredAudioLanguages;
@property(readonly, assign, nonatomic) NSArray* preferredSubtitleLanguages;
-(id)lastModifiedDate;
-(BOOL)hasMediaOfType:(int)type;
-(BOOL)hasGeniusMixes;
-(BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;
-(BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;
-(void)loadBestArtworkImageForSize:(CGSize)size ofItemWithIdentifier:(long long)identifier completionBlock:(id)block;
-(void)loadBestTimedArtworkImageForSize:(CGSize)size ofItemWithIdentifier:(long long)identifier atPlaybackTime:(double)playbackTime completionBlock:(id)block;
-(void)loadCoverFlowArtworkImageForSize:(CGSize)size ofItemWithIdentifier:(long long)identifier completionBlock:(id)block;
-(BOOL)hasArtworkImageForItemWithIdentifier:(long long)identifier;
-(BOOL)isArtworkImageIdenticalForItemWithIdentifier:(long long)identifier otherItemWithIdentifier:(long long)identifier2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;
-(BOOL)performTransactionWithBlock:(id)block;
-(BOOL)setValue:(id)value forProperty:(id)property ofItemWithIdentifier:(long long)identifier;
-(BOOL)setValue:(id)value forProperty:(id)property ofPlaylistWithIdentifier:(long long)identifier;
-(long long)addPlaylistWithValuesForProperties:(id)properties;
-(BOOL)removeItemsWithIdentifiers:(long long*)identifiers count:(unsigned)count;
-(BOOL)removePlaylistWithIdentifier:(long long)identifier;
-(void)addItemWithIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier2 insertedPhysicalOrderOut:(long long*)anOut fullReorderOccurredOut:(BOOL*)anOut4 completionBlock:(id)block;
-(void)insertItemsWithIdentifiers:(long long*)identifiers count:(unsigned)count toPlaylistWithIdentifier:(long long)identifier afterPhysicalOrder:(long long)order insertedPhysicalOrdersOut:(long long*)anOut fullReorderOccurredOut:(BOOL*)anOut6 completionBlock:(id)block;
-(void)removeItemAtPhysicalOrder:(long long)physicalOrder inPlaylistWithIdentifier:(long long)identifier completionBlock:(id)block;
-(void)removeAllItemsInPlaylistWithIdentifier:(long long)identifier;
-(void)moveItemFromPhysicalOrder:(long long)physicalOrder toAfterPhysicalOrder:(long long)afterPhysicalOrder inPlaylistWithIdentifier:(long long)identifier insertedPhysicalOrderOut:(long long*)anOut fullReorderOccurredOut:(BOOL*)anOut5 completionBlock:(id)block;
-(void)seedPlaylistWithIdentifier:(long long)identifier withItemWithIdentifier:(long long)identifier2 completionBlock:(id)block;
-(void*)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long*)seedItemIdentifiers count:(unsigned)count error:(id*)error;
-(long long*)generateItemIdentifiersForGeniusClusterPlaylist:(void*)geniusClusterPlaylist count:(unsigned*)count error:(id*)error;
-(void)releaseGeniusClusterPlaylist:(void*)playlist;
-(void)mediaLibraryWillChangeITunesIsSyncingToValue:(BOOL)mediaLibrary;
-(void)mediaLibraryDidChangeITunesIsSyncingToValue:(BOOL)mediaLibrary;
@end

