/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPServerObject.h"
#import "MPMusicPlayerController.h"

@class NSMutableDictionary, NSMutableArray, MPVideoViewController;

@interface MPMusicPlayerControllerServerInternal : MPServerObject <MPMusicPlayerController> {
@private
	NSMutableArray* _clientPorts;
	NSMutableDictionary* _clientPortsForPIDs;
	NSMutableDictionary* _clientStateForPIDs;
	MPVideoViewController* _videoViewController;
	int _activeClientPID;
	int _extendedModeNotifyToken;
	unsigned _queuePrepared : 1;
}
+(BOOL)_canSeedGeniusWithItem:(id)item;
-(id)init;
-(void)dealloc;
-(void)setNowPlayingItem:(id)item;
-(id)nowPlayingItem;
-(void)setQueueWithQuery:(id)query;
-(void)setQueueWithItemCollection:(id)itemCollection;
-(void)play;
-(void)shuffle;
-(void)pause;
-(void)stop;
-(id)currentPlaybackTime;
-(void)setCurrentPlaybackTime:(id)time;
-(id)playbackState;
-(id)numberOfItems;
-(id)shuffleMode;
-(void)setShuffleMode:(id)mode;
-(id)repeatMode;
-(void)setRepeatMode:(id)mode;
-(void)beginSeekingForward;
-(void)beginSeekingBackward;
-(void)endSeeking;
-(void)skipToNextItem;
-(void)skipToBeginning;
-(void)skipToPreviousItem;
-(void)skipToBeginningOrPreviousItem;
-(id)isGeniusAvailable;
-(id)setQueueWithSeedItems:(id)seedItems;
-(void)setQueueWithQuery:(id)query firstItem:(id)item;
-(id)queueAsQuery;
-(id)nowPlayingItemAtIndex:(id)index;
-(id)springboardNowPlayingInfo;
-(void)playItem:(id)item;
-(void)pauseWithFadeoutDuration:(id)fadeoutDuration;
-(void)setPlaybackSpeed:(id)speed;
-(id)playbackSpeed;
-(id)indexOfNowPlayingItem;
-(id)unshuffledIndexOfNowPlayingItem;
-(id)isNowPlayingItemFromGeniusMix;
-(void)skipToNextChapter;
-(void)skipToPreviousChapter;
-(id)currentChapterIndex;
-(void)setCurrentChapterIndex:(id)index;
-(void)prepareQueueForPlayback;
-(id)serverIsAlive;
-(void)registerForServerDiedNotifications;
-(BOOL)useApplicationSpecificQueue;
-(void)setUseApplicationSpecificQueue:(id)queue;
-(id)allowsRemoteUIAccess;
-(void)setAllowsRemoteUIAccess:(id)access;
-(void)_clientPortInvalidatedNotification:(id)notification;
-(void)_applicationStateChangedNotification:(id)notification;
-(void)_playbackStateDidChangeNotification:(id)_playbackState;
-(void)_itemDidChangeNotification:(id)_item;
-(void)_appDefaultsChangedNotification:(id)notification;
-(void)_itemPlaybackDidEndNotification:(id)_itemPlayback;
-(void)_tvOutCapabilityDidChangeNotification:(id)_tvOutCapability;
-(void)_registerClientPort:(unsigned)port forProcessID:(int)processID;
-(void)_clientPortInvalidated:(id)invalidated;
-(id)_clientState;
-(id)_clientStateForPID:(int)pid;
-(BOOL)_clientPIDHasPermissionToPlay:(int)play;
-(BOOL)_activeClientPIDHasPermissionToPlay;
-(BOOL)_currentClientPIDHasPermissionToPlay;
-(id)_avController;
-(id)_avControllerForClientPID:(int)clientPID;
-(id)_avControllerForClientPID:(int)clientPID ignoreExtendedMode:(BOOL)mode;
-(void)_setQueueWithQuery:(id)query;
-(void)_prepareQueueIfNecessary;
-(void)_endPlaybackForClientIfNecessary:(int)clientIfNecessary;
-(void)_endPlayback;
-(void)_tearDownVideoView;
@end

