/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "NSManagedObject.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "CoreData-Structs.h"

@class NSManagedObjectContext, NSManagedObjectID;

@interface NSManagedObject : XXUnknownSuperclass {
@private
	int _cd_rc;
	unsigned _cd_stateFlags;
	id _cd_rawData;
	id _cd_entity;
	NSManagedObjectContext* _cd_managedObjectContext;
	NSManagedObjectID* _cd_objectID;
	id _cd_faultHandler;
	id _cd_observationInfo;
	id* _cd_snapshots;
	unsigned _cd_lockingInfo;
	id _cd_queueReference;
}
+(id)_PFPlaceHolderSingleton_core;
+(char*)_transientPropertiesChangesMask__;
+(id)alloc;
+(id)allocWithZone:(NSZone*)zone;
+(id)alloc_10_4;
+(id)allocWithZone_10_4:(NSZone*)zone_10_4;
+(void)initialize;
+(BOOL)contextShouldIgnoreUnmodeledPropertyChanges;
-(unsigned)hash;
-(BOOL)isEqual:(id)equal;
-(id)retain;
-(void)release;
-(int)_batch_release__;
-(unsigned)retainCount;
-(void)finalize;
-(void)dealloc;
-(id)_descriptionValues;
-(id)description;
-(id)initWithEntity:(id)entity insertIntoManagedObjectContext:(id)context;
-(id)init;
-(id)managedObjectContext;
-(id)entity;
-(id)objectID;
-(BOOL)isInserted;
-(BOOL)isUpdated;
-(BOOL)isDeleted;
-(BOOL)isFault;
-(BOOL)hasFaultForRelationshipNamed:(id)relationshipNamed;
-(void)setObservationInfo:(id)info;
-(id)observationInfo;
-(void)willAccessValueForKey:(id)key;
-(void)didAccessValueForKey:(id)key;
-(void)willChangeValueForKey:(id)key;
-(void)didChangeValueForKey:(id)key;
-(void)willChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;
-(void)didChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;
-(void)willChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;
-(void)didChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;
-(void)awakeFromFetch;
-(void)awakeFromInsert;
-(void)awakeFromSnapshotEvents:(unsigned)snapshotEvents;
-(void)prepareForDeletion;
-(void)willSave;
-(void)didSave;
-(void)willTurnIntoFault;
-(void)didTurnIntoFault;
-(BOOL)validateValue:(id*)value forKey:(id)key error:(id*)error;
-(BOOL)validateForDelete:(id*)aDelete;
-(BOOL)validateForInsert:(id*)insert;
-(BOOL)validateForUpdate:(id*)update;
-(id)mutableArrayValueForKey:(id)key;
-(id)mutableSetValueForKey:(id)key;
-(id)valueForKey:(id)key;
-(void)setValue:(id)value forKey:(id)key;
-(id)primitiveValueForKey:(id)key;
-(void)setPrimitiveValue:(id)value forKey:(id)key;
-(void)setValuesForKeysWithDictionary:(id)dictionary;
-(id)dictionaryWithValuesForKeys:(id)keys;
-(id)committedValuesForKeys:(id)keys;
-(id)changedValues;
-(id)valueForUndefinedKey:(id)undefinedKey;
-(void)setValue:(id)value forUndefinedKey:(id)undefinedKey;
-(void)setNilValueForKey:(id)key;
-(unsigned)faultingState;
@end

@interface NSManagedObject (_NSInternalMethods)
+(BOOL)automaticallyNotifiesObserversForKey:(id)key;
-(id)_initWithEntity:(id)entity withID:(id)anId withHandler:(id)handler withContext:(id)context;
-(BOOL)_hasAnyObservers__;
-(BOOL)_hasPendingChanges;
-(void)_clearPendingChanges__;
-(BOOL)_hasUnprocessedChanges__;
-(void)_clearUnprocessedChanges__;
-(BOOL)_hasAnyChanges;
-(void)_clearAllChanges__;
-(BOOL)_isSuppressingChangeNotifications__;
-(void)_setSuppressingChangeNotifications__:(BOOL)_;
-(BOOL)_isSuppressingKVO__;
-(void)_setSuppressingKVO__:(BOOL)_;
-(BOOL)_hasRetainedStoreResources__;
-(void)_setHasRetainedStoreResources__:(BOOL)_;
-(BOOL)_isPendingDeletion__;
-(void)_setPendingDeletion__:(BOOL)_;
-(BOOL)_isPendingInsertion__;
-(void)_setPendingInsertion__:(BOOL)_;
-(BOOL)_isPendingUpdate__;
-(void)_setPendingUpdate__:(BOOL)_;
-(BOOL)_isUnprocessedDeletion__;
-(void)_setUnprocessedDeletion__:(BOOL)_;
-(BOOL)_isUnprocessedInsertion__;
-(void)_setUnprocessedInsertion__:(BOOL)_;
-(BOOL)_isUnprocessedUpdate__;
-(void)_setUnprocessedUpdate__:(BOOL)_;
-(BOOL)_isReadOnly__;
-(void)_setReadOnly__:(BOOL)_;
-(unsigned)_stateFlags;
-(id)_lastSnapshot__;
-(void)_setLastSnapshot__:(id)_;
-(id)_reservedCurrentEventSnapshot;
-(void)_nilOutReservedCurrentEventSnapshot__;
-(id)changedValuesForCurrentEvent;
-(unsigned)_versionReference__;
-(void)_setVersionReference__:(unsigned)_;
-(void)_setManagedObjectContext__:(id)_;
-(void)_setObjectID__:(id)_;
-(id)_originalSnapshot__;
-(void)_setOriginalSnapshot__:(id)_;
-(void)_commitPhotoshoperyForRelationshipAtIndex:(unsigned)index newValue:(id)value;
-(id)_faultHandler__;
-(id)_referenceQueue__;
-(id)_newPropertiesForRetainedTypes:(unsigned*)retainedTypes andCopiedTypes:(unsigned*)types preserveFaults:(BOOL)faults;
-(id)_newChangedValuesForRefresh__;
-(id)_newSnapshotForUndo__;
-(void)_updateFromUndoSnapshot:(id)undoSnapshot;
-(id)_allProperties__;
-(id)_newAllPropertiesWithRelationshipFaultsIntact__;
-(id)_persistentProperties__;
-(id)_newPersistentPropertiesWithRelationshipFaultsIntact__;
-(id)_newPersistentPropertiesForConflictRecordFaultsIntact__;
-(id)_transientProperties__;
-(id)_newCommittedSnapshotValues;
-(id)_changedTransientProperties__;
-(void)_clearRawPropertiesWithHint:(NSRange)hint;
-(void)_includeObject:(id)object intoPropertyWithKey:(id)key andIndex:(unsigned)index;
-(void)_excludeObject:(id)object fromPropertyWithKey:(id)key andIndex:(unsigned)index;
-(void)_setFaultHandler__:(id)_;
-(id)_implicitObservationInfo;
-(id)_genericMutableSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;
-(BOOL)_isValidRelationshipDestination__;
-(void)_maintainInverseRelationship:(id)relationship forProperty:(id)property oldDestination:(id)destination newDestination:(id)destination4;
-(void)_maintainInverseRelationship:(id)relationship forProperty:(id)property forChange:(unsigned)change onSet:(id)set;
-(void)_didChangeValue:(id)value forRelationship:(id)relationship named:(id)named withInverse:(id)inverse;
-(void)_propagateDelete:(BOOL)aDelete;
-(void)_propagateDelete;
-(void)_prepropagateDeleteForMerge;
-(void)_chainNewError:(id)error toOriginalErrorDoublePointer:(id*)originalErrorDoublePointer;
-(id)_generateErrorDetailForKey:(id)key withValue:(id)value;
-(id)_substituteEntityAndProperty:(id)property inString:(id)string;
-(id)_generateErrorWithCode:(int)code andMessage:(id)message forKey:(id)key andValue:(id)value additionalDetail:(id)detail;
-(BOOL)_validatePropertiesWithError:(id*)error;
-(BOOL)_validateForSave:(id*)save;
-(BOOL)_validateValue:(id*)value forProperty:(id)property andKey:(id)key withIndex:(unsigned)index error:(id*)error;
-(BOOL)_isKindOfEntity:(id)entity;
-(void)_updateToManyRelationship:(id)manyRelationship from:(id)from to:(id)to with:(id)with;
-(void)_genericUpdateFromSnapshot:(id)snapshot;
-(void)_updateFromSnapshot:(id)snapshot;
-(void)_updateFromToManyAwareSnapshot:(id)manyAwareSnapshot forUndo:(BOOL)undo;
-(void)_updateFromRefreshSnapshot:(id)refreshSnapshot;
@end

@interface NSManagedObject (_NSCoreDataSPI)
-(void)willFireFault;
-(void)didFireFault;
-(void)willRefresh:(BOOL)refresh;
-(void)didRefresh:(BOOL)refresh;
@end

@interface NSManagedObject (_PFDynamicAccessorsAndPropertySupport)
+(XXStruct_Iy8xuA*)_PFMOClassFactoryData;
+(Class)classForEntity:(id)entity;
+(id)_PFPlaceHolderSingleton;
+(void)_entityDeallocated;
+(id)retain;
+(BOOL)_isGeneratedClass;
+(BOOL)_isGeneratedClass_1;
+(BOOL)_useFastValidationMethod;
+(unsigned)allocBatch:(id*)batch withEntity:(id)entity count:(unsigned)count;
+(id)batchAllocateWithEntity:(id)entity insertIntoManagedObjectContext:(id)context count:(unsigned)count;
+(id)allocWithEntity:(id)entity;
+(id)_retain_1;
+(void)release;
+(void)_release_1;
+(BOOL)_hasOverriddenAwake;
+(void)_initializePrimitiveAccessorStubs;
+(void)_initializeAccessorStubs;
+(BOOL)resolveClassMethod:(SEL)method;
+(BOOL)resolveInstanceMethod:(SEL)method;
-(BOOL)_defaultValidation:(id*)validation error:(id*)error;
-(BOOL)respondsToSelector:(SEL)selector;
-(/*function-pointer*/ void*)methodForSelector:(SEL)selector;
-(id)methodSignatureForSelector:(SEL)selector;
-(BOOL)implementsSelector:(SEL)selector;
-(id)_genericValueForKey:(id)key withIndex:(long)index flags:(long)flags;
-(void)_setGenericValue:(id)value forKey:(id)key withIndex:(long)index flags:(long)flags;
@end

