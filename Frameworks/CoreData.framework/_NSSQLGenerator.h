/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import <Foundation/NSComparisonPredicate.h>

@class NSSQLAdapter, NSMutableArray, NSSQLStatement, NSSQLStoreMappingGenerator, NSMutableString, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface _NSSQLGenerator : NSComparisonPredicate {
@private
	NSSQLStatement* _statement;
	NSSQLAdapter* _adapter;
	NSMutableString* _sqlString;
	NSMutableDictionary* _aliasMap;
	NSSQLStoreMappingGenerator* _aliasNamer;
	NSMutableString* _joinClause;
	NSMutableString* _whereClause;
	NSMutableString* _selectList;
	NSMutableString* _orderByClause;
	BOOL _allowToManyKeyPath;
	BOOL _useDistinct;
	BOOL _autoDistinct;
	unsigned _scopedByORPredicate;
	NSMutableArray* _comparisonPredicateScopedItem;
}
+(void)initialize;
-(void)dealloc;
-(id)initWithStatement:(id)statement forAdapter:(id)adapter;
-(id)sqlString;
-(unsigned)sqlTypeForExpressionConstantValue:(id)expressionConstantValue;
-(void)appendWhereClause:(id)clause;
-(void)_startSQL:(id)sql;
-(void)appendSQL:(id)sql;
-(id)whereClause;
-(void)appendSelectListToSQLForRequest:(id)request;
-(void)appendJoinClauseToSQL;
-(void)appendWhereClauseToSQL;
-(void)appendOrderByClauseToSQL;
-(void)appendLimitClauseToSQL:(unsigned)sql;
-(id)_retainedPrimaryKeyNumberForObjectID:(NSScalarObjectID*)objectID;
-(id)_retainedPrimaryKeyNumberForObject:(id)object;
-(void)_preparePredicateOperator:(id)anOperator;
-(unsigned)sqlTypeForPropertyAtEndOfKeyPath:(id)keyPath;
-(void)_addBindVarForConstVal2:(id)constVal2;
-(void)_addBindVarForConstVal1:(id)constVal1;
-(void)_appendWhereClauseForConstVal:(id)constVal;
-(void)prepareInsertStatementWithRow:(id)row;
-(void)prepareInsertStatementWithCorrelation:(id)correlation;
-(void)prepareDeleteStatementWithCorrelation:(id)correlation;
-(void)buildWhereClauseWithSelectPredicate:(id)selectPredicate;
-(void)appendClause:(id)clause forProperty:(id)property keypath:(id)keypath;
-(void)addJoinForToOneRelationship:(id)oneRelationship sourcePath:(id)path destinationPath:(id)path3;
-(void)addJoinForToManyRelationship:(id)manyRelationship sourcePath:(id)path destinationPath:(id)path3;
-(void)addJoinForManyToManyRelationship:(id)manyRelationship sourcePath:(id)path destinationPath:(id)path3;
-(id)addJoinForDirectToManyToMany:(id)many;
-(BOOL)isToManyCountKeyPath:(id)manyCountKeyPath;
-(void)appendCountClause:(id)clause forToManyKeyPath:(id)manyKeyPath;
-(void)appendClause:(id)clause forKeyPath:(id)keyPath allowToMany:(BOOL)many;
-(void)appendClause:(id)clause forKeyPathExpression:(id)keyPathExpression allowToMany:(BOOL)many;
-(void)buildOrderByClauseWithSortDescriptors:(id)sortDescriptors;
-(void)buildWhereClauseWithSimplePredicate:(id)simplePredicate;
-(void)buildWhereClauseForRow:(id)row optLock:(long long)lock;
-(void)prepareUpdateStatementWithRow:(id)row originalRow:(id)row2;
-(void)prepareDeleteStatementWithRow:(id)row;
-(id)_newPredicateWithInheritanceForFetchRequest:(id)fetchRequest;
-(void)prepareSelectStatementWithFetchRequest:(id)fetchRequest ignoreInheritance:(BOOL)inheritance;
-(void)prepareCountStatementWithFetchRequest:(id)fetchRequest;
-(void)_prepareConst:(id)aConst inManyToMany:(id)many;
-(void)_prepareConst:(id)aConst inToMany:(id)many;
-(void)_prepareConst:(id)aConst inAttribute:(id)attribute sensitiveOptions:(unsigned)options;
-(id)_newWildSubStringForGlob:(id)glob wildStart:(BOOL)start wildEnd:(BOOL)end;
-(void)_prepareString:(id)string expressionPath:(id)path sensitiveOptions:(unsigned)options wildStart:(BOOL)start wildEnd:(BOOL)end allowToMany:(BOOL)many;
-(void)_appendWhereClauseForExpressionCollection:(id)expressionCollection;
-(void)_appendWhereClauseForConstantCollection:(id)constantCollection;
-(BOOL)_prepareFunctionExpression:(id)expression;
-(void)_preparePredicateExpression:(id)expression;
-(void)prepareIn:(id)anIn swap:(BOOL)swap;
-(void)prepareMatches:(id)matches;
-(void)prepareBetween:(id)between;
-(void)prepareLike:(id)like;
-(void)_prepareSubstringWith:(id)with wildStart:(BOOL)start wildEnd:(BOOL)end;
-(void)prepareBeginsWith:(id)with;
-(void)prepareEndsWith:(id)with;
-(BOOL)_isNullExpression:(id)expression;
-(void)prepareComparisonPredicate:(id)predicate;
-(id)_reducedSubpredicates:(id)subpredicates;
-(void)_preparePredicate:(id)predicate;
-(BOOL)autoDistinct;
-(void)setAutoDistinct:(BOOL)distinct;
-(BOOL)_isForeignObjectExpression:(id)expression;
-(BOOL)foldComparisonPredicate:(id)predicate;
@end

