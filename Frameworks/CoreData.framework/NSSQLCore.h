/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import "NSPersistentStore.h"

@class NSSQLRow, NSSQLEntity, NSSQLRowCache, NSSet, NSMutableArray, NSSaveChangesRequest, NSSQLAdapter, NSSQLModel, NSString, NSMutableSet, NSManagedObjectContext, NSMutableDictionary, NSSQLConnection;

__attribute__((visibility("hidden")))
@interface NSSQLCore : NSPersistentStore {
@private
	NSSQLModel* _model;
	NSSQLAdapter* _adapter;
	NSSQLConnection* _connection;
	NSMutableArray* _channels;
	NSManagedObjectContext* _currentContext;
	NSSQLEntity* _lastEntity;
	NSSQLRowCache* _rowCache;
	NSMutableDictionary* _uniqueTable;
	NSMutableArray* _toManyCache;
	CFSetRef _deleteTable;
	NSSet* _lockedObjects;
	CFDictionaryRef _dbOperationsByGlobalID;
	NSSaveChangesRequest* _currentSaveRequest;
	int _lazyFaultDebugLevel;
	NSMutableDictionary* _batchFaultBuffer;
	NSMutableDictionary* _batchToManyFaultBuffer;
	NSScalarObjectID* _currentGlobalID;
	NSSQLRow* _currentRow;
	id _observer;
	NSMutableSet* _missingObjectGIDs;
	NSMutableDictionary* _storeMetadata;
	NSMutableArray* _externalDataReferencesToSave;
	NSMutableArray* _externalDataReferencesToDelete;
	NSString* _externalDataReferencesDirectory;
	int _currentGeneration;
	int _debug;
	sqlCoreFlags _sqlCoreFlags;
}
+(void)setDebugDefault:(int)aDefault;
+(void)setColoredLoggingDefault:(BOOL)aDefault;
+(void)setSQLGenerationV1Default:(BOOL)aDefault;
+(int)debugDefault;
+(BOOL)coloredLoggingDefault;
+(BOOL)SQLGenerationV1Default;
+(void)initialize;
+(Class)migrationManagerClass;
+(BOOL)sanityCheckFileAtURL:(id)url error:(id*)error;
+(id)metadataForPersistentStoreWithURL:(id)url error:(id*)error;
+(BOOL)setMetadata:(id)metadata forPersistentStoreWithURL:(id)url error:(id*)error;
+(BOOL)_destroyPersistentStoreAtURL:(id)url error:(id*)error;
-(id)entityForFetchRequest:(id)fetchRequest;
-(id)entityForObject:(id)object;
-(id)entityForEntityDescription:(id)entityDescription;
-(id)_newAdapterForModel:(id)model;
-(id)initWithPersistentStoreCoordinator:(id)persistentStoreCoordinator configurationName:(id)name URL:(id)url options:(id)options;
-(void)_disconnect;
-(void)willRemoveFromPersistentStoreCoordinator:(id)persistentStoreCoordinator;
-(void)dealloc;
-(void)setURL:(id)url;
-(id)identifier;
-(Class)_objectIDClass;
-(id)objectIDFactoryForEntity:(id)entity;
-(Class)objectIDFactoryForSQLEntity:(id)sqlentity;
-(NSScalarObjectID*)newObjectIDForEntity:(id)entity pk:(long long)pk;
-(NSScalarObjectID*)newForeignKeyID:(long long)anId entity:(id)entity;
-(id)adapter;
-(id)model;
-(id)currentContext;
-(void)setCurrentContext:(id)context;
-(id)channels;
-(void)setExclusiveLockingMode:(BOOL)mode;
-(BOOL)load:(id*)load;
-(id)newAdapterForModel:(id)model;
-(void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;
-(void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;
-(id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id*)error;
-(const id*)knownKeyValuesForObjectID:(id)objectID withContext:(id)context;
-(id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id*)error;
-(void)_registerForAdapterContextNotifications:(id)adapterContextNotifications;
-(void)_unregisterForAdapterContextNotifications:(id)adapterContextNotifications;
-(void)registerChannel:(id)channel;
-(void)unregisterChannel:(id)channel;
-(id)rowCache;
-(id)connection;
-(void)_beginTransaction:(id)transaction;
-(void)beginTransaction;
-(void)_cleanUpAfterTransaction;
-(void)_commitTransaction:(id)transaction;
-(void)commitTransaction;
-(void)_rollbackTransaction:(id)transaction;
-(void)rollbackTransaction;
-(void)recordSnapshot:(id)snapshot forObjectID:(id)objectID;
-(void)recordToMany:(id)many forSourceObjectID:(id)sourceObjectID relationshipName:(id)name;
-(void)recordSnapshots:(id)snapshots;
-(void)forgetSnapshotForGlobalID:(id)globalID;
-(id)localSnapshotForGlobalID:(id)globalID;
-(id)rowForObjectID:(id)objectID after:(double)after;
-(id)rowForObjectID:(id)objectID;
-(id)missingObjectGlobalIDs;
-(id)createChannel;
-(id)_availableChannelFromRegisteredChannels;
-(id)_availableChannel;
-(id)_obtainOpenChannel;
-(id)availableChannel;
-(void)forgetSnapshotsForGlobalIDs:(id)globalIDs;
-(id)_prepareDictionaryResultsFromResultSet:(XXStruct_FUWWfB*)resultSet usingFetchPlan:(XXStruct_lqIlCC*)plan;
-(id)_prepareResultsFromResultSet:(XXStruct_FUWWfB*)resultSet usingFetchPlan:(XXStruct_lqIlCC*)plan withMatchingRows:(id*)matchingRows;
-(id)_newRowsForFetchPlan:(XXStruct_lqIlCC*)fetchPlan selectedBy:(SEL)by withArgument:(id)argument;
-(id)countForFetchRequest:(id)fetchRequest inContext:(id)context;
-(void)invalidateObjectsWithGlobalIDs:(id)globalIDs;
-(void)_assertValidStateWithSelector:(SEL)selector;
-(void)_cleanUpAfterSave;
-(id)_databaseContextState;
-(id)_addDatabaseContextStateToException:(id)exception;
-(long long)_knownPrimaryKeyForObjectID:(id)objectID;
-(long long)_knownPrimaryKeyForObject:(id)object;
-(unsigned)_knownEntityKeyForObjectID:(id)objectID;
-(unsigned)_knownEntityKeyForObject:(id)object;
-(void)recordPrimaryKey:(long long)key forInsertedObject:(id)insertedObject withSQLEntity:(id)sqlentity;
-(void)_populateRowForOp:(id)op withObject:(id)object;
-(void)recordDeleteForObject:(id)object;
-(void)recordDatabaseOperation:(id)operation;
-(id)databaseOperationForGlobalID:(id)globalID;
-(id)databaseOperationForObject:(id)object;
-(void)recordToManyInsertsForObject:(id)object withOperation:(id)operation;
-(void)recordToManyUpdatesForObject:(id)object withOperation:(id)operation;
-(void)recordUpdateForObject:(id)object;
-(void)recordValuesForInsertedObject:(id)insertedObject;
-(id)_predicateForSelectingObjectForOperation:(id)operation;
-(void)_addUpdatesToDatabaseOp:(id)databaseOp forManyToMany:(id)many;
-(void)_addInsertsToDatabaseOp:(id)databaseOp forManyToMany:(id)many;
-(void)_addDeletesToDatabaseOp:(id)databaseOp forManyToMany:(id)many;
-(void)_addManyToManysToDatabaseOp:(id)databaseOp;
-(void)createAdapterOperationsForDatabaseOperation:(id)databaseOperation;
-(void)insertEntity:(id)entity intoOrderingArray:(id)array withDependencies:(id)dependencies processingSet:(id)set;
-(id)entityNameOrderingArrayForEntities:(id)entities;
-(id)orderAdapterOperations;
-(BOOL)ownsGlobalID:(id)anId;
-(BOOL)ownsObject:(id)object;
-(BOOL)handlesFetchRequest:(id)request;
-(void)generatePrimaryKeysForEntity:(id)entity;
-(void)prepareForSave:(id)save;
-(id)_entityForObject:(id)object;
-(void)recordChangesInContext:(id)context;
-(CFArrayRef)_rowsForConflictDetection:(id)conflictDetection withChannel:(id)channel;
-(BOOL)_performFastConflictDetectionForObjects:(id)objects withChannel:(id)channel;
-(id)_newObjectGraphStyleForSQLRow:(id)sqlrow withObject:(id)object;
-(id)_newConflictRecordForObject:(id)object originalRow:(id)row newRow:(id)row3;
-(id)_performExhaustiveConflictDetectionForObjects:(id)objects withChannel:(id)channel;
-(void)_performChangesWithAdapterOps:(id)adapterOps;
-(void)performChanges;
-(void)rollbackChanges;
-(void)commitChanges:(id)changes;
-(id)objectsForFetchRequest:(id)fetchRequest inContext:(id)context;
-(id)newRowsForFetchPlan:(void*)fetchPlan;
-(id)externalDataReferencesDirectory;
-(id)externalDataReferencesToSave;
-(id)externalDataReferencesToDelete;
-(id)writeExternalDataReferences;
-(void)deleteExternalDataReferences:(id)references;
-(id)saveChanges:(id)changes;
-(id)refreshObjects:(id)objects;
-(id)executeRequest:(id)request withContext:(id)context error:(id*)error;
-(void)_repairDatabaseCorrelationTables:(id)tables brokenHashModel:(id)model storeVersionNumber:(id)number recurse:(BOOL)recurse;
-(id)_dissectCorrelationTableCreationSQL:(id)sql;
-(id)_collectSkewedComponents:(id*)components;
-(void)_checkAndRepairCorrelationTables:(BOOL)tables storeVersionNumber:(id)number;
-(void)_ensureDatabaseMatchesModel;
-(void)_setMetadata:(id)metadata;
-(void)setMetadata:(id)metadata;
-(void)_loadOrSetMetadata;
-(void)_ensureMetadataLoaded;
-(id)metadata;
-(id)databaseUUID;
-(void)setDatabaseUUID:(id)uuid;
-(id)fetchRowForObjectID:(NSScalarObjectID*)objectID;
-(id)rawSQLTextForToManyFaultStatement:(id)manyFaultStatement stripBindVariables:(BOOL)variables swapEKPK:(BOOL)ekpk;
-(id)hackQueryForManyToManyPrefetching:(id)manyPrefetching andSourceObjectIDs:(id)ids;
-(id)newObjectIDSetsForToManyPrefetchingRequest:(id)manyPrefetchingRequest andSourceObjectIDs:(id)ids;
-(id)newFaultingPredicateForSourceID:(NSScalarObjectID*)sourceID andRelationship:(id)relationship;
-(id)newFetchedPKsForSourceID:(NSScalarObjectID*)sourceID andRelationship:(id)relationship;
-(id)type;
-(void)_prefetchRelationshipKey:(id)key sourceEntityDescription:(id)description sourceObjectIDs:(id)ids prefetchRelationshipKeys:(id)keys inContext:(id)context;
-(void)_prefetchWithFetchRequest:(id)fetchRequest withObjectIDs:(id)objectIDs inContext:(id)context;
-(id)obtainPermanentIDsForObjects:(id)objects error:(id*)error;
-(void)_purgeRowCache;
-(void)_performPostSaveTasks;
@end

