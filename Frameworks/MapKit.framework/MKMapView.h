/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MapKit.framework/MapKit
 */

#import "MapKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "NSCoding.h"
#import "MKMapView.h"

@class MKUserLocation, NSArray, CLLocation, MKMapViewInternal, MKUserLocationView, MKMapViewPositioningChange;
@protocol MKMapViewDelegate;

@interface MKMapView : XXUnknownSuperclass <NSCoding> {
@private
	MKMapViewInternal* _internal;
}
@property(readonly, assign, nonatomic) MKUserLocation* userLocation;
@property(readonly, assign, nonatomic) CGRect annotationVisibleRect;
@property(copy, nonatomic) NSArray* selectedAnnotations;
@property(readonly, assign, nonatomic) NSArray* annotations;
@property(readonly, assign, nonatomic, getter=isUserLocationVisible) BOOL userLocationVisible;
@property(assign, nonatomic) BOOL showsUserLocation;
@property(assign, nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
@property(assign, nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;
@property(assign, nonatomic) XXStruct_Yvvv9D visibleMapRect;
@property(assign, nonatomic) CADoublePoint centerCoordinate;
@property(assign, nonatomic) XXStruct_Yvvv9D region;
@property(assign, nonatomic) unsigned mapType;
@property(assign, nonatomic) id<MKMapViewDelegate> delegate;
+(void)initialize;
+(unsigned)minZoomLevel;
+(unsigned)minZoomLevelForMapType:(unsigned)mapType;
+(unsigned)minZoomLevelForMapType:(unsigned)mapType viewSize:(CGSize)size;
+(double)userLocationCacheDuration;
+(void)setUserLocationCacheDuration:(double)duration;
+(void)_handleMemoryWarning:(id)warning;
+(XXStruct_Yvvv9D)regionThatFitsMapType:(unsigned)type viewSize:(CGSize)size region:(XXStruct_Yvvv9D)region;
+(void)applicationDidEnterBackground:(id)application;
+(void)applicationDidTakeSuspensionSnapshot:(id)application;
+(void)applicationDidBecomeActive:(id)application;
+(void)applicationWillTerminate:(id)application;
-(void)_registerForGlobalNotifications;
-(id)_initAndEnableLoading:(BOOL)loading startGMMSession:(BOOL)session;
-(id)initWithFrame:(CGRect)frame;
-(id)initFromIBWithFrame:(CGRect)frame;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(id)awakeAfterUsingCoder:(id)coder;
-(void)dealloc;
-(BOOL)_annotationViewsAreAddedImmediately;
-(void)set_annotationViewsAreAddedImmediately:(BOOL)immediately;
-(void)_setCalloutViewClass:(Class)aClass;
-(Class)_calloutViewClass;
-(id)_annotationTimer;
-(void)set_annotationTimer:(id)timer;
-(id)_defaultLocationTimer;
-(void)set_defaultLocationTimer:(id)timer;
-(id)_hasTrafficRequester;
-(void)set_hasTrafficRequester:(id)requester;
-(int)_interfaceOrientation;
-(BOOL)_useGridBackground;
-(void)_updateGridBackground;
-(void)_updateGridBackground:(BOOL)background;
-(BOOL)_drawGridBackground;
-(void)set_drawGridBackground:(BOOL)background;
-(void)_updateBackgroundFillColor;
-(void)set_drawGridBackground:(BOOL)background force:(BOOL)force;
-(BOOL)showsBadge;
-(void)setShowsBadge:(BOOL)badge;
-(BOOL)showsCopyright;
-(void)setShowsCopyright:(BOOL)copyright;
-(BOOL)pansAndZoomsToRouteOverview;
-(void)setPansAndZoomsToRouteOverview:(BOOL)routeOverview;
-(BOOL)routeStartStepIsActive;
-(void)setRouteStartStepIsActive:(BOOL)active;
-(BOOL)showsPinAtRouteStart;
-(void)setShowsPinAtRouteStart:(BOOL)routeStart;
-(BOOL)showsPinAtRouteEnd;
-(void)setShowsPinAtRouteEnd:(BOOL)routeEnd;
-(BOOL)_canDrawOnMainThread;
-(void)set_canDrawOnMainThread:(BOOL)thread;
-(void)_setMapType:(unsigned)type onInit:(BOOL)init;
-(BOOL)isShowingTraffic;
-(void)setShowingTraffic:(BOOL)traffic;
-(BOOL)checksForTraffic;
-(void)setChecksForTraffic:(BOOL)traffic;
-(int)animationType;
-(void)_setAnimationType:(int)type;
-(BOOL)isRouteAnimating;
-(CGPoint)_routePositionCenter;
-(BOOL)_needsToPanRoutePositionView;
-(int)trafficStatus;
-(void)setTrafficStatus:(int)status;
-(void)didSetTrafficStatus;
-(id)_startIdleTimer;
-(void)set_startIdleTimer:(id)timer;
-(id)_displayPromiseTimer;
-(void)set_displayPromiseTimer:(id)timer;
-(BOOL)effectsEnabled;
-(void)setSuspended:(BOOL)suspended;
-(BOOL)isLoadingEnabled;
-(void)setLoadingEnabled:(BOOL)enabled;
-(void)_setEventMode:(int)mode;
-(BOOL)isZooming;
-(BOOL)isScrolling;
-(BOOL)isRegionChanging;
-(BOOL)isGoingToDefaultLocation;
-(BOOL)_wasScrolling;
-(BOOL)_isVisible;
-(BOOL)_isMapRendering;
-(BOOL)_isScrollingAnimation;
-(void)_setScrolling:(BOOL)scrolling;
-(void)_setScrolling:(BOOL)scrolling animated:(BOOL)animated;
-(id)visibleView;
-(CGPoint)_centerPoint;
-(CGPoint)_centerPointOffset;
-(CGPoint)centerLongLat;
-(float)minZoomLevel;
-(float)maxZoomLevel;
-(float)_maxZoomLevelForCurrentPosition;
-(int)_roundedZoomLevel;
-(id)_mapTileView;
-(CADoublePoint)longLatSpan;
-(BOOL)_isHandlingUserEvent;
-(BOOL)_isTrafficVisible;
-(id)mapInfo;
-(int)_rotationState;
-(void)set_rotationState:(int)state;
-(float)_zoomScale;
-(void)set_zoomScale:(float)scale;
-(float)_zoomLevel;
-(void)_setZoomLevel:(float)level duration:(double)duration;
-(void)_setShowingRoute:(BOOL)route animate:(BOOL)animate;
-(void)setShowingRoute:(BOOL)route animate:(BOOL)animate includingPins:(BOOL)pins;
-(void)setSearchMode:(int)mode;
-(CADoublePoint)pinDroppingLongLat;
-(BOOL)pansAndZoomsToRouteStep;
-(void)setPansAndZoomsToRouteStep:(BOOL)routeStep;
-(void)setBounds:(CGRect)bounds;
-(void)setFrame:(CGRect)frame;
-(CGRect)centeringRect;
-(void)setCenteringRect:(CGRect)rect;
-(int)userTrackingMode;
-(void)setUserTrackingMode:(int)mode;
-(void)setUserTrackingMode:(int)mode animated:(BOOL)animated;
-(void)_setUserTrackingMode:(int)mode animated:(BOOL)animated fromTrackingButton:(BOOL)trackingButton;
-(void)_setUserTrackingMode:(int)mode animated:(BOOL)animated shouldZoom:(BOOL)zoom fromTrackingButton:(BOOL)trackingButton;
-(id)_trafficAvailabilityTimer;
-(void)set_trafficAvailabilityTimer:(id)timer;
-(id)annotationContainer;
-(id)_touchRecepientAnnotationView;
-(void)set_touchRecepientAnnotationView:(id)view;
-(void)_configureGestureRecognizers;
-(void)_dropDraggingAnnotationView:(BOOL)view;
-(void)_handleLongPressDidEnd;
-(void)handleLongPress:(id)press;
-(BOOL)calloutViewContainsPoint:(CGPoint)point;
-(BOOL)calloutViewIsExpanded;
-(void)handleTap:(id)tap;
-(void)handleDoubleTap:(id)tap;
-(void)handleTwoFingerTap:(id)tap;
-(void)_scrollViewTouchesBegan:(id)began withEvent:(id)event;
-(void)_scrollViewTouchesEnded:(id)ended withEvent:(id)event cancelled:(BOOL)cancelled;
-(void)_scrollViewTouchesCancelled:(id)cancelled withEvent:(id)event;
-(void)_scrollViewTouchesEnded:(id)ended withEvent:(id)event;
-(void)_willChangeRegionAnimated:(BOOL)animated userInitiated:(BOOL)initiated;
-(void)_didChangeRegionMidstream:(BOOL)midstream centerPoint:(CADoublePoint)point;
-(void)_didChangeRegionMidstream:(BOOL)midstream;
-(void)_willStartZoom:(BOOL)zoom;
-(void)_didEndZoom;
-(void)deferred_animateRoutePositionViewPan;
-(void)_willStartScroll:(BOOL)scroll;
-(void)_didEndScroll;
-(void)_willStartUserInteraction;
-(void)_didEndUserInteraction;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(void)_handleThermalCondition;
-(void)_startThermalHandling;
-(void)_stopThermalHandling;
-(float)_maxZoomLevelForCoordinate:(CADoublePoint)coordinate;
-(float)_boundedZoomLevel:(float)level;
-(float)_boundedZoomLevel:(float)level longLat:(CGPoint)lat;
-(float)_boundedZoomLevel:(float)level coordinate:(CADoublePoint)coordinate;
-(float)_boundedZoomLevelUsingCurrentPosition:(float)position;
-(void)_updateTraffic;
-(void)_resetRouteLoader;
-(void)_updateTrafficAvailable;
-(void)_scheduleCheckTrafficAvailable;
-(void)_updateScrollingAndGestures;
-(BOOL)_animationTypeIgnoresEvents:(int)events;
-(void)_switchToAnimationType:(int)animationType;
-(void)_updateRouteView;
-(void)_updateRoutePositionView;
-(void)_updateRoutePosition;
-(void)_updateAccessories;
-(void)_updateAnnotationContainerView;
-(void)_updateTrafficDisplay;
-(void)_updateShouldDisplayEffects;
-(void)_adjustPositionViewWithPreviousScrollerOffset:(CGPoint)previousScrollerOffset;
-(void)_scheduleStartIdle;
-(void)_cancelStartIdle;
-(void)_startIdle;
-(void)_stopIdle;
-(void)_updateIdle;
-(CGPoint)_scrollViewOffsetForOffset:(CGPoint)offset;
-(CGPoint)_scrollViewOffsetForPoint:(CGPoint)point;
-(CGPoint)_scrollViewCenterForCenterPoint:(CGPoint)centerPoint zoomScale:(float)scale;
-(CGPoint)_scrollViewCenterForCenterMapPoint:(CADoublePoint)centerMapPoint zoomScale:(float)scale;
-(CGPoint)_scrollViewOffsetForCenterPoint:(CGPoint)centerPoint;
-(CGPoint)_scrollViewOffsetForCenterCoordinate:(CADoublePoint)centerCoordinate;
-(CGPoint)_scrollViewOffsetForCenterMapPoint:(CADoublePoint)centerMapPoint;
-(void)_setScrollViewOffset:(CGPoint)offset;
-(void)_setScrollViewCenterMapPoint:(CADoublePoint)point;
-(void)scrollViewDidZoom:(id)scrollView;
-(void)_processDisplayPromise;
-(void)_removeDisplayPromises;
-(void)_scheduleDisplayPromise:(id)promise;
-(void)_cancelAnimations;
-(void)_setZoomScale:(float)scale centerCoordinate:(CADoublePoint)coordinate duration:(double)duration animationType:(int)type;
-(void)_setZoomScale:(float)scale centerMapPoint:(CADoublePoint)point duration:(double)duration animationType:(int)type;
-(BOOL)annotationContainerEffectsEnabled:(id)enabled;
-(BOOL)annotationContainerIsRotated:(id)rotated;
-(void)startEffects;
-(void)stopEffects;
-(void)startIdle;
-(void)stopIdle:(BOOL)idle;
-(void)stopIdle;
-(void)_clearEventMode:(int)mode;
-(void)_cancelAccessories;
-(void)_cancelDoubleTap;
-(void)_cancelAccessoriesAndDoubleTap;
-(id)_stringWithEventMode:(int)eventMode;
-(void)_didDisplayMapAtCoordinate:(CADoublePoint)coordinate zoomLevel:(unsigned)level size:(CGSize)size;
-(void)_didLoadOrMoveMap;
-(BOOL)callsDelegateForAllRegionChanges;
-(void)setCallsDelegateForAllRegionChanges:(BOOL)allRegionChanges;
-(BOOL)_animateScrollToOffset:(CGPoint)offset duration:(double)duration type:(int)type;
-(BOOL)_shouldConservePowerAnimationType:(int)type;
-(BOOL)_animateScrollToOffset:(CGPoint)offset duration:(double)duration type:(int)type context:(id)context;
-(void)animationDidStop:(id)animation finished:(BOOL)finished;
-(void)_clearFixedUserLocation;
-(void)_fixUserLocationFromPresentationValue;
-(void)_synchronizeScrollingAnimation:(BOOL)animation includePositionView:(BOOL)view;
-(void)_freezeScrollingAnimation;
-(void)_removeScrollingAnimation;
-(void)_cancelScrollingAnimation;
-(void)scrollWithOffset:(CGPoint)offset andAnimationType:(int)type;
-(float)pointDistanceFromCoordinate:(CADoublePoint)coordinate toCoordinate:(CADoublePoint)coordinate2;
-(void)_freezeUserLocationView;
-(void)_updateBadgeFrame;
-(void)_updateCopyrightFrame;
-(int)_viewIndexForSubview:(id)subview;
-(void)_insertSubview:(id)subview;
-(void)_updateContentBounds;
-(int)_maxZoomLevelForMapType:(unsigned)mapType;
-(void)_populateArchivedSubviews:(id)subviews;
-(void)_handleMemoryWarning:(id)warning;
-(double)_panDurationFromPoint:(CGPoint)point toPoint:(CGPoint)point2 forRoute:(BOOL)route;
-(float)_zoomLevelForCenterCoordinate:(CADoublePoint)centerCoordinate topLeftCoordinate:(CADoublePoint)coordinate bottomRightCoordinate:(CADoublePoint)coordinate3 includeAccessoryPadding:(BOOL)padding;
-(float)_zoomLevelForRegion:(XXStruct_Yvvv9D)region includeAccessoryPadding:(BOOL)padding;
-(BOOL)goToCenterCoordinate:(CADoublePoint)centerCoordinate zoomLevel:(float)level animationType:(int)type;
-(BOOL)goToCenterCoordinate:(CADoublePoint)centerCoordinate longLatSpan:(CGSize)span animationType:(int)type;
-(double)_goToCenterCoordinate:(CADoublePoint)centerCoordinate zoomLevel:(float)level animationType:(int)type;
-(void)_resumeSearchResultProcessingAndPinDropAnimations;
-(void)_suspendSearchResultsProcessingAndPinDropAnimations;
-(CADoublePoint)_zoomCenterPointWithAnchor:(int)anchor point:(CGPoint)point zoomScale:(float)scale;
-(void)pauseUserLocationUpdates;
-(void)resumeUserLocationUpdates;
-(void)_notifyWillPanRoutePositionWithDuration:(double)_notify;
-(void)_animateRoutePositionViewPan;
-(void)_cleanupAfterRVBAnimation:(BOOL)animation;
-(void)animationDidStop:(id)animation finished:(id)finished context:(void*)context;
-(void)_selectUserLocationTypeWithDeltaZoomLevel:(float)deltaZoomLevel;
-(void)_zoomToNextLevel:(int)nextLevel tapCentroid:(CGPoint)centroid;
-(void)_userScrollingEnded;
-(void)_reachabilityChanged:(id)changed;
-(void)_updateCenteredAttributesWithCoordinate:(CADoublePoint)coordinate;
-(void)_updateMaximumZoomScale;
-(void)_updateRotationAttributes:(CADoublePoint)attributes;
-(void)_sizeWillChange;
-(void)_sizeDidChangeWithCenterCoordinate:(CADoublePoint)_size;
-(void)_willShowRoute;
-(void)_didShowRoute;
-(void)_willHideRoute;
-(void)_didHideRoute;
-(void)updateBubblePinInVisibleRect;
-(void)_showAddedAnnotationsAndRouteAnimated:(BOOL)animated;
-(void)_showAddedAnnotationsAnimated:(BOOL)animated;
-(void)dropPinsForSearchResults:(id)searchResults animate:(BOOL)animate;
-(void)dropPinsForSearchResults:(id)searchResults selectedSearchResult:(id)result animate:(BOOL)animate;
-(void)dropCustomPinForSearchResult:(id)searchResult animate:(BOOL)animate;
-(void)goToBookmark:(id)bookmark;
-(unsigned)_visibleSearchResultsCount:(id)count forZoomLevel:(int)zoomLevel returnVisibleSearchResults:(id)results;
-(void)dropPinsForRouteFromSearchResult:(id)searchResult toSearchResult:(id)searchResult2 animate:(BOOL)animate;
-(XXStruct_3X26yA)_zoomRegionForStep:(id)step inRoute:(id)route;
-(void)goToRouteStepAnimated:(BOOL)routeStepAnimated;
-(void)updateTiling;
-(void)centerSelectedPinInRect:(CGRect)rect;
-(int)goToSearchResults:(id)searchResults centerLongLat:(CGPoint)lat longLatSpan:(CGSize)span;
-(void)dropPinsForSearchResults:(id)searchResults centerLongLat:(CGPoint)lat longLatSpan:(CGSize)span selectedSearchResult:(id)result selectedSearchResultReturn:(id*)aReturn animate:(BOOL)animate;
-(void)_notifyMapRotationChange:(id)change;
-(void)mapTileViewDidChangeZoomScale:(id)mapTileView;
-(void)mapTileViewDidStartRendering:(id)mapTileView;
-(void)mapTileViewDidFinishRendering:(id)mapTileView;
-(void)_updateAttribution;
-(void)_fadeInCopyrightlabelAfterDelay:(id)copyrightlabelAfterDelay;
-(void)_fadeInCopyrightlabel;
-(void)mapTileViewDidStartLoading:(id)mapTileView;
-(void)mapTileViewDidFinishLoading:(id)mapTileView;
-(void)mapTileViewDidFailLoading:(id)mapTileView withError:(id)error;
-(void)routeLoaderDidStartLoading:(id)routeLoader;
-(void)routeLoaderDidStopLoading:(id)routeLoader;
-(void)applicationWillResignActive:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationDidBecomeActive:(id)application;
-(void)applicationWillTerminate:(id)application;
-(CGRect)visibleRectInView:(id)view;
-(CGRect)visibleCenteringRectInView:(id)view;
-(BOOL)annotationContainerDidScrollOrZoom:(id)annotationContainer;
-(void)annotationContainer:(id)container scrollToRevealCalloutWithOffset:(CGPoint)offset;
-(void)annotationContainerWillAnimateBubble:(id)annotationContainer;
-(void)annotationContainerDidAnimateBubble:(id)annotationContainer;
-(CGRect)annotationContainerVisibleRect:(id)rect;
-(CGPoint)annotationContainerCenterLongLat:(id)lat;
-(CADoublePoint)annotationContainerLongLatSpan:(id)span;
-(CGPoint)visiblePointForPoint:(CGPoint)point inAnnotationContainer:(id)annotationContainer;
-(CGPoint)pointInAnnotationContainer:(id)annotationContainer forVisiblePoint:(CGPoint)visiblePoint;
-(void)annotationContainerWillDropPins:(id)annotationContainer;
-(void)annotationContainerDidDropPins:(id)annotationContainer;
-(void)annotationContainer:(id)container annotationView:(id)view calloutAccessoryControlTapped:(id)tapped;
-(void)annotationContainer:(id)container didSelectSearchResult:(id)result userInitiated:(BOOL)initiated;
-(id)annotationContainer:(id)container viewForAnnotation:(id)annotation;
-(void)annotationContainer:(id)container didAddAnnotationViews:(id)views;
-(void)annotationContainer:(id)container didSelectAnnotationView:(id)view;
-(void)annotationContainer:(id)container didDeselectAnnotationView:(id)view;
-(BOOL)scrollViewShouldScrollToTop:(id)scrollView;
-(id)viewForZoomingInScrollView:(id)scrollView;
-(void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;
-(void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(void)_layoutScrollViewSubviews:(id)subviews;
-(void)goToDefaultLocation;
-(void)setCenterCoordinate:(CADoublePoint)coordinate animated:(BOOL)animated;
-(CADoublePoint)_centerMapPoint;
-(void)setRegion:(XXStruct_Yvvv9D)region animated:(BOOL)animated;
-(XXStruct_Yvvv9D)regionThatFits:(XXStruct_Yvvv9D)fits;
-(BOOL)goToRegion:(XXStruct_Yvvv9D)region animationType:(int)type;
-(id)annotationsInMapRect:(XXStruct_Yvvv9D)mapRect;
-(CGPoint)convertCoordinate:(CADoublePoint)coordinate toPointToView:(id)view;
-(CADoublePoint)convertPoint:(CGPoint)point toCoordinateFromView:(id)view;
-(CGRect)convertRegion:(XXStruct_Yvvv9D)region toRectToView:(id)view;
-(XXStruct_Yvvv9D)convertRect:(CGRect)rect toRegionFromView:(id)view;
-(void)selectAnnotation:(id)annotation animated:(BOOL)animated;
-(void)deselectAnnotation:(id)annotation animated:(BOOL)animated;
-(void)addAnnotation:(id)annotation;
-(void)addAnnotations:(id)annotations;
-(void)removeAnnotation:(id)annotation;
-(void)removeAnnotations:(id)annotations;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)identifier;
-(id)viewForAnnotation:(id)annotation;
-(BOOL)recalculatesRouteStepZoomLevels;
-(void)setRecalculatesRouteStepZoomLevels:(BOOL)levels;
-(void)layoutSubviews;
-(void)drawRect:(CGRect)rect forViewPrintFormatter:(id)viewPrintFormatter;
-(XXStruct_3X26yA)_zoomRegionForMapRect:(XXStruct_Yvvv9D)mapRect edgePadding:(UIEdgeInsets)padding maxZoomLevel:(int)level minZoomLevel:(int)level4;
-(XXStruct_Yvvv9D)mapRectThatFits:(XXStruct_Yvvv9D)fits edgePadding:(UIEdgeInsets)padding;
-(XXStruct_Yvvv9D)mapRectThatFits:(XXStruct_Yvvv9D)fits;
-(void)setVisibleMapRect:(XXStruct_Yvvv9D)rect edgePadding:(UIEdgeInsets)padding animated:(BOOL)animated;
-(XXStruct_Yvvv9D)_visibleUnderRotationMapRect;
-(void)setVisibleMapRect:(XXStruct_Yvvv9D)rect animated:(BOOL)animated;
@end

@interface MKMapView (UserPositioningInternal)
@property(retain, nonatomic) MKUserLocationView* userLocationView;
@property(retain, nonatomic) MKMapViewPositioningChange* positioningChange;
@property(readonly, assign, nonatomic, getter=isUserLocationChangeDone) BOOL userLocationChangeDone;
@property(assign, nonatomic) BOOL liveTrackingAutoSelectZoomLevel;
@property(assign, nonatomic) BOOL ignoreLocationUpdates;
@property(retain, nonatomic) CLLocation* fixedUserLocation;
@property(assign, nonatomic) int userLocationSource;
@property(retain, nonatomic) CLLocation* predictedUserLocation;
-(void)disableLiveTracking;
-(BOOL)hasUserSpecifiedZoomLevel;
-(void)setHasUserSpecifiedZoomLevel:(BOOL)level;
-(void)enableLocationConsole;
-(id)descriptionForLocation:(id)location compact:(BOOL)compact;
-(void)_updateLocationConsole;
-(void)_userLocationViewDidAppear:(id)_userLocationView;
-(void)_userLocationViewWillDisappear:(id)_userLocationView;
-(void)_ensureLiveTrackingResourcesInitialized;
-(BOOL)_isUserLocationInView:(BOOL)view;
-(BOOL)_isLocationCoordinatesInView:(id)view;
-(BOOL)_isUserLocationCoordinateInView;
-(BOOL)isBoundedByUserLocation;
-(BOOL)isUserLocationBounded;
-(BOOL)isUserLocationVisible;
-(BOOL)isUserLocationViewCentered;
-(BOOL)isUserPresentationVisible;
-(BOOL)isRunningPositioningChange;
-(BOOL)hasUserLocation;
-(BOOL)isTrackingUserLocation;
-(BOOL)isCachedUserLocation;
-(id)userLocation;
-(CGPoint)userPosition;
-(void)_resetPositioningChange;
-(void)resetUserLocation;
-(BOOL)isUserLocationStale;
-(float)_zoomLevelForLocation:(id)location previousLocation:(id)location2;
-(BOOL)_shouldZoomOnLiveTracking;
-(void)_goToUserLocation:(BOOL)userLocation shouldZoom:(BOOL)zoom;
-(void)_scrollToUserLocation;
-(void)goToUserLocation;
-(void)removeUserLocation;
-(void)_scheduleScrollToReCenterUser;
-(void)_cancelScrollToReCenterUser;
-(void)_runPositioningChangeIfNeeded;
-(void)_runPositioningChangeIfNeeded:(id)needed;
-(void)_scheduleRunPositioningChange:(id)change delay:(double)delay;
-(void)_scheduleRunPositioningChange;
-(void)_cancelRunPositioningChange;
-(BOOL)isScrollToUserCenterPending;
-(void)_scheduleScrollToReCenterUserIfNeeded;
-(id)_scrollToReCenterUserTimer;
-(void)set_scrollToReCenterUserTimer:(id)reCenterUserTimer;
-(id)_positioningChangeTimer;
-(void)set_positioningChangeTimer:(id)timer;
-(BOOL)_isUserLocationNearPoint:(CGPoint)point hitSize:(float)size;
-(BOOL)_isUserLocationNearEventPoint:(CGPoint)point;
-(void)_goToCurrentLocationOnTransitionEnd;
-(void)userLocationViewAccuracyDidUpdate:(id)userLocationViewAccuracy;
-(void)userLocationViewDidQuiesce:(id)userLocationView;
-(float)_zoomLevelForUserLocation:(id)userLocation distanceHysteresis:(BOOL)hysteresis positionViewHysteresis:(BOOL)hysteresis3;
-(void)_updatePositioningChangeMetadata:(id)metadata;
-(BOOL)_shouldChangeZoomLevel:(float*)level withChange:(id)change;
-(BOOL)_isHovering;
-(BOOL)_isHoverScheduled;
-(BOOL)_isOrWillHover;
-(void)_stopHover;
-(BOOL)_hasHovered;
-(id)_positioningChange:(BOOL)change;
-(id)_positioningChangeWithLocation:(id)location source:(int)source hasFocus:(BOOL)focus isUpdated:(BOOL)updated;
-(void)_startPositioningChange:(id)change;
-(BOOL)annotationContainerIsUserLocationChangeDone:(id)done;
-(BOOL)_isReadyToRunPositioningChange;
-(BOOL)_haveNewPendingLocation;
-(void)_pauseUserLocationUpdates;
-(void)_resumeUserLocationUpdates:(BOOL)updates;
-(void)_startHoverExpirationTimerWithDuration:(double)duration change:(id)change;
-(void)_stopHoverWithChange:(id)change;
-(id)_hoverExpirationTimer;
-(void)set_hoverExpirationTimer:(id)timer;
-(void)onMapAddView:(id)view change:(id)change;
-(void)_runPositioningChange;
-(void)_updatePositioningChangeMetrics:(id)metrics;
-(BOOL)_deviceIsPluggedIn;
-(void)locationManagerUpdatedLocation:(id)location;
-(void)locationManagerFailedToUpdateLocation:(id)updateLocation withError:(id)error;
-(void)locationManagerDidReset:(id)locationManager;
@end

@interface MKMapView (UserPositioning)
-(void)startUpdatingUserLocation;
-(void)stopUpdatingUserLocation;
@end

@interface MKMapView (MKHeadingAdditions)
-(BOOL)canRotateForHeading;
-(CGRect)contentBounds;
-(BOOL)shouldRotateForHeading;
-(void)setShouldRotateForHeading:(BOOL)rotateForHeading;
-(void)pauseUserHeadingUpdates;
-(void)resumeUserHeadingUpdates;
-(void)_setContentAnchorPoint:(CGPoint)point;
-(void)_resetMapAnchorPoint:(BOOL)point;
-(CGPoint)_anchorWithContentPoint:(CGPoint)contentPoint;
-(CGPoint)userLocationAnchorPoint;
-(CGPoint)visualAnchorPoint;
-(void)_updateMapAnchorPoint:(CGPoint)point;
-(void)_updateMapAnchorCoordinate:(CADoublePoint)coordinate;
-(void)_updateMapAnchorPoint;
-(void)disableHeadingTracking:(BOOL)tracking;
-(void)disableMapRotation:(BOOL)rotation;
-(void)enableMapRotationIfNeeded;
-(void)_startTrackingHeading;
-(void)_stopTrackingHeading;
-(BOOL)_rotationPossible;
-(BOOL)_updateRotationSupported;
-(void)_finalizeChange:(id)change rotation:(float)rotation layer:(id)layer type:(int)type;
-(void)_applyHeadingChange:(id)change layer:(id)layer annotationViews:(id)views cc:(BOOL)cc delegate:(BOOL)delegate rotationType:(int)type;
-(void)_stopRotationLayer:(id)layer annotationViews:(id)views;
-(void)_updateAngularVelocityWithAnimation:(id)animation;
-(void)_updateRotationType:(int)type change:(id)change;
-(void)_resetAnnotationContainerPerspective;
-(void)_updateAnnotationContainerPerspective;
-(void)_updateHeading:(id)heading rotationType:(int)type animated:(BOOL)animated;
-(void)_considerMovingToThrottledHeading;
-(void)locationManagerUpdatedHeading:(id)heading;
-(void)locationManagerFailedToUpdateHeading:(id)updateHeading withError:(id)error;
@end

@interface MKMapView (OverlaysAPI)
@property(readonly, assign, nonatomic) NSArray* overlays;
-(void)addOverlay:(id)overlay;
-(void)addOverlays:(id)overlays;
-(void)removeOverlay:(id)overlay;
-(void)removeOverlays:(id)overlays;
-(void)insertOverlay:(id)overlay atIndex:(unsigned)index;
-(void)exchangeOverlayAtIndex:(unsigned)index withOverlayAtIndex:(unsigned)index2;
-(void)insertOverlay:(id)overlay aboveOverlay:(id)overlay2;
-(void)insertOverlay:(id)overlay belowOverlay:(id)overlay2;
-(id)viewForOverlay:(id)overlay;
@end

@interface MKMapView (OverlaysInternal)
-(id)overlayContainer;
-(id)createViewForOverlay:(id)overlay;
-(void)overlayContainerAddedViews:(id)views;
@end

