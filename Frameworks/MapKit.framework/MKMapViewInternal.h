/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MapKit.framework/MapKit
 */

#import "PBRequesterDelegate.h"
#import "UILongPressGestureRecognizerDelegate.h"
#import "UITextFieldDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "MapKit-Structs.h"

@class UIEvent, MKAnnotationContainerView, UIColor, MKMapViewPositioningChange, MKMapTileView, NSMutableArray, NSTimer, MKOverlayContainerView, UIView, UIImageView, MKScrollView, MKAnnotationView, UILabel, GMMRequester, MKRouteOverlayView, MKMapView, MKRouteLoader, UITextField, NSArray, UILongPressGestureRecognizer, MKSearchResult, UITapGestureRecognizer, UITouch;
@protocol MKMapViewDelegate, MKOverlay, MKMapViewDelegatePrivate;

__attribute__((visibility("hidden")))
@interface MKMapViewInternal : XXUnknownSuperclass <UITextFieldDelegate, PBRequesterDelegate, UILongPressGestureRecognizerDelegate> {
@private
	MKMapView* view;
	UIView* contentView;
	MKScrollView* scrollView;
	MKMapTileView* mapTileView;
	MKAnnotationContainerView* annotationContainer;
	UIImageView* badgeView;
	UILabel* copyrightLabel;
	NSMutableArray* displayPromises;
	MKRouteOverlayView* routeView;
	UIImageView* routePositionView;
	MKRouteLoader* routeLoader;
	int trafficStatus;
	GMMRequester* hasTrafficRequester;
	NSTimer* annotationTimer;
	NSTimer* displayPromiseTimer;
	NSTimer* startIdleTimer;
	NSTimer* copyrightLabelTimer;
	unsigned lastCopyrightMapType;
	id<MKMapViewDelegate, MKMapViewDelegatePrivate> delegate;
	int animationType;
	int animationTypeHistory;
	unsigned suspendedIdleCount;
	CADoublePoint routePositionViewCoordinate;
	CADoublePoint routeTopLeftCoordinate;
	CADoublePoint routeBottomRightCoordinate;
	CADoublePoint routeCenterCoordinate;
	int routeSummaryZoomLevel;
	unsigned routeStepIndex;
	unsigned eventMode;
	unsigned eventModeHistory;
	unsigned mapType;
	float futureScale;
	CADoublePoint futureCenterPoint;
	float futureZoomLevelDelta;
	float futureDuration;
	CGRect centeringRect;
	unsigned tileCount;
	unsigned levelViewLoadingCount;
	unsigned levelViewTrafficLoadingCount;
	BillingPointTracker* billingPointTracker;
	int searchMode;
	NSTimer* defaultLocationTimer;
	double hoverStartTime;
	NSTimer* hoverExpirationTimer;
	NSTimer* scrollToReCenterUserTimer;
	NSTimer* positioningChangeTimer;
	NSTimer* trafficAvailabilityTimer;
	UITextField* debugView;
	MKMapViewPositioningChange* positioningChange;
	NSArray* searchResultsWhileSuspendedResultProcessing;
	MKSearchResult* selectedSearchResultWhileSuspendedResultProcessing;
	NSTimer* tapAndHoldTimer;
	int rotationDirection;
	double heading;
	double annotationViewPerspectiveHeading;
	UILongPressGestureRecognizer* longPressGestureRecognizer;
	UITapGestureRecognizer* tapGestureRecognizer;
	UITapGestureRecognizer* doubleTapGestureRecognizer;
	UITapGestureRecognizer* twoFingerTapGestureRecognizer;
	int scrollViewTouchCount;
	UITouch* savedTouchBegan;
	UIEvent* savedEventBegan;
	MKAnnotationView* touchRecepientAnnotationView;
	MKOverlayContainerView* overlayContainer;
	int rotationState;
	float angularVelocity;
	MKRouteOverlayView* routeViewB;
	id<MKOverlay> routeViewBModel;
	UIColor* darkCopyrightTextColor;
	UIColor* darkCopyrightShadowColor;
	UIColor* lightCopyrightTextColor;
	UIColor* lightCopyrightShadowColor;
	int userTrackingMode;
	struct {
		unsigned animateFlagWhileSuspendedResultProcessing : 1;
		unsigned callsDelegateForAllRegionChanges : 1;
		unsigned changingRegion : 1;
		unsigned checkTrafficAvailable : 1;
		unsigned debugViewHeading : 1;
		unsigned didStartDragging : 1;
		unsigned draggingInterrupted : 1;
		unsigned didStartSmoothScrolling : 1;
		unsigned drawGridBackground : 1;
		unsigned hasUserSpecifiedZoomLevel : 1;
		unsigned hot : 1;
		unsigned ignoreHeadingUpdates : 1;
		unsigned ignoreLocationUpdates : 1;
		unsigned isLoadingEnabled : 1;
		unsigned isRunningPositioningChange : 1;
		unsigned isSuspended : 1;
		unsigned levelCrossFade : 1;
		unsigned liveTrackingAutoSelectZoomLevel : 1;
		unsigned longPressing : 1;
		unsigned needsPerspectiveUpdate : 1;
		unsigned needToShowRoute : 1;
		unsigned pansAndZoomsToRouteStep : 1;
		unsigned pansAndZoomsToRouteOverview : 1;
		unsigned routeStartStepIsActive : 1;
		unsigned showsPinAtRouteStart : 1;
		unsigned showsPinAtRouteEnd : 1;
		unsigned persistFixedUserLocation : 1;
		unsigned recalculatesRouteStepZoomLevels : 1;
		unsigned regionChangeIsAnimated : 1;
		unsigned regionChangeIsUserInitiated : 1;
		unsigned rotationSupported : 1;
		unsigned scrollEnabled : 1;
		unsigned scrolling : 1;
		unsigned scrollIsAnimated : 1;
		unsigned shouldRotateForHeading : 1;
		unsigned showingRoute : 1;
		unsigned showsUserLocation : 1;
		unsigned suspendSearchResultProcessing : 1;
		unsigned trafficEnabled : 1;
		unsigned zoomEnabled : 1;
		unsigned zoomIsAnimated : 1;
		unsigned zooming : 1;
		unsigned wasZooming : 1;
		unsigned inSetZoomScale : 1;
		unsigned annotationViewsAreAddedImmediately : 1;
		unsigned nextPositioningChangeIsInstant : 1;
		unsigned delegateShouldReceiveTouch : 1;
		unsigned delegateWillChangeRotation : 1;
		unsigned delegateWillChangeRotationAnimation : 1;
		unsigned delegateDidUpdateUserLocation : 1;
		unsigned delegateDidFailToLocateUser : 1;
		unsigned delegateWillChangeRegion : 1;
		unsigned delegateDidChangeRegion : 1;
		unsigned delegateDidStartMapRendering : 1;
		unsigned delegateDidFinishMapRendering : 1;
		unsigned delegateDidChangeUserTrackingMode : 1;
		unsigned delegateDidChangeUserTrackingModeButton : 1;
	} flags;
}
-(BOOL)textFieldShouldBeginEditing:(id)textField;
-(BOOL)longPressGestureCanTransitionToRecognizedState:(id)recognizedState;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(void)reachabilityChanged:(id)changed;
-(void)delayedShowAddedAnnotationsAnimated;
-(void)showAddedAnnotationsAndRouteAnimated;
-(void)startIdle;
-(void)updateTrafficAvailable;
-(void)stopHoverWithChange:(id)change;
-(void)scrollToUserLocation;
-(void)runPositioningChangeIfNeeded;
-(void)runPositioningChangeIfNeeded:(id)needed;
-(void)requester:(id)requester didReceiveResponse:(id)response forRequest:(id)request;
-(void)requesterDidFinish:(id)requester;
-(void)requester:(id)requester didFailWithError:(id)error;
-(void)requesterDidCancel:(id)requester;
@end

