/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MapKit.framework/MapKit
 */

#import "MapKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class MKMapTileViewImp;
@protocol MKMapTileViewDelegate;

@interface MKMapTileView : XXUnknownSuperclass {
@private
	MKMapTileViewImp* _imp;
}
@property(assign, nonatomic) BOOL shouldDisplayEffects;
@property(assign, nonatomic) BOOL shouldDisplayTraffic;
@property(assign, nonatomic) BOOL shouldDisplayBaseTiles;
@property(assign, nonatomic) BOOL levelCrossFade;
@property(assign, nonatomic) BOOL canDisplayTraffic;
@property(assign, nonatomic) BOOL canDrawOnMainThread;
@property(assign, nonatomic) unsigned mapType;
@property(assign, nonatomic) id<MKMapTileViewDelegate> delegate;
@property(assign, getter=isDrawingEnabled) BOOL drawingEnabled;
@property(assign, getter=isLoadingEnabled) BOOL loadingEnabled;
@property(readonly, assign, nonatomic, getter=isRendering) BOOL rendering;
@property(readonly, assign, getter=isDrawing) BOOL drawing;
@property(readonly, assign, getter=isLoading) BOOL loading;
@property(readonly, assign, nonatomic) XXStruct_Yvvv9D visibleMapRect;
@property(readonly, assign, nonatomic) int roundedZoomLevel;
@property(readonly, assign, nonatomic) int displayZoomLevel;
@property(readonly, assign, nonatomic) float zoomLevel;
@property(readonly, assign, nonatomic) float zoomScale;
+(void)initialize;
+(Class)layerClass;
+(int)minZoomLevel;
+(int)maxZoomLevel;
+(CGSize)tileSize;
-(id)init;
-(id)initWithFrame:(CGRect)frame;
-(void)awakeFromNib;
-(void)_commonInit;
-(void)dealloc;
-(void)setContentScaleFactor:(float)factor;
-(BOOL)_canDrawContent;
-(BOOL)drawing;
-(void)setDrawing:(BOOL)drawing;
-(void)setTransform:(CGAffineTransform)transform;
-(void)_updateTrafficHighlight;
-(id)tileRequestTimer;
-(void)setTileRequestTimer:(id)timer;
-(id)drawingExpirationTimer;
-(void)setDrawingExpirationTimer:(id)timer;
-(id)tileExpirationTimer;
-(void)setTileExpirationTimer:(id)timer;
-(float)contentScaleFactor;
-(void)didMoveToWindow;
-(XXStruct_Yvvv9D)displayRect;
-(void)_loadBaseTiles;
-(void)flush;
-(void)_displayTilePath:(XXStruct_j8inqB*)path;
-(void)_setNeedsDisplayInTilePath:(XXStruct_j8inqB*)tilePath;
-(void)_updateMinificationFilterBias;
-(void)_updateZoomFilters;
-(void)_scheduleTileRequestTimer:(double)timer;
-(void)_drawingDidEnd:(id)_drawing;
-(void)_scheduleDrawExpirationTimer:(double)timer;
-(void)_scheduleTileExpirationTimer:(double)timer;
-(id)tilesSurroundingCoordinate:(CADoublePoint)coordinate zoomLevel:(int)level forVisibleSize:(CGSize)visibleSize;
-(void)finishLoadingVisibleRect;
-(void)reloadTilesAfterResume;
-(void)applicationDidEnterBackground:(id)application;
-(BOOL)_isLoadingInVisibleRect;
-(void)expireTiles:(id)tiles;
-(void)_didStartRendering;
-(void)_didFinishRendering;
-(void)_didStartLoading;
-(void)_didFinishLoading;
-(void)_didFailLoadingWithError:(id)error;
-(BOOL)_addTileRequester:(GMMTileRequester*)requester;
-(BOOL)_removeTileRequester:(GMMTileRequester*)requester;
-(void)_processTileRequester:(GMMTileRequester*)requester;
-(void)_requestTiles:(id)tiles;
-(void)_pruneRequestTiles;
-(id)_nextRequestTilesRemaining:(BOOL*)remaining;
-(BOOL)_requestTiles;
-(void)_addTilePathRequest:(XXStruct_j8inqB*)request;
-(CADoublePoint)convertPoint:(CGPoint)point toCoordinateFromView:(id)view;
-(CGPoint)convertCoordinate:(CADoublePoint)coordinate toPointToView:(id)view;
-(CADoublePoint)convertDoublePoint:(CADoublePoint)point toCoordinateFromView:(id)view;
-(CADoublePoint)convertCoordinate:(CADoublePoint)coordinate toDoublePointToView:(id)view;
-(CADoublePoint)convertDoublePoint:(CADoublePoint)point toMapPointFromView:(id)view;
-(CADoublePoint)convertMapPoint:(CADoublePoint)point toDoublePointToView:(id)view;
-(CGRect)convertRegion:(XXStruct_Yvvv9D)region toRectToView:(id)view;
-(XXStruct_Yvvv9D)convertRect:(CGRect)rect toRegionFromView:(id)view;
-(void)tileRequesterProgress:(GMMTileRequester*)progress;
-(void)tileRequesterCompleted:(GMMTileRequester*)completed;
-(void)tileRequester:(GMMTileRequester*)requester failedWithError:(id)error;
-(BOOL)tiledLayer:(id)layer canDrawRect:(CGRect)rect levelOfDetail:(int)detail;
-(void)renderLayer:(id)layer inContext:(CGContextRef)context;
-(void)drawLayer:(id)layer inContext:(CGContextRef)context;
-(void)displayBaseTilesOfLayer:(id)layer;
-(void)display;
-(void)stopTileLoading;
@end

