/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

#import "QuartzCore-Structs.h"
#import "NSCoding.h"
#import "CAPropertyInfo.h"
#import "CAMediaTiming.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "CALayer.h"

@class NSArray, NSString, NSDictionary;

@interface CALayer : XXUnknownSuperclass <NSCoding, CAMediaTiming> {
@private
	CALayerIvars _attr;
}
@property(assign) double beginTime;
@property(assign) double duration;
@property(assign) float speed;
@property(assign) double timeOffset;
@property(assign) float repeatCount;
@property(assign) double repeatDuration;
@property(assign) BOOL autoreverses;
@property(copy) NSString* fillMode;
@property(copy) NSDictionary* style;
@property(assign) id delegate;
@property(copy) NSString* name;
@property(copy) NSDictionary* actions;
@property(assign) CGPathRef shadowPath;
@property(assign) float shadowRadius;
@property(assign) CGSize shadowOffset;
@property(assign) float shadowOpacity;
@property(assign) CGColorRef shadowColor;
@property(assign) float rasterizationScale;
@property(assign) BOOL shouldRasterize;
@property(copy) NSArray* backgroundFilters;
@property(copy) NSArray* filters;
@property(retain) id compositingFilter;
@property(assign) float opacity;
@property(assign) CGColorRef borderColor;
@property(assign) float borderWidth;
@property(assign) float cornerRadius;
@property(assign) CGColorRef backgroundColor;
@property(assign) unsigned edgeAntialiasingMask;
@property(assign) BOOL needsDisplayOnBoundsChange;
@property(assign, getter=isOpaque) BOOL opaque;
@property(assign) float minificationFilterBias;
@property(copy) NSString* magnificationFilter;
@property(copy) NSString* minificationFilter;
@property(assign) CGRect contentsCenter;
@property(assign) float contentsScale;
@property(copy) NSString* contentsGravity;
@property(assign) CGRect contentsRect;
@property(retain) id contents;
@property(assign) BOOL masksToBounds;
@property(retain) CALayer* mask;
@property(assign) CATransform3D sublayerTransform;
@property(copy) NSArray* sublayers;
@property(readonly, assign) CALayer* superlayer;
@property(assign, getter=isGeometryFlipped) BOOL geometryFlipped;
@property(assign, getter=isDoubleSided) BOOL doubleSided;
@property(assign, getter=isHidden) BOOL hidden;
@property(assign) CGRect frame;
@property(assign) CATransform3D transform;
@property(assign) float anchorPointZ;
@property(assign) CGPoint anchorPoint;
@property(assign) float zPosition;
@property(assign) CGPoint position;
@property(assign) CGRect bounds;
+(id)defaultValueForKey:(id)key;
+(BOOL)needsDisplayForKey:(id)key;
+(id)layer;
+(BOOL)automaticallyNotifiesObserversForKey:(id)key;
+(BOOL)CA_automaticallyNotifiesObservers:(Class)observers;
+(id)defaultActionForKey:(id)key;
-(id)retain;
-(void)release;
-(unsigned)retainCount;
-(id)init;
-(id)initWithBounds:(CGRect)bounds;
-(id)initWithLayer:(id)layer;
-(void)_dealloc;
-(void)dealloc;
-(id)debugDescription;
-(id)valueForKey:(id)key;
-(id)valueForUndefinedKey:(id)undefinedKey;
-(void)setValue:(id)value forKey:(id)key;
-(void)setValue:(id)value forUndefinedKey:(id)undefinedKey;
-(id)valueForKeyPath:(id)keyPath;
-(void)setValue:(id)value forKeyPath:(id)keyPath;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(BOOL)shouldArchiveValueForKey:(id)key;
-(CGAffineTransform)affineTransform;
-(void)setAffineTransform:(CGAffineTransform)transform;
-(BOOL)contentsAreFlipped;
-(CGPoint)convertPoint:(CGPoint)point fromLayer:(id)layer;
-(CGPoint)convertPoint:(CGPoint)point toLayer:(id)layer;
-(CGRect)convertRect:(CGRect)rect fromLayer:(id)layer;
-(CGRect)convertRect:(CGRect)rect toLayer:(id)layer;
-(double)convertTime:(double)time fromLayer:(id)layer;
-(double)convertTime:(double)time toLayer:(id)layer;
-(id)hitTest:(CGPoint)test;
-(BOOL)containsPoint:(CGPoint)point;
-(void)removeFromSuperlayer;
-(void)insertSublayer:(id)sublayer atIndex:(unsigned)index;
-(void)addSublayer:(id)sublayer;
-(void)insertSublayer:(id)sublayer below:(id)below;
-(void)insertSublayer:(id)sublayer above:(id)above;
-(void)replaceSublayer:(id)sublayer with:(id)with;
-(id)_implicitActionForKey:(id)key;
-(id)actionForKey:(id)key;
-(void)addAnimation:(id)animation forKey:(id)key;
-(void)removeAllAnimations;
-(void)removeAnimationForKey:(id)key;
-(id)animationForKey:(id)key;
-(id)animationKeys;
-(BOOL)_scheduleAnimationTimer;
-(void)_cancelAnimationTimer;
-(id)presentationLayer;
-(id)modelLayer;
-(void)setNeedsDisplay;
-(void)setNeedsDisplayInRect:(CGRect)rect;
-(BOOL)needsDisplay;
-(void)displayIfNeeded;
-(void)renderInContext:(CGContextRef)context;
-(void)_renderBackgroundInContext:(CGContextRef)context;
-(void)_renderForegroundInContext:(CGContextRef)context;
-(void)_renderSublayersInContext:(CGContextRef)context;
-(void)_renderBorderInContext:(CGContextRef)context;
-(void)display;
-(void)_display;
-(void)drawInContext:(CGContextRef)context;
-(void)setNeedsLayout;
-(BOOL)needsLayout;
-(CGSize)_preferredSize;
-(CGSize)preferredFrameSize;
-(void)layoutIfNeeded;
-(void)layoutSublayers;
@end

@interface CALayer (CALayerScrolling)
@property(readonly, assign) CGRect visibleRect;
-(void)_scrollPoint:(CGPoint)point fromLayer:(id)layer;
-(void)scrollPoint:(CGPoint)point;
-(void)_scrollRect:(CGRect)rect fromLayer:(id)layer;
-(void)scrollRectToVisible:(CGRect)visible;
-(CGRect)_visibleRectOfLayer:(id)layer;
@end

@interface CALayer (CADynamicsBehavior)
@property(assign) float coefficientOfRestitution;
@property(assign) float momentOfInertia;
@property(assign) float mass;
@end

@interface CALayer (CABehavior)
@property(assign) float velocityStretch;
@property(copy) NSArray* behaviors;
@end

@interface CALayer (CALayerPrivate) <CAPropertyInfo>
@property(assign) CGSize sizeRequisition;
@property(assign) BOOL allowsDisplayCompositing;
@property(assign) BOOL preloadsCache;
@property(assign) BOOL sortsSublayers;
@property(assign) BOOL invertsShadow;
@property(assign) CGAffineTransform contentsTransform;
@property(assign) BOOL clearsContext;
@property(assign) BOOL allowsHitTesting;
@property(assign, getter=isFrozen) BOOL frozen;
@property(assign) BOOL canDrawConcurrently;
@property(assign) BOOL needsLayoutOnGeometryChange;
+(id)properties;
+(/*function-pointer*/ void*)CA_setterForType:(int)type;
+(/*function-pointer*/ void*)CA_getterForType:(int)type;
+(BOOL)resolveInstanceMethod:(SEL)method;
-(void)reloadValueForKeyPath:(id)keyPath;
-(CADoublePoint)doublePosition;
-(void)setDoublePosition:(CADoublePoint)position;
-(CADoubleRect)doubleBounds;
-(void)setDoubleBounds:(CADoubleRect)bounds;
-(CADoublePoint)convertDoublePoint:(CADoublePoint)point fromLayer:(id)layer;
-(CADoublePoint)convertDoublePoint:(CADoublePoint)point toLayer:(id)layer;
-(CADoubleRect)convertDoubleRect:(CADoubleRect)rect fromLayer:(id)layer;
-(CADoubleRect)convertDoubleRect:(CADoubleRect)rect toLayer:(id)layer;
-(BOOL)_canDisplayConcurrently;
-(BOOL)drawsMipmapLevels;
-(BOOL)hasBeenCommitted;
-(void)clearHasBeenCommitted;
-(void)invalidateContents;
-(void)setContentsChanged;
-(void*)regionBeingDrawn;
-(void)_prepareContext:(CGContextRef)context;
-(BOOL)layoutIsActive;
-(void)layoutBelowIfNeeded;
-(BOOL)ignoresHitTesting;
-(BOOL)isDescendantOf:(id)of;
-(id)ancestorSharedWithLayer:(id)layer;
-(CGSize)size;
-(id)layerBeingDrawn;
-(id)layerAtTime:(double)time;
-(Layer*)_copyRenderLayer:(Transaction*)layer layerFlags:(unsigned)flags commitFlags:(unsigned*)flags3;
-(void)_didCommitLayer:(Transaction*)layer;
-(bool)_renderLayerDefinesProperty:(unsigned)property;
-(unsigned)_renderLayerPropertyAnimationFlags:(unsigned)flags;
-(void)layerDidBecomeVisible:(BOOL)layer;
-(BOOL)hidden;
-(BOOL)opaque;
-(BOOL)doubleSided;
-(BOOL)isFlipped;
-(void)setFlipped:(BOOL)flipped;
@end

