/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "AVAsynchronousKeyValueLoading.h"
#import "NSCopying.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSURL, AVAssetCache, NSMutableArray, AVAssetInspector, NSArray, NSString, NSDictionary, AVWeakReference;

@interface AVAssetInspectorLoader : XXUnknownSuperclass <NSCopying, AVAsynchronousKeyValueLoading> {
	AVAssetInspector* _assetInspector;
	AVAssetCache* _assetCache;
	BOOL _shouldMatchDataInCacheByURLPathComponentOnly;
	BOOL _shouldMatchDataInCacheByURLWithoutQueryComponent;
	NSDictionary* _validationPlist;
	BOOL _URLIsStreamingURL;
@private
	AVWeakReference* _weakReference;
	OpaqueFigFormatReader* _formatReader;
	OpaqueFigSimpleMutex* _loadingMutex;
	NSMutableArray* _keysAwaitingCompletion;
	int _durationLoadingStatus;
	int _tracksLoadingStatus;
	int _lyricsLoadingStatus;
	int _chapterGroupInfoLoadingStatus;
	int _status;
	int _basicInspectionFailureCode;
	NSURL* _URL;
}
@property(readonly, assign, nonatomic) NSURL* URL;
@property(readonly, assign, nonatomic) AVAssetCache* assetCache;
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLPathComponentOnly;
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;
@property(readonly, assign, nonatomic, getter=_weakReference) AVWeakReference* weakReference;
@property(readonly, assign, nonatomic, getter=_isStreaming) BOOL streaming;
@property(readonly, assign, nonatomic) BOOL hasProtectedContent;
@property(readonly, assign, nonatomic) NSArray* chapterGroupInfo;
@property(readonly, assign, nonatomic, getter=isComposable) BOOL composable;
@property(readonly, assign, nonatomic, getter=isReadable) BOOL readable;
@property(readonly, assign, nonatomic, getter=isExportable) BOOL exportable;
@property(readonly, assign, nonatomic, getter=isPlayable) BOOL playable;
@property(readonly, assign, nonatomic) NSString* lyrics;
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;
@property(readonly, assign, nonatomic, getter=_playbackItem) OpaqueFigPlaybackItem* playbackItem;
@property(readonly, assign, nonatomic, getter=_formatReaderLoader) OpaqueFigFormatReaderLoader* formatReaderLoader;
@property(readonly, assign, nonatomic, getter=_formatReader) OpaqueFigFormatReader* formatReader;
-(id)initWithURL:(id)url;
-(id)init;
-(id)retain;
-(void)release;
-(void)dealloc;
-(void)finalize;
-(id)copyWithZone:(NSZone*)zone;
-(id)assetInspector;
-(void)cancelLoading;
-(OpaqueFigSimpleMutex*)_loadingMutex;
-(BOOL)_providesAccurateTiming;
-(OpaqueFigFormatReader*)_copyFormatReaderFromFigObjectWithFigErrorCode:(int*)figErrorCode;
-(BOOL)_inspectionRequiresAFormatReader;
-(id)_statusOfValueForKeyThatIsAlwaysLoaded;
-(id)_statusOfValueOfDurationWhileMutexLocked;
-(id)_statusOfValueOfTracksWhileMutexLocked;
-(id)_statusOfValueOfLyricsWhileMutexLocked;
-(id)_statusOfValueOfChapterGroupInfoWhileMutexLocked;
-(id)_dictionaryOfSpecialGettersForKeyValueStatus;
-(int)_statusOfValueWhileMutexLockedForKey:(id)key error:(id*)error;
-(BOOL)_statusOfValuesIsTerminalWhileMutexLockedForKeys:(id)keys;
-(id)_getAndPruneCompletionsWhileMutexLocked;
-(id)_mapFigErrorCodeToNSError:(long)nserror;
-(int)statusOfValueForKey:(id)key error:(id*)error;
-(int)_status;
-(BOOL)_updateStatusWhileMutexLocked:(int)locked figErrorCode:(long)code;
-(void)_setStatus:(int)status figErrorCode:(long)code;
-(void)_updateDurationStatusWhileMutexLocked:(int)locked;
-(void)_updateTracksStatusWhileMutexLocked:(int)locked;
-(void)_updateLyricsStatusWhileMutexLocked:(int)locked;
-(void)_updateChapterGroupInfoStatusWhileMutexLocked:(int)locked;
-(id)_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:(id)keys;
-(id)_dictionaryOfSpecialLoadingMethodsForKeys;
-(id)_loadValuesWhileMutexLockedForKeys:(id)keys;
-(void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id)handler;
-(void)_loadDurationSynchronously;
-(void)_loadTracksSynchronously;
-(void)_loadLyricsSynchronously;
-(id)_lyrics;
-(void)_loadChapterGroupInfoSynchronously;
-(id)_chapterGroupInfo;
-(void)_serverHasDied;
@end

