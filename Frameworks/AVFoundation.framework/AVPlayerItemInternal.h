/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSError, AVVideoComposition, NSURL, AVPropertyStorage, AVPlayerConnection, AVPlayerItem, AVAudioMix, NSMutableArray, NSDate, NSArray, NSDictionary, AVWeakReference, AVAsset;

@interface AVPlayerItemInternal : XXUnknownSuperclass {
	AVWeakReference* weakReference;
	AVPlayerItem* previousItem;
	AVPlayerItem* nextItem;
	OpaqueFigPlaybackItem* figPlaybackItem;
	OpaqueFigCPEProtector* figCPEProtector;
	AVWeakReference* playerReference;
	AVPlayerConnection* playerConnection;
	BOOL isCurrentPlayerItem;
	dispatch_queue_s* stateDispatchQueue;
	AVPropertyStorage* propertyStorage;
	int status;
	NSError* error;
	NSURL* URL;
	AVAsset* asset;
	AVAsset* assetWithFigPlaybackItem;
	NSMutableArray* syncLayers;
	NSArray* chapterImageTimes;
	NSArray* timedMetadata;
	XXStruct_pwHToB initialDuration;
	XXStruct_pwHToB initialTime;
	XXStruct_pwHToB initialToleranceBefore;
	XXStruct_pwHToB initialToleranceAfter;
	XXStruct_pwHToB initialForwardPlaybackEndTime;
	XXStruct_pwHToB initialReversePlaybackEndTime;
	NSDate* initialDate;
	NSDate* initialEstimatedDate;
	BOOL initialLimitReadAhead;
	BOOL initialAlwaysMonitorsPlayability;
	BOOL initialContinuesPlayingDuringPrerollForSeek;
	BOOL initialContinuesPlayingDuringPrerollForRateChange;
	AVAudioMix* audioMix;
	AVVideoComposition* videoComposition;
	NSDictionary* gaplessInfo;
	float soundCheckVolumeNormalization;
	float volumeAdjustment;
	NSMutableArray* handlersToCallWhenReadyForEnqueueing;
	BOOL haveInitialSamples;
	BOOL haveCPEProtector;
	BOOL didSetAssetToAssetWithFigPlaybackItem;
	BOOL didInformObserversAboutAvailabilityOfTracks;
	BOOL didFireKVOForAssetForNonStreamingItem;
	BOOL wasInitializedWithURL;
	BOOL needTimedMetadataNotification;
	BOOL nonForcedSubtitleDisplayEnabled;
	NSURL* protectedContentPersistentStoragePath;
	NSDictionary* protectedContentProtectionInfo;
	NSDictionary* protectedContentAuthorizationInfo;
	BOOL externalProtectionRequested;
}
@end

