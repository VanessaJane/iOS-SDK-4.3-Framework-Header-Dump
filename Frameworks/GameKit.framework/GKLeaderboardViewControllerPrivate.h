/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/GameKit.framework/GameKit
 */

#import "GameKit-Structs.h"
#import "GKTableViewController.h"

@class GKUITheme, UISegmentedControl, GKSparseLeaderboard, GKLeaderboardViewController, GKTableViewCell, NSString, NSMutableDictionary, GKGame, GKPlayer, UIView;
@protocol GKLeaderboardViewControllerPrivateDelegate, GKLeaderboardViewControllerDelegate;

@interface GKLeaderboardViewControllerPrivate : GKTableViewController {
	id<GKLeaderboardViewControllerPrivateDelegate> _delegate;
	GKGame* _game;
	GKPlayer* _player;
	GKSparseLeaderboard* _friendLeaderboard;
	GKSparseLeaderboard* _globalLeaderboard;
	NSMutableDictionary* _leaderboardCache;
	UIView* _timeScopeContainer;
	NSString* _categoryID;
	UISegmentedControl* _portraitTimeScopeControl;
	UISegmentedControl* _landscapeTimeScopeControl;
	struct {
		unsigned allowFriendSelection : 1;
		unsigned translucentNavBar : 1;
		unsigned reserved : 26;
	} _flags;
	GKUITheme* _theme;
	int _timeScope;
	NSMutableDictionary* _players;
	id<GKLeaderboardViewControllerDelegate> _leaderboardDelegate;
	GKLeaderboardViewController* _controllerForDelegate;
	GKTableViewCell* _detailHeaderCell;
	BOOL _isInFormSheet;
	int _navbarStyle;
}
@property(assign, nonatomic) id<GKLeaderboardViewControllerPrivateDelegate> delegate;
@property(retain, nonatomic) GKPlayer* player;
@property(retain, nonatomic) GKGame* game;
@property(retain, nonatomic) GKUITheme* theme;
@property(assign, nonatomic) int timeScope;
@property(retain, nonatomic) GKSparseLeaderboard* friendLeaderboard;
@property(retain, nonatomic) GKSparseLeaderboard* globalLeaderboard;
@property(retain, nonatomic) NSMutableDictionary* players;
@property(assign, nonatomic) id<GKLeaderboardViewControllerDelegate> leaderboardDelegate;
@property(assign, nonatomic) GKLeaderboardViewController* controllerForDelegate;
@property(retain, nonatomic) GKTableViewCell* detailHeaderCell;
@property(retain, nonatomic) UIView* timeScopeContainer;
@property(assign, nonatomic) BOOL isInFormSheet;
@property(assign, nonatomic) int navbarStyle;
@property(assign, nonatomic) BOOL allowsFriendSelection;
@property(retain, nonatomic) NSString* categoryID;
-(id)initWithGame:(id)game;
-(void)dealloc;
-(id)leaderboardForCategoryID:(id)categoryID timeScope:(int)scope playerScope:(int)scope3;
-(void)setupTableView;
-(void)setCategoryID:(id)anId timeScope:(int)scope;
-(BOOL)canSelectPlayer:(id)player;
-(id)leaderboardForSection:(unsigned)section;
-(void)updateNavbarButtons;
-(void)loadView;
-(void)_gkRefreshContents;
-(void)viewDidUnload;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)updateShowMoreCellForSection:(int)section;
-(float)marginForTableView:(id)tableView;
-(id)playerForScore:(id)score;
-(void)loadPlayersForScores:(id)scores forLeaderboard:(id)leaderboard withCompletionHandler:(id)completionHandler;
-(void)loadScoresForLeaderboard:(id)leaderboard inRange:(NSRange)range withCompletionHandler:(id)completionHandler;
-(void)reloadSection:(unsigned)section forVisibleRows:(id)visibleRows withCompletionHandler:(id)completionHandler;
-(void)_reloadScores;
-(void)authenticatedStatusChanged;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)layoutSubviewsForOrientation:(int)orientation;
-(void)donePressed:(id)pressed;
-(void)_timeFilterSegmentedControlChanged:(id)changed;
-(void)playTapped;
-(int)numberOfSectionsInTableView:(id)tableView;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(float)tableView:(id)view heightForHeaderInSection:(int)section;
-(float)tableView:(id)view heightForFooterInSection:(int)section;
-(id)headerTextForLeaderboard:(id)leaderboard;
-(id)tableView:(id)view viewForHeaderInSection:(int)section;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(id)indexPathsForLeaderboardRange:(NSRange)leaderboardRange inSection:(unsigned)section;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
@end

