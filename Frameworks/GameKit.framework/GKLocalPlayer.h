/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/GameKit.framework/GameKit
 */

#import "GKPlayer.h"
#import "GKLocalPlayer.h"

@class GKInvite, NSArray, GKAddressBook, UIAlertView, NSInvocation, NSString;

@interface GKLocalPlayer : GKPlayer {
	BOOL _authenticated;
	BOOL _authenticating;
	NSArray* _friends;
	BOOL _underage;
	BOOL _findable;
	NSString* _accountName;
	BOOL _updating;
	GKInvite* _acceptedInvite;
	id _authenticationCompletionHandler;
	UIAlertView* _loginAlertView;
	UIAlertView* _currentAlert;
	NSString* _lastUsernameAttempted;
	NSInvocation* _currentFriendRequestInvocation;
	GKAddressBook* _addressBook;
	BOOL _didAuthenticate;
	BOOL _gameCenterAuthenticating;
	BOOL _authenticatingCurrentAccount;
	BOOL _authenticateWasCancelled;
	BOOL _enteringForeground;
	BOOL _authenticatedOnForeground;
	NSString* _previousPlayerID;
	unsigned _failedLogins;
}
@property(assign, nonatomic, getter=isAuthenticated) BOOL authenticated;
@property(assign, nonatomic, getter=isAuthenticating) BOOL authenticating;
@property(retain, nonatomic) NSArray* friends;
@property(assign, nonatomic, getter=isUnderage) BOOL underage;
@property(assign, nonatomic, getter=isFindable) BOOL findable;
@property(retain, nonatomic) NSString* accountName;
@property(assign, nonatomic) BOOL updating;
@property(retain, nonatomic) GKInvite* acceptedInvite;
@property(copy, nonatomic) id authenticationCompletionHandler;
@property(retain, nonatomic) UIAlertView* loginAlertView;
@property(assign, nonatomic) UIAlertView* currentAlert;
@property(retain, nonatomic) NSString* lastUsernameAttempted;
@property(retain, nonatomic) NSInvocation* currentFriendRequestInvocation;
@property(retain, nonatomic) GKAddressBook* addressBook;
@property(assign, nonatomic) BOOL didAuthenticate;
@property(assign, nonatomic) BOOL gameCenterAuthenticating;
@property(assign, nonatomic) BOOL authenticatingCurrentAccount;
@property(assign, nonatomic) BOOL authenticateWasCancelled;
@property(assign, nonatomic) BOOL enteringForeground;
@property(assign, nonatomic) BOOL authenticatedOnForeground;
@property(retain, nonatomic) NSString* previousPlayerID;
@property(assign, nonatomic) unsigned failedLogins;
+(id)localPlayer;
-(void)authenticateWithCompletionHandler:(id)completionHandler;
-(id)init;
-(void)dealloc;
-(void)setAuthenticated:(BOOL)authenticated postNotification:(BOOL)notification;
-(void)setStatus:(id)status;
-(void)loadFriendsWithCompletionHandler:(id)completionHandler;
-(void)applicationWillEnterForeground:(id)application;
-(BOOL)populateWithDictionary:(id)dictionary;
-(void)loadRecentMatchesForGame:(id)game block:(id)block;
-(void)showAccountWindowForMode:(int)mode withEmail:(id)email;
-(void)removeAccountWindow;
-(void)accountWindowDidDismiss;
-(void)loginFailedForUsername:(id)username;
-(void)showAlertWithDictionary:(id)dictionary;
-(void)showAlertForTag:(unsigned)tag;
-(BOOL)handleUnderlyingAuthenticationError:(id)error;
-(void)authenticateRequest:(id)request completedWithError:(id)error;
-(void)finishAuthenticationWithError:(id)error;
-(void)abortAuthenticationWithError:(id)error;
-(void)cancelAuthentication;
-(void)userCancelledAuthentication;
@end

@interface GKLocalPlayer (GKLocalPlayerPrivate)
@property(retain, nonatomic) NSString* lastUsernameAttempted;
@property(retain, nonatomic) GKAddressBook* addressBook;
@property(assign, nonatomic, getter=isFindable) BOOL findable;
@property(retain, nonatomic) GKInvite* acceptedInvite;
@property(retain, nonatomic) NSString* accountName;
@property(assign, nonatomic, getter=isAuthenticating) BOOL authenticating;
@property(assign, nonatomic, getter=isAuthenticated) BOOL authenticated;
+(void)filteredEmailsByCommunityMembership:(id)membership block:(id)block;
-(void)authenticateWithoutLoginWithCompletionHandler:(id)completionHandler;
-(void)authenticateExistingAccountWithCompletionHandler:(id)completionHandler;
-(void)authenticateCurrentAccountWithCompletionHandler:(id)completionHandler;
-(void)authenticateExistingAccount:(id)account password:(id)password completionHandler:(id)handler;
-(void)authorizeExistingAccountWithCompletionHandler:(id)completionHandler;
-(void)changePasswordForExistingAccountWithCompletionHandler:(id)completionHandler;
-(void)createAccountViewControllerWithEmail:(id)email completionHandler:(id)handler;
-(void)accountViewControllerForMode:(int)mode completionHandler:(id)handler;
-(void)signOutWithCompletionHandler:(id)completionHandler;
-(void)loadFriendIDsWithCompletionHandler:(id)completionHandler;
-(void)loadFriendsAsPlayersWithCompletionHandler:(id)completionHandler;
-(id)iTunesAccountName;
-(void)setStatus:(id)status withCompletionHandler:(id)completionHandler;
-(void)alertAndSendFriendRequest:(id)request destination:(id)destination;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)sendFriendRequestToEmail:(id)email message:(id)message withCompletionHandler:(id)completionHandler;
-(void)sendFriendRequestToAlias:(id)alias message:(id)message withCompletionHandler:(id)completionHandler;
-(void)sendFriendRequestToPlayer:(id)player withMessage:(id)message withCompletionHandler:(id)completionHandler;
-(void)addEmail:(id)email withCompletionHandler:(id)completionHandler;
-(void)setAvatar:(id)avatar withDescription:(id)description color:(id)color block:(id)block;
-(void)loadFriendRequests:(id)requests;
-(void)sendFriendRequest:(id)request toPlayers:(id)players block:(id)block;
-(void)sendFriendRequest:(id)request toAliases:(id)aliases block:(id)block;
-(void)sendFriendRequest:(id)request toEmailAddresses:(id)emailAddresses block:(id)block;
-(void)sendFriendRequest:(id)request toAliases:(id)aliases players:(id)players emailAddresses:(id)addresses block:(id)block;
-(void)removeFriend:(id)aFriend block:(id)block;
-(void)clearDetails;
-(void)reset:(id)reset;
-(void)daemonFetchGameInvite:(id)invite;
-(void)daemonCancelledGameInvite:(id)invite;
-(void)daemonInviteeRespondedToGameInvite:(id)gameInvite;
-(void)invalidatedCache:(id)cache;
-(BOOL)hasEmailAddress:(id)address;
-(BOOL)matchesABRecord:(void*)record;
@end

@interface GKLocalPlayer (GKSpringboardSupport)
+(BOOL)hasAuthenticatedAccount;
@end

@interface GKLocalPlayer (GKFaceTimeSupport)
+(id)accountName;
@end

