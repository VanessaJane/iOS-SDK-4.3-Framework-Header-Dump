/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "NSURLProtocolClient.h"

@class NSURLProtocol, NSMutableArray, NSLock, NSURLAuthenticationChallenge;

__attribute__((visibility("hidden")))
@interface _NSCFURLProtocolBridge : XXUnknownSuperclass <NSURLProtocolClient> {
@private
	unsigned flags;
	NSURLProtocol* nsProt;
	CFURLProtocolRef _cfProt;
	CFURLAuthChallengeRef cfChallenge;
	NSURLAuthenticationChallenge* nsChallenge;
	CFRunLoopSourceRef _rlSrc;
	NSMutableArray* events;
	NSLock* eventMutex;
	NSMutableArray* clientInstructions;
	NSLock* clientMutex;
	BOOL _loading;
}
+(void)barRequest:(CFURLRequestRef)request;
+(void)permitRequest:(CFURLRequestRef)request;
+(void)registerWithCFURLProtocol;
-(id)description;
-(void)dealloc;
-(void)finalize;
-(id)initWithCFURLProtocol:(CFURLProtocolRef)cfurlprotocol;
-(void)schedule:(CFRunLoopRef)schedule mode:(CFStringRef)mode;
-(void)unschedule:(CFRunLoopRef)unschedule mode:(CFStringRef)mode;
-(void)sendInstruction:(int)instruction;
-(void)dispatchInstruction:(int)instruction;
-(void)dispatchInstructions;
-(void)start;
-(void)stop;
-(void)halt;
-(void)resume;
-(void)_forgetClient;
-(void)useCredential:(CFURLCredentialRef)credential forChallenge:(CFURLAuthChallengeRef)challenge;
-(void)wasRedirectedToRequest:(id)request redirectResponse:(id)response;
-(void)cachedResponseIsValid:(id)valid;
-(void)didReceiveResponse:(id)response;
-(void)didLoadData:(id)data lengthReceived:(long long)received;
-(void)didFinishLoading;
-(void)didFailWithError:(id)error;
-(void)didReceiveAuthenticationChallenge:(id)challenge;
-(void)processEventQ;
-(void)marshalEvent:(int)event obj:(id)obj obj2:(id)a2;
-(void)URLProtocol:(id)protocol wasRedirectedToRequest:(id)request redirectResponse:(id)response;
-(void)URLProtocol:(id)protocol cachedResponseIsValid:(id)valid;
-(void)URLProtocol:(id)protocol didReceiveResponse:(id)response cacheStoragePolicy:(unsigned)policy;
-(void)URLProtocol:(id)protocol didLoadData:(id)data lengthReceived:(long long)received;
-(void)URLProtocol:(id)protocol didLoadData:(id)data;
-(void)URLProtocolDidFinishLoading:(id)urlprotocol;
-(void)URLProtocol:(id)protocol didFailWithError:(id)error;
-(void)URLProtocol:(id)protocol didReceiveAuthenticationChallenge:(id)challenge;
-(void)URLProtocol:(id)protocol didCancelAuthenticationChallenge:(id)challenge;
@end

