/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "NSCoding.h"
#import "UINavigationController.h"

@class NSArray, UIView, NSMutableDictionary;
@protocol UIImagePickerControllerDelegate, UINavigationControllerDelegate;

@interface UIImagePickerController : UINavigationController <NSCoding> {
@private
	unsigned _sourceType;
	id _image;
	CGRect _cropRect;
	NSArray* _mediaTypes;
	NSMutableDictionary* _properties;
	int _previousStatusBarMode;
	struct {
		unsigned visible : 1;
		unsigned isCleaningUp : 1;
		unsigned savingOptions : 3;
		unsigned didRevertStatusBar : 1;
	} _imagePickerFlags;
}
@property(assign, nonatomic) id<UINavigationControllerDelegate, UIImagePickerControllerDelegate> delegate;
@property(assign, nonatomic) int cameraFlashMode;
@property(assign, nonatomic) unsigned cameraDevice;
@property(assign, nonatomic) unsigned cameraCaptureMode;
@property(assign, nonatomic) CGAffineTransform cameraViewTransform;
@property(retain, nonatomic) UIView* cameraOverlayView;
@property(assign, nonatomic) BOOL showsCameraControls;
@property(assign, nonatomic) unsigned videoQuality;
@property(assign, nonatomic) double videoMaximumDuration;
@property(assign, nonatomic) BOOL allowsImageEditing;
@property(assign, nonatomic) BOOL allowsEditing;
@property(copy, nonatomic) NSArray* mediaTypes;
@property(assign, nonatomic) unsigned sourceType;
+(BOOL)isSourceTypeAvailable:(unsigned)available;
+(BOOL)_isMediaTypeAvailable:(id)available forSource:(unsigned)source;
+(BOOL)_reviewCapturedItems;
+(id)availableMediaTypesForSourceType:(unsigned)sourceType;
+(BOOL)isCameraDeviceAvailable:(unsigned)available;
+(id)availableCaptureModesForCameraDevice:(unsigned)cameraDevice;
+(BOOL)isFlashAvailableForCameraDevice:(unsigned)cameraDevice;
-(id)init;
-(id)initWithCoder:(id)coder;
-(id)_initWithSourceImageData:(id)sourceImageData cropRect:(CGRect)rect;
-(void)dealloc;
-(void)_populateArchivedChildViewControllers:(id)controllers;
-(void)encodeWithCoder:(id)coder;
-(void)_updateCameraCaptureMode;
-(void)_setAllowsImageEditing:(BOOL)editing;
-(BOOL)_allowsImageEditing;
-(void)_setProperties:(id)properties;
-(void)_initializeProperties;
-(id)_properties;
-(void)_setValue:(id)value forProperty:(id)property;
-(id)_valueForProperty:(id)property;
-(void)_setImagePickerSavingOptions:(unsigned)options;
-(unsigned)_imagePickerSavingOptions;
-(BOOL)_sourceTypeIsCamera;
-(id)_cameraViewController;
-(void)takePicture;
-(BOOL)startVideoCapture;
-(void)stopVideoCapture;
-(BOOL)_isCameraCaptureModeValid:(unsigned)valid;
-(void)setParentViewController:(id)controller;
-(void)viewWillAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidDisappear:(BOOL)view;
-(BOOL)_didRevertStatusBar;
-(BOOL)_isSupportedInterfaceOrientation:(int)orientation;
-(void)_removeAllChildren;
-(id)_createInitialController;
-(void)_setupControllersForCurrentSourceType;
-(void)_setupControllersForCurrentMediaTypes;
-(CGSize)_adjustedContentSizeForPopover:(CGSize)popover;
-(void)_autoDismiss;
-(void)_imagePickerDidCancel;
-(void)_imagePickerDidCompleteWithInfo:(id)_imagePicker;
@end

