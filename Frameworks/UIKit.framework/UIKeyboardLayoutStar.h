/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardLayoutStar.h"
#import "UIKeyboardLayout.h"

@class NSMutableSet, UISwipeGestureRecognizer, NSTimer, UIKBKey, UIKBKeyboard, UIPinchGestureRecognizer, UIKBKeyplane, NSMutableArray, NSString, UIKBKeyplaneView, NSMutableDictionary;
@protocol UIKeyboardRivenTransitionView, UIKeyboardRivenCenterView;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout {
@private
	UIKBKeyboard* _keyboard;
	UIKBKeyplane* _keyplane;
	NSString* _keyboardName;
	NSString* _keyplaneName;
	int _appearance;
	UIKBKey* _activeKey;
	UIKBKeyplaneView* _keyplaneView;
	UIView* _savedKeyplaneView;
	UIView* _animationKeyplaneBackground;
	int _keyboardType;
	UIView* _animationBackgroundView;
	UIView* _animationFromView;
	UIView* _animationToView;
	CGPoint _initialDragPoint;
	CGPoint _dragPrevPoint;
	float _dragValues[4];
	float _dragVelocity;
	double _prevTouchUpTime;
	double _prevTouchDownTime;
	int _prevUpActions;
	NSMutableDictionary* _keyboards;
	NSMutableDictionary* _states;
	NSMutableDictionary* _allKeys;
	NSMutableDictionary* _renderedKeys;
	NSMutableDictionary* _variantKeys;
	NSMutableDictionary* _allKeyplaneViews;
	NSMutableSet* _allKeyplaneKeycaps;
	NSMutableSet* _variantKeyTokens;
	NSMutableSet* _validInputStrings;
	NSString* _localizedInputKey;
	NSMutableArray* _keyIndexMap;
	NSMutableDictionary* _activatedKeys;
	CFDictionaryRef _extendedTouchInfoMap;
	NSTimer* _activatedTimer;
	int _preferredTrackingChangeCount;
	int _shiftTrackingChangeCount;
	NSMutableSet* _accentInfo;
	NSMutableSet* _hasAccents;
	id _spaceTarget;
	SEL _spaceAction;
	SEL _spaceLongAction;
	id _returnTarget;
	SEL _returnAction;
	SEL _returnLongAction;
	id _deleteTarget;
	SEL _deleteAction;
	SEL _deleteLongAction;
	BOOL _secureTextEntry;
	BOOL _shift;
	BOOL _autoshift;
	BOOL _settingShift;
	BOOL _didLongPress;
	BOOL _dragged;
	BOOL _dragChangedKey;
	BOOL _touchDownInMoreKey;
	BOOL _touchDownInShiftKey;
	BOOL _wasShifted;
	BOOL _dragDismissStarted;
	BOOL _currentInputModeVariantsOnly;
	BOOL _previousTouchInMore;
	BOOL _keyplaneDidTransition;
	BOOL _supportsSplit;
	BOOL _shiftLockReady;
	double _shiftLockFirstTapTime;
	UISwipeGestureRecognizer* _rightSwipeRecognizer;
	UISwipeGestureRecognizer* _leftSwipeRecognizer;
	UISwipeGestureRecognizer* _upSwipeRecognizer;
	UIPinchGestureRecognizer* _pinchRecognizer;
	UIView<UIKeyboardRivenTransitionView>* _transitionView;
	UIView<UIKeyboardRivenCenterView>* _centerView;
	float _initialSplitProgress;
	float _initialPinchSeparation;
	float _lastPinchSeparation;
	float _initialScale;
	BOOL _pinchDetected;
	BOOL _preRotateShift;
	NSString* _preRotateKeyplaneName;
	CGPoint _keyPeripheralInset;
	int _lastFlickDirection;
	UIView* _flickPopupView;
	NSMutableDictionary* _compositeImages;
	NSTimer* _flickPopuptimer;
	id _touchInfo;
	BOOL _popupViewIsShown;
	UIView* _dimKeyboardImageView;
	BOOL _keyboardImageViewIsDim;
}
@property(readonly, assign, nonatomic) UIKBKeyboard* keyboard;
@property(readonly, assign, nonatomic) UIKBKeyplane* keyplane;
@property(copy, nonatomic) NSString* keyboardName;
@property(copy, nonatomic) NSString* keyplaneName;
@property(retain, nonatomic) UIKBKey* activeKey;
@property(assign, nonatomic) BOOL shift;
@property(assign, nonatomic) BOOL autoShift;
@property(assign, nonatomic) BOOL didLongPress;
@property(readonly, assign, nonatomic, getter=isRotating) BOOL rotating;
@property(readonly, assign, nonatomic) NSString* localizedInputMode;
-(id)initWithFrame:(CGRect)frame;
-(void)dealloc;
-(void)updateBackground:(id)background;
-(void)updateKeys;
-(id)keyboardWithName:(id)name;
-(id)visualStyleForRivenStyle:(unsigned)rivenStyle;
-(void)setKeyboardAppearance:(int)appearance;
-(void)updateKeyboardForKeyplane:(id)keyplane;
-(void)setKeyboardName:(id)name appearance:(int)appearance;
-(BOOL)keyboardWillSplit;
-(BOOL)canProduceString:(id)string;
-(void)updateLocalizedKeys:(id)keys;
-(void)removeFromSuperview;
-(void)setReturnKeyEnabled:(BOOL)enabled withDisplayName:(id)displayName withType:(int)type;
-(void)setCurrencyKeysForCurrentLocale:(id)currentLocale;
-(int)displayTypeHintForMoreKey;
-(int)displayTypeHintForShiftKey;
-(int)displayTypeHintForKeyplaneSwitchKey:(id)keyplaneSwitchKey;
-(void)setKeyViewFrame:(CGRect)frame forKey:(id)key;
-(id)findMoreKeyOnKeyPlane:(id)plane onLeftMostSide:(BOOL)side;
-(id)findKanaKeyPlaneSwitchKeyOnKeyPlane:(id)plane;
-(void)updateLatinAccentsKey;
-(void)updateMoreAndInternationalKeys;
-(int)stateForKey:(id)key;
-(void)setState:(int)state forKey:(id)key;
-(void)addKeyToActivatedSet:(id)activatedSet;
-(void)removeKeyFromActivatedSet:(id)activatedSet;
-(void)schedulePeriodicProcessActivatedSet;
-(void)cancelPeriodicProcessActivatedSet;
-(void)periodicProcessActivatedSet:(id)set;
-(void)deactivateAllInActivatedSet;
-(id)cacheIdentifierForState:(int)state ofKey:(id)key;
-(id)cacheIdentifierForKeyplaneNamed:(id)keyplaneNamed withVisualStyle:(id)visualStyle;
-(void)showKeyboardType:(int)type appearance:(int)appearance orientation:(id)orientation withShift:(BOOL)shift;
-(void)deactivateActiveKeys;
-(id)keyHitTestContainingPoint:(CGPoint)point;
-(id)keyHitTestClosestToPoint:(CGPoint)point;
-(id)keyHitTestWithoutCharging:(CGPoint)charging;
-(id)keyHitTest:(CGPoint)test;
-(id)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch;
-(void)sendStringAction:(id)action forKey:(id)key;
-(void)deleteAction;
-(id)candidateList;
-(void)didClearInput;
-(void)setLabel:(id)label forKey:(id)key;
-(void)setTarget:(id)target forKey:(id)key;
-(void)setAction:(SEL)action forKey:(id)key;
-(void)setLongPressAction:(SEL)action forKey:(id)key;
-(void)restoreDefaultsForKey:(id)key;
-(void)restoreDefaultsForAllKeys;
-(void)nextCandidatesAction;
-(void)confirmAction;
-(BOOL)isShiftKeyPlaneChooser;
-(BOOL)doesKeyCharging;
-(BOOL)isLongPressedKey:(id)key;
-(void)longPressAction;
-(void)showPopupVariantsForKey:(id)key;
-(BOOL)shouldShowIndicator;
-(id)activationIndicatorView;
-(void)addPinchRecognizerAfterDelay:(float)delay;
-(BOOL)pointInside:(CGPoint)inside withEvent:(id)event;
-(float)hitBuffer;
-(void)touchDown:(id)down;
-(void)touchDownWithKey:(id)key atPoint:(CGPoint)point;
-(void)touchDragged:(id)dragged;
-(BOOL)performReturnAction;
-(void)touchUp:(id)up;
-(void)touchCancelled:(id)cancelled;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(void)installGestureRecognizers;
-(void)uninstallGestureRecognizers;
-(void)pinchSeparationUpdate:(float)update;
-(void)merge;
-(void)split;
-(void)finishSplit;
-(void)pinchSeparationUntouch;
-(void)pinchDetected:(id)detected;
-(void)swipeDetected:(id)detected;
-(id)infoForTouch:(id)touch;
-(id)generateInfoForTouch:(id)touch;
-(void)clearInfoForTouch:(id)touch;
-(void)clearAllTouchInfo;
-(id)touchForKey:(id)key;
-(id)activeTouchForKey:(id)key;
-(id)spaceKey;
-(BOOL)keyHasAccentedVariants:(id)variants;
-(unsigned)downActionFlagsForKey:(id)key;
-(unsigned)upActionFlagsForKey:(id)key;
-(void)downActionShiftWithKey:(id)key;
-(void)upActionShift;
-(BOOL)usesAutoShift;
-(unsigned)stateForShiftKey:(id)shiftKey;
-(void)updateShiftKeyState;
-(void)setAutoshift:(BOOL)autoshift;
-(BOOL)isShiftKeyBeingHeld;
-(void)updateKeyCentroids;
-(void)willRotate;
-(void)didRotate;
-(id)scriptingInfoWithChildren;
-(BOOL)shouldRetestKey:(id)key withKeyplane:(id)keyplane;
-(id)baseKeyForString:(id)string;
-(id)keyplaneForKey:(id)key;
-(void)changeToKeyplane:(id)keyplane;
-(CGPoint)applyError:(CGPoint)error toKey:(id)key;
-(id)simulateTouchForCharacter:(id)character errorVector:(CGPoint)vector shouldTypeVariants:(BOOL)variants baseKeyForVariants:(BOOL)variants4;
@end

@interface UIKeyboardLayoutStar (UIKeyboardLayoutJapanese50OnFlick)
-(void)handleFlick:(id)flick;
-(void)showFlickView:(int)view withKey:(id)key flickString:(id)string;
-(void)setCompositeImage:(id)image forKey:(id)key;
-(id)compositeImageForKey:(id)key;
-(id)getPopupBackgroundImageForKey:(id)key direction:(int)direction popupInfo:(id)info rect:(CGRect)rect;
-(id)getFlickCompositeImageForKey:(id)key direction:(int)direction rect:(CGRect)rect;
-(id)overlayCharacterImageForKey:(id)key direction:(int)direction rect:(CGRect)rect flickString:(id)string popupInfo:(id)info;
-(void)handlePopupView:(id)view;
-(void)setKeyboardDim:(BOOL)dim;
-(void)showPopupView:(int)view withKey:(id)key popupInfo:(id)info force:(BOOL)force;
-(void)activateCompositeKey:(id)key direction:(int)direction flickString:(id)string popupInfo:(id)info;
@end

@interface UIKeyboardLayoutStar (UIKeyboardUnitTestSupport)
-(id)keyWithRepresentedString:(id)representedString;
-(CGRect)frameForKeyWithRepresentedString:(id)representedString;
-(CGRect)frameForLastKeyWithRepresentedString:(id)representedString;
-(id)popupKeyViews;
-(void)setKeyForTouchInfo:(id)touchInfo key:(id)key;
-(id)keyHitTestContainingPoint:(CGPoint)point;
@end

