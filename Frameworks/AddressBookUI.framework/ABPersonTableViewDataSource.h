/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
 */

#import "UITableViewDelegate.h"
#import "AddressBookUI-Structs.h"
#import "UIActionSheetDelegate.h"
#import "ABPersonCellLayoutManagerDelegate.h"
#import "ABDatePickerViewControllerDismissDelegate.h"
#import "ABPickerViewControllerDelegate.h"
#import "ABPersonTableHeaderViewDelegate.h"
#import "ABPrimaryValueDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "ABMultiCellContentViewUpdateDelegate.h"
#import "ABDatePickerPresentationDelegate.h"
#import "ABTabOrderDelegate.h"
#import "ABPersonImageDataDelegate.h"
#import "UITableViewDataSourcePrivate.h"
#import "ABPersonTableTinyActionDelegate.h"
#import "ABPersonTableActionDelegate.h"

@class NSArray, NSIndexPath, ABPersonCellLayoutManager, NSMutableDictionary, NSString, ABPersonTableActionDataSource, UITableView, ABPersonTableTinyActionCell, UIFont, ABLabelViewWithVariablePositioning, ABMultiCellContentView, UIView, NSDictionary, ABPersonTableFooterView, ABPersonImageView, ABActionsController, AccountsManager, ABPersonTableHeaderView, UIResponder, NSMutableArray, UILabel, UIDatePicker, UITableViewCell, ABNamePropertyGroup;
@protocol ABPersonTableViewDataSourceDelegate, ABStyleProvider;

@interface ABPersonTableViewDataSource : XXUnknownSuperclass <UITableViewDelegate, UITableViewDataSourcePrivate, UIActionSheetDelegate, ABPersonTableHeaderViewDelegate, ABPersonTableTinyActionDelegate, ABPickerViewControllerDelegate, ABDatePickerViewControllerDismissDelegate, ABDatePickerPresentationDelegate, ABTabOrderDelegate, ABMultiCellContentViewUpdateDelegate, ABPersonTableActionDelegate, ABPersonCellLayoutManagerDelegate, ABPersonImageDataDelegate, ABPrimaryValueDelegate> {
	AccountsManager* _accountsManager;
	ABActionsController* _actionsController;
	BOOL _allowsDeletion;
	BOOL _allowsEditing;
	BOOL _allowsActions;
	BOOL _allowsAddToFavorites;
	BOOL _allowsSendingTextMessage;
	BOOL _allowsSounds;
	BOOL _allowsSharing;
	BOOL _allowsConferencing;
	BOOL _shouldShowLinkingUI;
	BOOL _shouldShowAddLinkedContactCell;
	BOOL _shouldShowContactSourcesStringAsMessage;
	BOOL _updateShouldShowAddLinkedContactCell;
	CFArrayRef _displayedProperties;
	CFArrayRef _optionalProperties;
	CFArrayRef _additionalProperties;
	NSMutableArray* _additionalLabels;
	CFDictionaryRef _multiCellContentViewsByCustomCell;
	BOOL _attemptDelayedBecomeFirstResponder;
	NSIndexPath* _lastActiveMultiCellIndexPath;
	ABMultiCellContentView* _lastActiveMultiCellContentView;
	ABMultiCellContentView* _multiCellContentViewForWillEndEditing;
	ABMultiCellContentView* _pinningMultiCellContentViewAlternate;
	NSIndexPath* _pinningMultiCellIndexPath;
	NSIndexPath* _pinningMultiCellRelativeIndexPath;
	UIResponder* _pinningResponder;
	BOOL _isPinningLocked;
	void* _addressBook;
	NSArray* _people;
	NSMutableDictionary* _propertyGroupsStore;
	NSMutableDictionary* _unusedPropertyGroupsStore;
	NSMutableArray* _editablePropertyGroups;
	NSMutableArray* _propertyGroups;
	NSMutableArray* _linkedCardInfos;
	CFSetRef _addNewValuePropertiesStore;
	CFSetRef _addNewValueProperties;
	ABNamePropertyGroup* _namePropertyGroup;
	int _actionSheetType;
	ABPersonTableActionDataSource* _actionDataSource;
	UITableView* _tableView;
	ABPersonTableTinyActionCell* _tinyActionCell;
	UILabel* _noValueLabel;
	ABPersonTableHeaderView* _headerView;
	UIView* _customPersonTableHeaderView;
	UIView* _customPersonTableFooterView;
	BOOL _tableHeaderViewScrolls;
	UIView* _notesHeaderView;
	ABLabelViewWithVariablePositioning* _linkingHeaderView;
	UIDatePicker* _datePicker;
	ABPersonTableFooterView* _footerView;
	int _primaryProperty;
	int _highlightedValueProperty;
	int _highlightedValueIdentifier;
	void* _highlightedValuePerson;
	BOOL _highlightedValueIsImportant;
	BOOL _actionShouldPickHighlightedValue;
	int _insertionProperty;
	id _insertionValue;
	id _insertionLabel;
	id<ABStyleProvider> _styleProvider;
	id<ABPersonTableViewDataSourceDelegate> _delegate;
	UITableViewCell* _partiallySelectedCell;
	ABPersonCellLayoutManager* _cellLayoutManager;
	UIView* _currentTableHeaderView;
	UIView* _currentTableFooterView;
	UIView* _tableHeaderViewContainer;
	CFDictionaryRef _currentImageData;
	void* _personForImageData;
	BOOL _hasImageChanges;
	BOOL _didChangePreferredPersonForImage;
	BOOL _isSettingFirstResponder;
	BOOL _isEndingEditingTransactions;
	float _lastAdjustment;
	BOOL _viewControllerWillSlideOut;
	int _customKeyboardOutDirection;
	NSDictionary* _cachedKeyboardInfo;
	BOOL _isEditing;
}
@property(retain, nonatomic) NSArray* people;
@property(assign, nonatomic) void* addressBook;
@property(retain, nonatomic) UIView* currentTableHeaderView;
@property(retain, nonatomic) UIView* currentTableFooterView;
@property(assign, nonatomic) id<ABPersonTableViewDataSourceDelegate> delegate;
@property(retain, nonatomic) UITableView* tableView;
@property(assign, nonatomic) BOOL allowsActions;
@property(assign, nonatomic) BOOL allowsEditing;
@property(assign, nonatomic) BOOL allowsAddToFavorites;
@property(assign, nonatomic) BOOL allowsSendingTextMessage;
@property(assign, nonatomic) BOOL allowsSharing;
@property(assign, nonatomic) BOOL allowsConferencing;
@property(assign, nonatomic) BOOL allowsDeletion;
@property(assign, nonatomic) BOOL allowsSounds;
@property(assign, nonatomic) BOOL shouldShowLinkingUI;
@property(assign, nonatomic) BOOL shouldShowContactSourcesStringAsMessage;
@property(assign, nonatomic) CFArrayRef displayedProperties;
@property(assign, nonatomic) int highlightedValueProperty;
@property(assign, nonatomic) int highlightedValueIdentifier;
@property(assign, nonatomic) void* highlightedValuePerson;
@property(assign, nonatomic) BOOL highlightedValueIsImportant;
@property(assign, nonatomic) BOOL actionShouldPickHighlightedValue;
@property(readonly, assign, nonatomic) int insertionProperty;
@property(readonly, assign, nonatomic) id insertionValue;
@property(readonly, assign, nonatomic) id insertionLabel;
@property(retain, nonatomic) id<ABStyleProvider> styleProvider;
@property(assign, nonatomic) BOOL tableHeaderViewScrolls;
@property(retain, nonatomic) UITableViewCell* partiallySelectedCell;
@property(retain, nonatomic) NSIndexPath* lastActiveMultiCellIndexPath;
@property(retain, nonatomic) ABMultiCellContentView* lastActiveMultiCellContentView;
@property(retain, nonatomic) ABMultiCellContentView* multiCellContentViewForWillEndEditing;
@property(retain, nonatomic) ABMultiCellContentView* pinningMultiCellContentViewAlternate;
@property(retain, nonatomic) NSIndexPath* pinningMultiCellIndexPath;
@property(retain, nonatomic) NSIndexPath* pinningMultiCellRelativeIndexPath;
@property(retain, nonatomic) UIResponder* pinningResponder;
@property(assign, nonatomic) BOOL viewControllerWillSlideOut;
@property(assign, nonatomic) int customKeyboardOutDirection;
@property(readonly, assign, nonatomic) BOOL isPinning;
@property(readonly, assign, nonatomic, getter=isAttributionEnabled) BOOL attributionEnabled;
@property(readonly, assign, nonatomic) NSString* attribution;
@property(readonly, assign, nonatomic) int primaryProperty;
@property(assign, nonatomic, getter=isEditing) BOOL editing;
@property(readonly, assign, nonatomic) ABPersonTableHeaderView* tableHeaderView;
@property(retain, nonatomic) UIView* customPersonTableFooterView;
@property(retain, nonatomic) UIView* customPersonTableHeaderView;
@property(retain, nonatomic) UIView* personHeaderView;
@property(readonly, assign, nonatomic) ABPersonImageView* personImageView;
@property(retain, nonatomic) UIView* customMessageView;
@property(retain, nonatomic) UIFont* messageDetailFont;
@property(copy, nonatomic) NSString* messageDetail;
@property(retain, nonatomic) UIFont* messageFont;
@property(copy, nonatomic) NSString* message;
@property(copy, nonatomic) NSString* alternateName;
@property(readonly, assign, nonatomic) BOOL hasNameChanges;
@property(readonly, assign, nonatomic) BOOL hasChanges;
@property(readonly, assign, nonatomic) BOOL canSave;
-(id)_indexPathForPropertyGroup:(id)propertyGroup index:(int)index editableFlag:(BOOL)flag;
-(unsigned)sectionForAction:(id)action;
-(void)_getPropertyGroup:(id*)group index:(int*)index editableFlag:(BOOL*)flag atIndexPath:(id)indexPath;
-(BOOL)_isReadonlyAtIndexPath:(id)indexPath;
-(BOOL)_isFavoriteOfType:(int)type inPropertyGroup:(id)propertyGroup atIndex:(int)index;
-(void)_getFirstRows:(id*)rows andOtherRows:(id*)rows2 fromIndexPaths:(id)indexPaths;
-(BOOL)_shouldShowAddLinkedContactCell;
-(id)linkedCardInfos;
-(BOOL)_shouldIncludeLinkingUISectionWhenEditing:(BOOL)editing;
-(void)showLinkedCardAtRow:(int)row;
-(id)init;
-(void)dealloc;
-(id)accountsManager;
-(id)primarySourceNameForPerson:(void*)person;
-(id)secondarySourceNameForPerson:(void*)person;
-(id)_contactSourcesString;
-(void)updateContactSourcesStringIfNeeded;
-(id)namePropertyGroup;
-(id)_headerView;
-(void)updateSectionHeaderAndFooterHeightsForEditing:(BOOL)editing;
-(void)setDisplayedProperties:(CFArrayRef)properties andRefreshUI:(BOOL)ui;
-(CGRect)_footerViewFrame;
-(void)_updateDeleteButtonIfNeededForFooterView:(id)footerView;
-(id)titleForNoValueWithProperty:(int)property;
-(id)noValueLabel;
-(void)reloadDataIncludingHeaderView:(BOOL)view invalidatePropertyData:(BOOL)data;
-(void)reloadDataIncludingHeaderView:(BOOL)view;
-(void)reloadData;
-(void)reloadNameData;
-(void)reloadLinkingUISection;
-(void)reloadDeleteButton;
-(void)reloadImageData;
-(void)reloadPropertyGroups;
-(void)reloadFavoritesData;
-(void)notifyHeaderViewHeightDidChange;
-(id)controllerMainView;
-(void)updateTableHeaderViewAnimated:(BOOL)animated;
-(void)updateTableHeaderView;
-(void)_endTableViewUpdatesWithoutScroll;
-(void)reloadNoValueLabelAnimated:(BOOL)animated;
-(void)setAttribution:(id)attribution enabled:(BOOL)enabled target:(id)target action:(SEL)action;
-(id)newFooterView;
-(id)footerView;
-(void)updateTableFooterView;
-(void)updateTableFooterViewAnimated:(BOOL)animated;
-(void)setPrimaryProperty:(int)property countryCode:(id)code;
-(int)_sectionIndexForPropertyGroup:(id)propertyGroup orProperty:(int)property withPropertyGroups:(id)propertyGroups whenEditing:(BOOL)editing;
-(int)sectionIndexForPropertyGroup:(id)propertyGroup withPropertyGroups:(id)propertyGroups whenEditing:(BOOL)editing;
-(int)sectionIndexForProperty:(int)property withPropertyGroups:(id)propertyGroups whenEditing:(BOOL)editing;
-(id)sectionAnimationsDictionaryForSwipeToDeleteAtIndexPath:(id)indexPath;
-(id)sectionAnimationsDictionaryForOriginalPropertyGroups:(id)originalPropertyGroups newPropertyGroups:(id)groups whenEditing:(BOOL)editing;
-(id)sectionAnimationsDictionaryForEditing:(BOOL)editing;
-(void)headerFooterAnimationDidStop:(id)headerFooterAnimation finished:(id)finished context:(void*)context;
-(void)containerView:(id)view setContentView:(id)view2 animated:(BOOL)animated;
-(void)setCurrentTableHeaderView:(id)view animated:(BOOL)animated;
-(void)setCurrentTableFooterView:(id)view animated:(BOOL)animated;
-(void)updateHeadersAndFootersForEditing:(BOOL)editing animated:(BOOL)animated;
-(void)setEditing:(BOOL)editing animated:(BOOL)animated;
-(void)prepareView;
-(void)sizeToFit;
-(CFDictionaryRef)currentImageData;
-(void)setCurrentImageData:(CFDictionaryRef)data;
-(BOOL)hasImageChanges;
-(void)markImagesWith:(id)with forPerson:(void*)person;
-(void)resetImageData;
-(void)updateRecordImages;
-(id)imageDataWithFormat:(int)format cropRect:(CGRect*)rect forPerson:(void*)person isRemoved:(BOOL*)removed;
-(void*)personForImageDataExcludingPeople:(id)imageDataExcludingPeople;
-(BOOL)didChangePreferredPersonForImage;
-(void)presentDifferentiationSheetIfNeededForAction:(id)action withPropertyGroup:(id)propertyGroup;
-(BOOL)hasActionWithTitle:(id)title target:(id)target selector:(SEL)selector property:(int)property actionGrouping:(int)grouping ordering:(int)ordering outActions:(id*)actions outIndex:(int*)index;
-(id)addActionWithTitle:(id)title shortTitle:(id)title2 target:(id)target selector:(SEL)selector property:(int)property actionGrouping:(int)grouping ordering:(int)ordering;
-(id)addActionWithTitle:(id)title shortTitle:(id)title2 detailText:(id)text style:(int)style target:(id)target selector:(SEL)selector property:(int)property actionGrouping:(int)grouping ordering:(int)ordering;
-(void)removeActionWithSelector:(SEL)selector target:(id)target property:(int)property actionGrouping:(int)grouping ordering:(int)ordering animated:(BOOL)animated;
-(void)removeActionWithSelector:(SEL)selector target:(id)target property:(int)property actionGrouping:(int)grouping ordering:(int)ordering;
-(void)propertyGroup:(id*)group orActions:(id*)actions forSection:(int)section whenEditing:(BOOL)editing;
-(BOOL)shouldShowActionForProperty:(int)property assumeThatPropertyHasSection:(BOOL)section;
-(BOOL)shouldShowActionForProperty:(int)property;
-(BOOL)shouldShowAction:(id)action excludingProperty:(int)property;
-(int)actionCountForGrouping:(int)grouping inSection:(int)section excludingProperty:(int)property outExcludedIndexPaths:(id*)paths;
-(int)actionCountForBottomGroupingExcludingProperty:(int)bottomGroupingExcludingProperty;
-(int)actionCountForTopGroupingInSection:(int)section excludingProperty:(int)property outExcludedIndexPaths:(id*)paths;
-(int)actionGroupingCountForPropertyGroup:(id)propertyGroup whenEditing:(BOOL)editing assumeThatPropertyHasSection:(BOOL)section;
-(int)actionGroupingCountForPropertyGroup:(id)propertyGroup whenEditing:(BOOL)editing;
-(BOOL)isPropertyDisplayed:(int)displayed;
-(BOOL)hasPhoneValue;
-(BOOL)allowsFaceTimeFavorite;
-(BOOL)allowsVoiceFavorite;
-(BOOL)shouldShowAddToFavoritesAction;
-(void)sendTextMessage:(id)message person:(void*)person property:(int)property identifier:(int)identifier;
-(void)shareContactButtonClicked:(id)clicked;
-(void)conference:(id)conference person:(void*)person property:(int)property identifier:(int)identifier;
-(void)addToFavoritesButtonClicked:(id)favoritesButtonClicked;
-(void)reloadBottomActionCellAnimated:(BOOL)animated;
-(void)reloadBottomActionDataForFavorites:(BOOL)favorites texting:(BOOL)texting sharing:(BOOL)sharing conferencing:(BOOL)conferencing;
-(void)reloadBottomActionsAnimated:(BOOL)animated;
-(void)reloadBottomActions;
-(void)tellDelegateAddToFavoriteWasSelectedForPropertyAtIndex:(int)index inPropertyGroup:(id)propertyGroup entryType:(int)type;
-(void)reloadPrimaryPropertyActionsSection;
-(void)setAllowsAddToFavorites:(BOOL)favorites andReload:(BOOL)reload;
-(void)setAllowsSendingTextMessage:(BOOL)message andReload:(BOOL)reload;
-(void)setAllowsSharing:(BOOL)sharing andReload:(BOOL)reload;
-(void)reloadConferencing;
-(void)setAllowsConferencing:(BOOL)conferencing andReload:(BOOL)reload;
-(void)updateForConferencingAvailabilityChange;
-(void)_conferenceHistoryChanged:(id)changed;
-(id)tinyActionCell;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;
-(void)deleteButtonClicked:(id)clicked;
-(void)valueAtIndex:(int)index selectedForPropertyGroup:(id)propertyGroup withMemberCell:(id)memberCell forEditing:(BOOL)editing;
-(void)setInsertionProperty:(int)property value:(id)value label:(id)label;
-(void)setInsertionLabel:(id)label;
-(void)setInsertionValue:(id)value;
-(void)setHighlightedItemForProperty:(int)property withIdentifier:(int)identifier person:(void*)person important:(BOOL)important;
-(void)_resetAddNewValueCells;
-(BOOL)usesAddNewValueCellForProperty:(int)property;
-(BOOL)shouldUseAddNewValueCellForProperty:(int)property;
-(void)setShouldUseAddNewValueCell:(BOOL)useAddNewValueCell forProperty:(int)property;
-(void)swapAddNewValueCellForProperty:(int)property atIndexPath:(id)indexPath;
-(void)addFieldCellWillSelect:(id)addFieldCell;
-(void)addFieldCellSelected:(id)selected;
-(id)_indexPathForHeaderViewRow:(unsigned)headerViewRow;
-(void)tableViewAddFieldUpdateAnimationsDidStop:(id)tableViewAddFieldUpdateAnimations finished:(id)finished context:(void*)context;
-(void)updateByAddingFieldForProperty:(int)property whenEditing:(BOOL)editing;
-(void)addToContactsButtonClicked:(id)contactsButtonClicked;
-(void)addFieldAction:(id)action;
-(void)addFieldTouchDown:(id)down;
-(void)addFieldTouchCancel:(id)cancel;
-(id)_notesHeaderView;
-(id)_linkingHeaderView;
-(int)tableViewRowAnimationForUpdateAction:(unsigned)updateAction isFirstRow:(BOOL)row;
-(void)updateCellEditingStyleAtIndexPath:(id)indexPath;
-(void*)policyForPerson:(void*)person;
-(BOOL)isPropertyOptional:(int)optional;
-(CFArrayRef)newAdditionalProperties;
-(CFArrayRef)additionalProperties;
-(void)invalidateAdditionalProperties;
-(void)invalidateLinkedCardInfos;
-(void)resetPropertyGroupStores;
-(id)propertyGroupForProperty:(int)property createIfEmpty:(BOOL)empty;
-(id)propertyGroupForProperty:(int)property;
-(id)displayedPropertyGroupForProperty:(int)property whenEditing:(BOOL)editing;
-(id)newPropertyGroupsForEditing:(BOOL)editing withDisplayedProperties:(CFArrayRef)displayedProperties;
-(id)newPropertyGroupsForEditing:(BOOL)editing;
-(id)propertyGroupsForEditing:(BOOL)editing;
-(void)invalidateAllPropertyGroups;
-(void)invalidatePropertyGroupsForEditing:(BOOL)editing;
-(id)actionsController;
-(void)beginPinning;
-(void)endPinning;
-(void)cancelPinning;
-(BOOL)abTableView:(id)view isValidIndexPath:(id)path;
-(void)scrollToLastActiveEntryFieldAnimated:(BOOL)lastActiveEntryFieldAnimated becomeFirstResponder:(BOOL)responder;
-(void)scrollToLastActiveEntryFieldAnimated:(BOOL)lastActiveEntryFieldAnimated;
-(int)editingSectionForNonEditingSection:(int)nonEditingSection;
-(void)endEditingTransactions;
-(void)updateRecord;
-(void)indexOfFirstPropertyGroupSection:(int*)firstPropertyGroupSection lastPropertyGroupSection:(int*)section addFieldSection:(int*)section3 linkingUISection:(int*)section4 primaryPropertyActionsSection:(int*)section5 topGroupingActionSection:(int*)section6 bottomGroupingActionSection:(int*)section7 cardActionsSection:(int*)section8 cardActionsSectionCount:(int*)count totalSectionCount:(int*)count10 whenEditing:(BOOL)editing;
-(int)indexOfLinkingUISectionWhenEditing:(BOOL)linkingUISectionWhenEditing;
-(BOOL)isInFullEditingMode;
-(int)numberOfSectionsWhenEditing:(BOOL)sectionsWhenEditing;
-(int)numberOfRowsInSection:(int)section whenEditing:(BOOL)editing;
-(id)linkedCardCellForTableView:(id)tableView withReuseIdentifier:(id)reuseIdentifier;
-(id)addValueCellForTableView:(id)tableView withReuseIdentifier:(id)reuseIdentifier;
-(id)actionCellForTableView:(id)tableView withReuseIdentifier:(id)reuseIdentifier isConference:(BOOL)conference;
-(void)_getDataProvider:(id*)provider andInfo:(id*)info forIndexPath:(id)indexPath;
-(void)_updateCellsForDataProvider:(id)dataProvider afterDeleteAtIndex:(int)index isInsertionIndex:(BOOL)index3 inTableView:(id)tableView;
-(id)cellLayoutManager;
-(id)newAccessoryViewWhenEditing:(BOOL)editing forDataProvider:(id)dataProvider index:(int)index editableFlag:(BOOL)flag;
-(void)_setMultiCellContentView:(id)view forCustomPropertyCell:(id)customPropertyCell;
-(id)_multiCellContentViewForCustomPropertyCell:(id)customPropertyCell;
-(id)ieTableViewCellForPropertyGroup:(id)propertyGroup tableView:(id)view indexPath:(id)path editing:(BOOL)editing allowDequeing:(BOOL)dequeing tag:(int*)tag;
-(id)tableViewCellForActions:(id)actions tableView:(id)view row:(int)row editing:(BOOL)editing allowDequeing:(BOOL)dequeing tag:(int*)tag;
-(void)tableView:(id)view cell:(id*)cell orTag:(int*)tag forRowAtIndexPath:(id)indexPath allowDequeing:(BOOL)dequeing;
-(void)performPersonTableActionWithSection:(int)section row:(int)row;
-(BOOL)canSelectLabelForPropertyGroup:(id)propertyGroup info:(id)info;
-(BOOL)tabToNextResponder:(BOOL)nextResponder fromView:(id)view;
-(void)adjustTableViewForKeyboardInfo:(id)keyboardInfo animated:(BOOL)animated;
-(void)_keyboardWillShow:(id)_keyboard;
-(void)_keyboardWillHide:(id)_keyboard;
-(void)_delayedKeyboardWillShow:(id)_delayedKeyboard;
-(void)_delayedKeyboardWillHide:(id)_delayedKeyboard;
-(void)_registerForKeyboardNotifications;
-(void)_unregisterForKeyboardNotifications;
-(BOOL)tableView:(id)view shouldShowMenuForRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view canPerformAction:(SEL)action forRowAtIndexPath:(id)indexPath withSender:(id)sender;
-(void)tableView:(id)view performAction:(SEL)action forRowAtIndexPath:(id)indexPath withSender:(id)sender;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(int)numberOfSectionsInTableView:(id)tableView;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(void)tableView:(id)view commitEditingStyle:(int)style forRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view canEditRowAtIndexPath:(id)indexPath;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(void)_updateBackgroundForCell:(id)cell atIndexPath:(id)indexPath;
-(void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view willSelectRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view wantsHeaderForSection:(int)section;
-(id)tableView:(id)view viewForHeaderInSection:(int)section;
-(float)tableView:(id)view heightForHeaderInSection:(int)section;
-(void)tableView:(id)view willBeginEditingRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didEndEditingRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view editingStyleForRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view shouldIndentWhileEditingRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view titleForDeleteConfirmationButtonForRowAtIndexPath:(id)indexPath;
-(id)viewForHeaderInTableView:(id)tableView;
-(id)viewForFooterInTableView:(id)tableView;
-(float)heightForHeaderInTableView:(id)tableView;
-(float)heightForFooterInTableView:(id)tableView;
-(float)marginForTableView:(id)tableView;
-(BOOL)personTableTinyActionCell:(id)cell shouldShowAction:(id)action;
-(void)personTableHeaderView:(id)view imageViewWasSelected:(id)selected;
-(void)presentDifferentiationSheetForAction:(id)action;
-(void)action:(id)action willShowButton:(id)button forValueAtIndex:(int)index inPropertyGroup:(id)propertyGroup;
-(BOOL)labelPickerViewController:(id)controller shouldDismissAfterSelectingLabel:(id)label;
-(void)labelPickerViewController:(id)controller didDeleteLabel:(id)label;
-(BOOL)pickerViewController:(id)controller shouldDismissAfterSelectingItem:(id)item;
-(BOOL)pickerViewControllerShouldDismissKeyboard:(id)pickerViewController;
-(id)capitalizedTitleForContentView:(id)contentView;
-(id)datePickerForDateField:(id)dateField;
-(BOOL)dateField:(id)field shouldPresentDatePicker:(id)picker;
-(void)dateField:(id)field delegatePrepareToPresentDatePicker:(id)presentDatePicker;
-(void)dateField:(id)field delegatePresentDatePicker:(id)picker;
-(void)dateField:(id)field delegateDismissDatePicker:(id)picker;
-(void)datePickerViewControllerWillDisappear:(id)datePickerViewController;
-(BOOL)ABTabToNextResponder:(BOOL)nextResponder fromView:(id)view;
-(void)selectLabelPartForCell:(id)cell;
-(void)selectValuePartForCell:(id)cell;
-(void)selectWholePartForCell:(id)cell;
-(void)selectCustomPartWithFrame:(CGRect)frame occupiedCorners:(unsigned)corners forCell:(id)cell;
-(void)unselectAllCellParts;
-(void)_multiCellContentView:(id)view selectedLabel:(id)label;
-(void)_multiCellContentView:(id)view selectedCountry:(id)country;
-(void)_multiCellContentView:(id)view selectedService:(id)service;
-(void)_multiCellContentView:(id)view selectedRingtone:(id)ringtone;
-(void)multiCellContentView:(id)view touchesBeganForView:(id)view2;
-(void)multiCellContentView:(id)view touchesEndedForView:(id)view2;
-(void)multiCellContentView:(id)view touchesCancelledForView:(id)view2;
-(BOOL)multiCellContentView:(id)view entryFieldShouldBeginEditing:(id)entryField;
-(void)multiCellContentView:(id)view entryFieldDidBeginEditing:(id)entryField;
-(void)multiCellContentView:(id)view entryField:(id)field didUpdateValue:(id)value forKey:(id)key;
-(void)multiCellContentView:(id)view entryFieldDidEndEditing:(id)entryField;
-(void)multiCellContentViewDidEndEditing:(id)multiCellContentView;
-(void)multiCellContentView:(id)view willResizeAnimated:(BOOL)animated;
-(void)multiCellContentView:(id)view didResizeAnimated:(BOOL)animated;
-(void)multiCellContentViewWillShowDeleteConfirmation:(id)multiCellContentView;
-(void)multiCellContentViewWillHideDeleteConfirmation:(id)multiCellContentView;
-(BOOL)personCellLayoutManager:(id)manager isCellInFullEditMode:(id)fullEditMode;
-(id)writablePeople;
-(BOOL)hasImageDataForPerson:(void*)person;
-(id)imageDataWithFormat:(int)format cropRect:(CGRect*)rect forPerson:(void*)person;
-(void)setImageData:(id)data withFormat:(int)format cropRect:(CGRect)rect forPerson:(void*)person;
-(void)removeImageDataForPerson:(void*)person;
-(void*)personForImageData;
-(void)setPersonForImageData:(void*)imageData;
-(void)refreshImageData;
-(void)imageWillSave;
-(id)namePropertyGroup:(id)group primaryValueForProperty:(int)property;
@end

