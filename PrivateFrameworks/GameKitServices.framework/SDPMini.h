/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "SDPMini.h"

@class NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface SDPMini : XXUnknownSuperclass {
@private
	NSMutableDictionary* _dict;
}
-(id)init;
-(id)initWithOrigin:(id)origin sessionName:(id)name;
-(BOOL)setAudioPayloads:(int*)payloads count:(int)count;
-(BOOL)setVideoPayloads:(int*)payloads count:(int)count;
-(void)appendDeviceInfo;
-(id)initWithViceroyDefaultsUsingZeroes:(BOOL)viceroyDefaultsUsingZeroes forAudioOnly:(BOOL)audioOnly withUserCount:(int)userCount;
-(id)initWithViceroyDefaultsUsingZeroes:(BOOL)viceroyDefaultsUsingZeroes forAudioOnly:(BOOL)audioOnly;
-(id)initWithViceroyDefaultsUsingZeroes:(BOOL)viceroyDefaultsUsingZeroes;
-(id)initWithString:(id)string;
-(void)dealloc;
-(void)setSDP:(id)sdp;
-(void)resetSDP;
-(id)sessionString;
-(id)audioStringForVersion:(unsigned)version;
-(id)videoStringForVersion:(unsigned)version;
-(id)dataStringForVersion:(unsigned)version;
-(id)toString;
-(id)toStringForVersion:(unsigned)version;
-(void)setOriginWithArray:(id)array;
-(id)origin;
-(void)setConnectionWithArray:(id)array;
-(id)connection;
-(void)setBandwidthWithString:(id)string;
-(id)bandwidth;
-(void)setMediaWithArrayHelper:(id)arrayHelper mediaArray:(id)array attributesArray:(id)array3;
-(void)setAudioMediaWithArray:(id)array andAttributesWithArray:(id)array2;
-(id)audioMedia;
-(void)setVideoMediaWithArray:(id)array andAttributesWithArray:(id)array2;
-(void)appendAudioMedia:(int)media;
-(id)videoMedia;
-(void)appendVideoMedia:(int)media;
-(void)setDataMediaWithArray:(id)array andAttributesWithArray:(id)array2;
-(id)dataMedia;
-(id)audioMediaAttributes;
-(id)videoMediaAttributes;
-(id)dataMediaAttributes;
-(id)audioMediaConnection;
-(id)videoMediaConnection;
-(id)sessionAttributes;
-(id)sessionName;
-(int)addressTypeForConnection:(id)connection;
-(int)addressType;
-(int)addressTypeVideo;
-(int)addressTypeAudio;
-(void)appendAudioAttribute:(id)attribute;
-(void)appendVideoAttribute:(id)attribute;
-(void)updateVideoAttributePrefix:(id)prefix withAppendedValue:(id)appendedValue;
-(void)appendSessionAttribute:(id)attribute;
-(void)setSessionName:(id)name;
-(BOOL)hasAudioCodec:(int)codec;
-(BOOL)hasVideoCodec:(int)codec;
-(BOOL)getOS:(id*)os model:(id*)model;
-(BOOL)getAUNumber:(unsigned*)number;
@end

@interface SDPMini (viceroy)
-(int)portForMediaHelper:(id)mediaHelper;
-(int)videoPort;
-(int)audioPort;
-(int)dataPort;
-(int)videoRTCPPort;
-(int)audioRTCPPort;
-(int)dataRTCPPort;
-(const char*)userName;
-(const char*)ipFromConnection:(id)connection;
-(const char*)ip;
-(const char*)ipVideo;
-(const char*)ipAudio;
-(int)maxImagesize;
-(int)maxBandwidth;
-(int)maxFramerate;
-(id)audioPayloadTypes;
-(id)videoPayloadTypes;
-(int)rulesFramerate:(int)framerate;
-(void)rulesImageSize:(int)size pWidth:(int*)width pHeight:(int*)height;
-(void)rulesPeerImageSize:(int)size pWidth:(int*)width pHeight:(int*)height;
-(char*)srtpKey;
-(char*)srtpSalt;
-(void)setMaxImageSize:(int)size forPayloadType:(int)payloadType;
-(void)setMaxBandwidth:(int)bandwidth;
-(void)setMaxFramerate:(int)framerate;
-(void)setAutoDetectBandwidth:(BOOL)bandwidth;
-(BOOL)autoDetectBandwidth;
-(void)setUseIChatEncryption:(BOOL)encryption;
-(BOOL)useIChatEncryption;
-(BOOL)aacBlockSize:(int*)size;
-(void)setFeaturesListString:(char*)string;
-(char*)featuresListString;
-(void)setAudioRTPID:(unsigned long)rtpid;
-(unsigned long)audioRTPID;
-(void)setVideoRTPID:(unsigned long)rtpid;
-(unsigned long)videoRTPID;
-(BOOL)hasPureVoice;
-(BOOL)hasViceroyCompatibleAudioCodec;
-(BOOL)hasViceroyCompatibleVideoCodec;
-(BOOL)hasH263;
-(BOOL)irisOpen;
-(void)setMultiPointFlagWithCount:(int)count;
-(BOOL)hasMultiPointFlag:(int*)flag;
-(void)setHardwareInfo:(id)info;
-(id)hardwareInfo;
-(void)buildRTPMap;
-(id)RTPMapString:(int)string isAudio:(BOOL)audio;
-(int)payload:(int)payload isAudio:(BOOL)audio;
-(id)payloadString:(int)string isAudio:(BOOL)audio;
-(BOOL)hasAudioCodec:(int)codec withPeerSDP:(id)peerSDP;
-(BOOL)hasVideoCodec:(int)codec withPeerSDP:(id)peerSDP;
@end

@interface SDPMini (helper)
-(id)defaultAudioPayloads;
-(id)defaultAudioPayloads:(BOOL)payloads;
-(id)defaultAudioPayloads:(BOOL)payloads withUserCount:(int)userCount;
-(id)SDPUsername;
@end

