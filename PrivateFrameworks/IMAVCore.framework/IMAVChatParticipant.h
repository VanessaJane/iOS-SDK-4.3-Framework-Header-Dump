/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

#import "IMAVChatParticipant.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "IMAVCore-Structs.h"

@class IMHandle, IMAVChat, NSString, NSData, NSDictionary, NSTimer, NSOperationQueue;

@interface IMAVChatParticipant : XXUnknownSuperclass {
	IMHandle* _imHandle;
	IMHandle* _inviter;
	IMAVChat* _avChat;
	NSString* _vcPartyID;
	NSString* _rawErrorString;
	NSString* _errorString;
	NSDictionary* _properties;
	NSData* _localICEData;
	NSData* _remoteICEData;
	NSOperationQueue* _messagingQueue;
	NSTimer* _connectTimeoutTimer;
	NSDictionary* _preemptiveRelayRequest;
	NSDictionary* _preemptiveRelayUpdate;
	NSString* _conferenceID;
	SecCertificate* _savedCertificate;
	unsigned _state;
	int _avRelayStatus;
	unsigned _chatEndedReason;
	int _chatError;
	unsigned _cameraType;
	unsigned _cameraOrientation;
	BOOL _inviteDelivered;
	BOOL _sendingAudio;
	BOOL _sendingVideo;
	BOOL _sendingAuxVideo;
	BOOL _audioMuted;
	BOOL _videoPaused;
	BOOL _networkStalled;
	BOOL _isInitiator;
	BOOL _isAOLInterop;
	BOOL _isRecording;
	BOOL _vcSecurityVerified;
	BOOL _usingICE;
	int _ardRole;
}
@property(assign) unsigned state;
@property(readonly, assign) BOOL isSendingAudio;
@property(readonly, assign) BOOL isSendingVideo;
@property(assign, setter=setSendingAuxVideo:) BOOL isSendingAuxVideo;
@property(assign, setter=setAudioMuted:) BOOL isAudioMuted;
@property(assign, setter=setVideoPaused:) BOOL isVideoPaused;
@property(assign, setter=setAOLInterop:) BOOL isAOLInterop;
@property(readonly, assign) BOOL isUsingICE;
@property(assign, setter=setNetworkStalled:) BOOL isNetworkStalled;
@property(assign, setter=setRecording:) BOOL isRecording;
@property(retain, setter=setVCPartyID:) NSString* vcPartyID;
@property(assign, setter=setVCSecurityVerified:) BOOL vcSecurityVerified;
@property(assign, setter=setAVRelayStatus:) int avRelayStatus;
@property(assign, setter=_setCameraType:) unsigned cameraType;
@property(assign, setter=_setCameraOrientation:) unsigned cameraOrientation;
@property(readonly, retain) IMHandle* imHandle;
@property(readonly, retain) IMHandle* invitedBy;
@property(assign, setter=setAVChat:) IMAVChat* avChat;
@property(readonly, assign) BOOL isInitiator;
@property(readonly, assign) unsigned reasonChatEnded;
@property(readonly, assign) int error;
@property(assign, setter=setARDRole:) int ardRole;
@property(retain, nonatomic) NSDictionary* properties;
@property(retain, nonatomic, setter=_setPreemptiveRelayInitate:) NSDictionary* _preemptiveRelayInitate;
@property(retain, nonatomic, setter=_setPreemptiveRelayUpdate:) NSDictionary* _preemptiveRelayUpdate;
@property(assign, nonatomic) NSData* remoteICEData;
@property(readonly, assign) BOOL isLocalParticipant;
@property(readonly, retain) NSString* name;
-(id)init;
-(id)_initAs:(id)as invitedBy:(id)by sendingAudio:(BOOL)audio sendingVideo:(BOOL)video usingICE:(BOOL)ice toChat:(id)chat inState:(unsigned)state withError:(int)error andReason:(unsigned)reason andVCPartyID:(id)anId account:(id)account;
-(id)initAs:(id)as invitedBy:(id)by toChat:(id)chat account:(id)account;
-(id)initWithStatusNugget:(id)statusNugget andChat:(id)chat account:(id)account;
-(id)initAs:(id)as invitedBy:(id)by ARDRole:(int)role toChat:(id)chat account:(id)account;
-(void)disconnectFromAVChat;
-(id)description;
-(void)dealloc;
-(id)statusNugget;
-(void)requestIconIfNecessary;
-(id)getLocalICEData;
-(id)rebuildLocalICEData;
-(void)_handleIMAVResponse:(unsigned)response;
-(void)_noteInviteDelivered;
-(void)setStateToEndedWithReason:(unsigned)reason andError:(int)error;
-(void)_setState:(unsigned)state withReason:(unsigned)reason andError:(int)error;
-(void)_setConferenceID:(id)anId;
-(void)_switchToUseNewIMHandle:(id)useNewIMHandle;
@end

@interface IMAVChatParticipant (ParticipantActions)
-(void)sendInvitation;
-(void)cancelInvitation;
-(void)sendVCUpdate;
-(void)sendResponse:(unsigned)response;
-(void)sendCounterProposal;
-(void)sendRelayProposal;
-(void)receivedRelayProposalRequestWithConnectionData:(id)connectionData;
-(void)receivedRelayProposalAcceptWithConnectionData:(id)connectionData;
-(void)setWaitingToConnect:(BOOL)connect;
-(void)resetWaitingToConnectTimer;
-(void)_connectTimeout:(id)timeout;
@end

@interface IMAVChatParticipant (MessageQueue)
-(void)_flushMessagesQueue;
-(void)_cancelMessagesQueue;
-(void)_enqueueOperation:(id)operation;
@end

@interface IMAVChatParticipant (IMAVChatParticipantExtendedErrorHandling)
@property(readonly, assign) IMAVChatParticipant* remoteErrorParticipant;
@property(readonly, retain) NSString* errorString;
@property(readonly, retain) NSString* rawErrorString;
-(void)_getErrorString:(id*)string rawString:(id*)string2 forError:(int)error;
-(void)_generateErrorStrings;
-(id)errorStringFor:(int)aFor;
@end

@interface IMAVChatParticipant (IMAVChatParticipantExtendedErrorHandling_Private)
-(void)_setError:(int)error;
@end

@interface IMAVChatParticipant (IMAVChatParticipantSecurity)
@property(readonly, assign) BOOL vcSecurityVerified;
@property(readonly, assign) SecCertificate* certificate;
@end

@interface IMAVChatParticipant (IMAVChatParticipantSecurity_Private)
-(void)setSavedCertificate:(SecCertificate*)certificate;
@end

@interface IMAVChatParticipant (IMAVChatParticipantVideoProperties)
@property(assign, setter=setAudioMuted:) BOOL isAudioMuted;
@property(assign, setter=setVideoPaused:) BOOL isVideoPaused;
@property(readonly, assign) BOOL isSendingAudio;
@property(readonly, assign) BOOL isSendingVideo;
@property(assign, setter=setSendingAuxVideo:) BOOL isSendingAuxVideo;
@end

@interface IMAVChatParticipant (IMAVChatParticipantVideoLayers)
@property(assign, nonatomic) void* videoBackLayer;
@property(assign, nonatomic) void* videoLayer;
@end

