/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Conference.framework/Conference
 */

#import "IMAVChatDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "CNFConferenceController.h"
#import "IMAVInvitationControllerDelegate.h"
#import "IMAVControllerDelegate.h"
#import "Conference-Structs.h"

@class IMAVChat, CNFServiceHandler, NSMutableArray, NSURL, NSTimer;

@interface CNFConferenceController : XXUnknownSuperclass <IMAVControllerDelegate, IMAVInvitationControllerDelegate, IMAVChatDelegate> {
@private
	BOOL _isConnected;
	BOOL _fullConferenceCapable;
	IMAVChat* _activeAVChat;
	NSMutableArray* _avChatList;
	CNFServiceHandler* _serviceHandler;
	NSTimer* _waitingForFirstRemoteFrameTimer;
	BOOL _waitingForFirstRemoteFrame;
	NSURL* _delayedInvitationURL;
}
@property(readonly, assign, nonatomic) IMAVChat* avChat;
@property(readonly, assign, nonatomic) BOOL isFullConferenceCapable;
+(id)sharedInstance;
+(id)sharedFullConferenceInstance;
+(id)sharedExistingInstance;
+(BOOL)conferencingRegistrationIsSupported;
+(BOOL)conferencingIsSupported;
+(BOOL)conferencingIsRestricted;
+(BOOL)conferencingIsEnabled;
+(BOOL)connect;
+(BOOL)disconnect;
+(BOOL)isConnected;
+(void)reconcileHarlequinAccountStatus;
+(void)reconcileDaemonControllerConnection;
+(void)setConferencingEnabled:(BOOL)enabled;
+(id)registrationStatusSettingsString;
-(id)init;
-(void)_postSimpleNotificationName:(id)name;
-(id)_initFullConferenceCapable:(BOOL)capable;
-(void)dealloc;
-(void)connectToService;
-(void)iChatAgentConnected;
-(void)iChatAgentDisconnected;
-(void)disconnectFromService;
-(BOOL)accountsAreLoggedIn;
-(void)setNeedsPushReliability:(BOOL)reliability;
-(id)_imHandleFromURL:(id)url;
-(void)_cleanUpAfterAVChat;
-(void)_fakeFirstRemoteFrameNotification:(id)notification;
-(void)_setupWaitingForFirstRemoteFrameTimerForAVChat:(id)avchat;
-(void)_cancelWaitingForFirstRemoteFrameTimer;
-(BOOL)conferencingIsAvailable;
-(void)_updateEnabledStatusChanged;
-(void)_handleInvitationFrom:(id)from conferenceID:(id)anId;
-(void)_handleMissedInvitationFrom:(id)from conferenceID:(id)anId;
-(void)_handleAVChatStateChangeFromState:(unsigned)state to:(unsigned)to withReason:(unsigned)reason;
-(void)_sendPresentConferenceNotification;
-(void)_handleInitiationOfAVConference;
-(void)_handleConferenceDidStart;
-(void)_handleEndConferenceWithReason:(unsigned)reason error:(int)error;
-(void)_handleAccountNotRegisteredForURL:(id)url registrationInProgress:(BOOL)progress;
-(void)_handleChangeForRemoteIsMuted:(BOOL)remoteIsMuted;
-(void)_handleChangeForRemoteIsPaused:(BOOL)remoteIsPaused;
-(void)_presentCallScreenForIMAVChat:(id)imavchat;
-(BOOL)_activeChatExists;
-(BOOL)canSendConferenceInvitationTo:(id)to;
-(void)sendConferenceInvitationTo:(id)to;
-(void)acceptConferenceInvitationFrom:(id)from conferenceID:(id)anId;
-(void)rejectConferenceInvitationFrom:(id)from conferenceID:(id)anId;
-(BOOL)conferenceMuted;
-(void)setConferenceMuted:(BOOL)muted;
-(BOOL)conferencePaused;
-(void)setConferencePaused:(BOOL)paused;
-(void)setIsSendingAudio:(BOOL)audio;
-(void)setIsSendingVideo:(BOOL)video;
-(int)cameraType;
-(void)setCameraType:(int)type;
-(void)endConference;
-(BOOL)isInConference;
-(void)invitedToIMAVChat:(id)imavchat;
-(void)inviteFailedFromIMHandle:(id)imhandle reason:(int)reason;
-(void)conference:(id)conference receivedInvitationFromIMHandle:(id)imhandle;
-(void)conference:(id)conference handleMissedInvitationFromIMHandle:(id)imhandle;
-(void)conference:(id)conference receivedCancelledInvitationFromIMHandle:(id)imhandle;
-(void)avChatStateChangedFrom:(unsigned)from to:(unsigned)to reason:(unsigned)reason;
-(void)_handleConferenceConnecting:(id)connecting;
-(void)_handleConferenceInviteSent:(id)sent;
-(void)_handleConferenceConnected:(id)connected;
-(void)_handleConferenceEnded:(id)ended withReason:(unsigned)reason withError:(int)error;
-(void)avChat:(id)chat didSendInvitationForParticipant:(id)participant;
-(void)avChat:(id)chat stateChanged:(unsigned)changed;
-(void)avChat:(id)chat remoteParticipant:(id)participant muteChanged:(BOOL)changed;
-(void)avChat:(id)chat remoteParticipant:(id)participant pauseChanged:(BOOL)changed;
-(void)receivedFirstPreviewForAVChat:(id)avchat;
-(void)receivedFirstRemoteFrameForAVChat:(id)avchat;
-(void)remoteCameraBeingChangedForAVChat:(id)avchat;
-(void)remoteCameraDidChangeForAVChat:(id)remoteCamera newCameraType:(unsigned)type;
-(void)avChat:(id)chat remoteOrientationChanged:(unsigned)changed;
-(BOOL)canInitiateFaceTimeForPhoneNumber:(id)phoneNumber;
-(BOOL)canInitiateFaceTimeForDestinationID:(id)destinationID;
-(id)faceTimeURLForPhoneNumber:(id)phoneNumber;
-(id)faceTimeURLForDestinationID:(id)destinationID;
-(BOOL)canInitiateConferenceForPhoneNumber:(id)phoneNumber;
-(BOOL)canInitiateConferenceForDestinationID:(id)destinationID;
-(id)conferenceURLForPhoneNumber:(id)phoneNumber;
-(id)conferenceURLForDestinationID:(id)destinationID;
-(void)hangUpConference;
-(BOOL)havePreviouslyConferencedWithID:(id)anId;
-(void)setHavePreviouslyConferenced:(BOOL)conferenced withID:(id)anId;
@end

@interface CNFConferenceController (PrivateMethods)
+(CFPhoneNumberRef)phoneNumberRefCopyForDestinationId:(id)destinationId useNetworkCountryCode:(BOOL)code;
-(id)availableFaceTimeURLs;
-(int)activationState;
-(id)contactFaceTimeURLForABRecord:(void*)abrecord;
-(BOOL)contactCanBeConferenced:(void*)conferenced;
-(BOOL)_blockingIsInConference;
@end

