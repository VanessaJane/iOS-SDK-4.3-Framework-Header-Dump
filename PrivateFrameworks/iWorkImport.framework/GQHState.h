/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "iWorkImport-Structs.h"
#import "GQHState.h"

@class GQHTableState, GQHXML, GQSDocument;
@protocol GQHContext;

__attribute__((visibility("hidden")))
@interface GQHState : XXUnknownSuperclass {
@private
	GQHXML* mHtmlDoc;
	CGSize mScale;
	CFStringRef mStyleData;
	GQHTableState* mTableState;
	GQSDocument* mProcessorState;
	CFDictionaryRef mStyleIndexes;
	CFDictionaryRef mStyleNameMap;
	CFArrayRef mImplicitStyles;
	int mColoredBackgroundLayerCount;
	int mMultiColumnedDepth;
	CFArrayRef mGraphicPropertiesStack;
	int mParagraphCount;
	int mParagraphIndex;
	int mCachedCellStyleIndex;
	CFDictionaryRef mCachedTableStyles;
	int mCachedTextStyleIndex;
	CFDictionaryRef mCachedTextStyles;
	int mInlineStyleIndex;
	CFDictionaryRef mInlineStyles;
	CFDictionaryRef mColorStrings;
	id<GQHContext> mShapeContext;
	int mOutlineLevel;
	int mOutlineStyleType;
	int mShapeIDCounter;
	unsigned mTextScale;
}
-(id)initWithState:(id)state needIndexFile:(BOOL)file documentSize:(CGSize)size;
-(id)initWithState:(id)state;
-(id)initWithState:(id)state documentSize:(CGSize)size;
-(void)dealloc;
-(id)htmlDoc;
-(void)setScale:(CGSize)scale;
-(CGSize)scale;
-(void)addStyle:(CFStringRef)style className:(CFStringRef)name srcStyle:(id)style3;
-(CFStringRef)makeInlineStyle:(CFStringRef)style;
-(CFStringRef)makeInlineStyle:(CFStringRef)style inDocument:(id)document;
-(void)addCachedStyle:(CFStringRef)style;
-(CFStringRef)className:(id)name;
-(id)tableState;
-(id)processorState;
-(BOOL)finishMainHtml;
-(void)addedDrawableWithBounds:(CGRect)bounds;
-(CFStringRef)createStyleName:(id)name type:(const char*)type;
-(BOOL)drawablesNeedCssZOrdering;
-(CFStringRef)cssZOrderClassForDrawable:(id)drawable;
-(CFStringRef)cssZOrderClassForDrawableUid:(const char*)drawableUid;
-(void)pushImplicitStyle:(id)style;
-(id)implicitStyle;
-(void)popImplicitStyle;
-(void)setColoredBackground:(BOOL)background;
-(BOOL)coloredBackground;
-(void)setMultiColumned:(BOOL)columned;
-(BOOL)multiColumned;
-(void)enterGraphicObject;
-(void)leaveGraphicObject;
-(void)setParagraphCount:(int)count;
-(int)paragraphCount;
-(void)setParagraphIndex:(int)index;
-(int)paragraphIndex;
-(CFStringRef)cachedClassStringForCellStyle:(id)cellStyle fillStyle:(id)style cellClass:(Class)aClass vectorStyles:(id*)styles groupLevel:(unsigned short)level hasFormula:(BOOL)formula;
-(CFStringRef)addCacheForCellStyle:(id)cellStyle fillStyle:(id)style cellClass:(Class)aClass vectorStyles:(id*)styles groupLevel:(unsigned short)level hasFormula:(BOOL)formula baseClassString:(CFStringRef)string cssCachedStyle:(id)style8;
-(CFStringRef)cachedClassStringForTextStyle:(id)textStyle implicitStyle:(id)style isColoredBackground:(BOOL)background outlineLevel:(int)level outlineType:(int)type isSpan:(BOOL)span;
-(CFStringRef)addCachedClassStringForTextStyle:(id)textStyle implicitStyle:(id)style isColoredBackground:(BOOL)background outlineLevel:(int)level outlineType:(int)type isSpan:(BOOL)span baseClassString:(CFStringRef)string cssCachedStyle:(id)style8;
-(CFStringRef)getColorString:(id)string;
-(BOOL)shouldMapLinkWithUrl:(CFStringRef)url;
-(id)shapeContext;
-(BOOL)useOutline;
-(int)outlineLevel;
-(void)setOutlineLevel:(int)level;
-(int)outlineStyleType;
-(void)setOutlineStyleType:(int)type;
-(CFStringRef)createUniqueShapeId:(const char*)anId;
-(unsigned)textScale;
-(void)setTextScale:(unsigned)scale;
-(void)invalidateTextScale;
-(BOOL)needAbsolutelyPositionedTables;
-(BOOL)allowInlineWrap;
@end

@interface GQHState (Private)
-(int)indexForStyle:(const char*)style;
@end

