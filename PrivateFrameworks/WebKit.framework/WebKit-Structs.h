/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

typedef struct _NSZone NSZone;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct EditorClient EditorClient;
typedef struct PageGroup PageGroup;
typedef struct Debugger Debugger;
typedef struct Page {
	OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > _field1;
	OwnPtr<WebCore::Chrome> _field2;
	OwnPtr<WebCore::SelectionController> _field3;
	OwnPtr<WebCore::FocusController> _field4;
	OwnPtr<WebCore::Settings> _field5;
	OwnPtr<WebCore::ProgressTracker> _field6;
	RefPtr<WebCore::BackForwardList> _field7;
	RefPtr<WebCore::Frame> _field8;
	RefPtr<WebCore::HistoryItem> _field9;
	RefPtr<WebCore::PluginData> _field10;
	RefPtr<WebCore::RenderTheme> _field11;
	EditorClient* _field12;
	int _field13;
	String _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	bool _field19;
	bool _field20;
	float _field21;
	bool _field22;
	String _field23;
	String _field24;
	bool _field25;
	int _field26;
	OwnPtr<WebCore::PageGroup> _field27;
	PageGroup* _field28;
	Debugger* _field29;
	double _field30;
	int _field31;
	bool _field32;
	OwnPtr<WebCore::PluginHalter> _field33;
	RefPtr<WebCore::StorageNamespace> _field34;
} Page;

typedef struct StringImpl StringImpl;

template<>
struct RefPtr<WebCore::StringImpl> {
	StringImpl* m_ptr;
};

typedef struct String {
	RefPtr<WebCore::StringImpl> m_impl;
} String;

typedef struct AtomicString {
	String m_string;
} AtomicString;

typedef struct Frame Frame;
template<>
struct RefPtr<WebCore::Frame> {
	Frame* m_ptr;
};

typedef struct FrameTree {
	Frame* m_thisFrame;
	Frame* m_parent;
	AtomicString m_name;
	RefPtr<WebCore::Frame> m_nextSibling;
	Frame* m_previousSibling;
	RefPtr<WebCore::Frame> m_firstChild;
	Frame* m_lastChild;
	unsigned m_childCount;
} FrameTree;

typedef struct FrameLoaderClient FrameLoaderClient;

typedef struct KURL {
	String m_string;
	unsigned m_isValid : 1;
	unsigned m_protocolInHTTPFamily : 1;
	int m_schemeEnd;
	int m_userStart;
	int m_userEnd;
	int m_passwordEnd;
	int m_hostEnd;
	int m_portEnd;
	int m_pathAfterLastSlash;
	int m_pathEnd;
	int m_queryEnd;
	int m_fragmentEnd;
} KURL;

template<>
struct pair<WebCore::AtomicString,WebCore::String>;

template<>
struct HashTable<WebCore::AtomicString,std::pair<WebCore::AtomicString, WebCore::String>,WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String> >,WebCore::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String> >,WTF::HashTraits<WebCore::AtomicString> > {
	pair<WebCore::AtomicString,WebCore::String>* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

typedef struct HTTPHeaderMap {
	HashTable<WebCore::AtomicString,std::pair<WebCore::AtomicString, WebCore::String>,WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String> >,WebCore::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String> >,WTF::HashTraits<WebCore::AtomicString> > m_impl;
} HTTPHeaderMap;

template<>
struct VectorBuffer<WebCore::String,0ul> {
	String* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::String,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::String,0ul> m_buffer;
};

typedef struct FormData FormData;

template<>
struct RefPtr<WebCore::FormData> {
	FormData* m_ptr;
};

@class NSURLRequest;
template<>
struct RetainPtr<NSURLRequest> {
	NSURLRequest* m_ptr;
};

typedef struct ResourceRequest {
	KURL m_url;
	int m_cachePolicy;
	double m_timeoutInterval;
	KURL m_firstPartyForCookies;
	String m_httpMethod;
	HTTPHeaderMap m_httpHeaderFields;
	Vector<WebCore::String,0ul> m_responseContentDispositionEncodingFallbackArray;
	RefPtr<WebCore::FormData> m_httpBody;
	bool m_allowCookies;
	bool m_resourceRequestUpdated;
	bool m_platformRequestUpdated;
	bool m_reportUploadProgress;
	int m_priority;
	int m_targetType;
	bool m_mainResourceRequest;
	RetainPtr<NSURLRequest> m_nsRequest;
} ResourceRequest;

typedef struct FormState FormState;

template<>
struct RefPtr<WebCore::FormState> {
	FormState* m_ptr;
};

typedef struct PolicyCallback {
	ResourceRequest m_request;
	RefPtr<WebCore::FormState> m_formState;
	String m_frameName;
	/*function-pointer*/ void* m_navigationFunction;
	/*function-pointer*/ void* m_newWindowFunction;
	/*function-pointer*/ void* m_contentFunction;
	void* m_argument;
} PolicyCallback;

typedef struct PolicyChecker {
	Frame* m_frame;
	bool m_delegateIsDecidingNavigationPolicy;
	bool m_delegateIsHandlingUnimplementablePolicy;
	int m_loadType;
	PolicyCallback m_callback;
} PolicyChecker;

typedef struct HistoryItem HistoryItem;

template<>
struct RefPtr<WebCore::HistoryItem> {
	HistoryItem* m_ptr;
};

typedef struct HistoryController {
	Frame* m_frame;
	RefPtr<WebCore::HistoryItem> m_currentItem;
	RefPtr<WebCore::HistoryItem> m_previousItem;
	RefPtr<WebCore::HistoryItem> m_provisionalItem;
} HistoryController;

typedef struct ResourceLoadNotifier {
	Frame* m_frame;
} ResourceLoadNotifier;

typedef struct TextResourceDecoder TextResourceDecoder;

template<>
struct RefPtr<WebCore::TextResourceDecoder> {
	TextResourceDecoder* m_ptr;
};

typedef struct DocumentWriter {
	Frame* m_frame;
	bool m_receivedData;
	String m_mimeType;
	bool m_encodingWasChosenByUser;
	String m_encoding;
	RefPtr<WebCore::TextResourceDecoder> m_decoder;
} DocumentWriter;

typedef struct DocumentLoader DocumentLoader;
template<>
struct RefPtr<WebCore::DocumentLoader> {
	DocumentLoader* m_ptr;
};

typedef struct SerializedScriptValue SerializedScriptValue;

template<>
struct RefPtr<WebCore::SerializedScriptValue> {
	SerializedScriptValue* m_ptr;
};

typedef struct IconLoader IconLoader;

template<>
struct OwnPtr<WebCore::IconLoader> {
	IconLoader* m_ptr;
};

typedef struct {
	int* _field1;
} XXStruct_f1ovNA;

typedef struct FrameLoader FrameLoader;
template<>
struct Timer<WebCore::FrameLoader> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	FrameLoader* _field6;
	XXStruct_f1ovNA _field7;
};

template<>
struct HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > {
	Frame** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > {
	HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > m_impl;
};

struct FrameLoader {
	/*function-pointer*/ void** _field1;
	Frame* _field2;
	FrameLoaderClient* _field3;
	PolicyChecker _field4;
	HistoryController _field5;
	ResourceLoadNotifier _field6;
	DocumentWriter _field7;
	int _field8;
	int _field9;
	RefPtr<WebCore::DocumentLoader> _field10;
	RefPtr<WebCore::DocumentLoader> _field11;
	RefPtr<WebCore::DocumentLoader> _field12;
	bool _field13;
	bool _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	String _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	bool _field22;
	bool _field23;
	bool _field24;
	RefPtr<WebCore::SerializedScriptValue> _field25;
	KURL _field26;
	KURL _field27;
	OwnPtr<WebCore::IconLoader> _field28;
	bool _field29;
	bool _field30;
	bool _field31;
	bool _field32;
	bool _field33;
	KURL _field34;
	Timer<WebCore::FrameLoader> _field35;
	bool _field36;
	bool _field37;
	Frame* _field38;
	HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > _field39;
	bool _field40;
	bool _field41;
	bool _field42;
	bool _field43;
	bool _field44;
	bool _field45;
	int _field46;
	int _field47;
	bool _field48;
};

typedef struct RedirectScheduler RedirectScheduler;
template<>
struct Timer<WebCore::RedirectScheduler> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	RedirectScheduler* _field6;
	XXStruct_f1ovNA _field7;
};

struct RedirectScheduler {
	Frame* _field1;
	Timer<WebCore::RedirectScheduler> _field2;
	OwnPtr<WebCore::ScheduledNavigation> _field3;
};

typedef struct ScheduledNavigation ScheduledNavigation;

template<>
struct OwnPtr<WebCore::ScheduledNavigation> {
	ScheduledNavigation* m_ptr;
};

typedef struct DOMWindow* DOMWindowRef;

template<>
struct RefPtr<WebCore::DOMWindow> {
	DOMWindowRef m_ptr;
};

template<>
struct HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > {
	DOMWindowRef* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > {
	HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > m_impl;
};

typedef struct Document Document;
typedef struct RenderObject RenderObject;
typedef struct Node Node;
typedef struct HTMLFrameOwnerElement {
	/*function-pointer*/ void** _field1;
	/*function-pointer*/ void** _field2;
	int _field3;
	Node* _field4;
	WeakGCPtr<WebCore::DOMObject> _field5;
	Document* _field6;
	Node* _field7;
	Node* _field8;
	RenderObject* _field9;
	unsigned _field10;
	Node* _field11;
	Node* _field12;
	QualifiedName _field13;
	RefPtr<WebCore::NamedNodeMap> _field14;
	RefPtr<WebCore::CSSMutableStyleDeclaration> _field15;
	Frame* _field16;
	int _field17;
} HTMLFrameOwnerElement;

typedef struct FrameView FrameView;

template<>
struct RefPtr<WebCore::FrameView> {
	FrameView* m_ptr;
};

struct Document Document;

template<>
struct RefPtr<WebCore::Document> {
	Document* m_ptr;
};

template<>
struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >;

template<>
struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > {
	pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > > {
	HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > m_impl;
};

typedef struct RootObject RootObject;

template<>
struct RefPtr<JSC::Bindings::RootObject> {
	RootObject* m_ptr;
};

template<>
struct pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >;

template<>
struct HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > {
	pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > {
	HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > m_impl;
};

@class WebScriptObject;
template<>
struct RetainPtr<WebScriptObject> {
	WebScriptObject* m_ptr;
};

typedef struct XSSAuditor* XSSAuditorRef;

template<>
struct OwnPtr<WebCore::XSSAuditor> {
	XSSAuditorRef m_ptr;
};

typedef struct ScriptController {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > > m_windowShells;
	Frame* m_frame;
	int m_handlerLineNumber;
	String* m_sourceURL;
	bool m_inExecuteScript;
	bool m_processingTimerCallback;
	bool m_paused;
	bool m_allowPopupsFromPlugin;
	RefPtr<JSC::Bindings::RootObject> m_bindingRootObject;
	HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > m_rootObjects;
	RetainPtr<WebScriptObject> m_windowScriptObject;
	OwnPtr<WebCore::XSSAuditor> m_XSSAuditor;
} ScriptController;

struct Node Node;

template<>
struct RefPtr<WebCore::Node> {
	Node* m_ptr;
};

typedef struct Position {
	RefPtr<WebCore::Node> m_anchorNode;
	int m_offset;
	unsigned m_anchorType : 2;
	unsigned m_isLegacyEditingPosition : 1;
} Position;

typedef struct VisibleSelection {
	Position m_base;
	Position m_extent;
	Position m_start;
	Position m_end;
	int m_affinity;
	int m_selectionType;
	bool m_baseIsFirst;
} VisibleSelection;

typedef struct SelectionController SelectionController;
template<>
struct Timer<WebCore::SelectionController> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	SelectionController* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct IntPoint {
	int m_x;
	int m_y;
} IntPoint;

typedef struct IntSize {
	int m_width;
	int m_height;
} IntSize;

typedef struct IntRect {
	IntPoint m_location;
	IntSize m_size;
} IntRect;

typedef struct Color {
	unsigned m_color;
	bool m_valid;
} Color;

struct SelectionController {
	Frame* _field1;
	int _field2;
	VisibleSelection _field3;
	int _field4;
	Timer<WebCore::SelectionController> _field5;
	IntRect _field6;
	IntRect _field7;
	IntRect _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	bool _field13;
	bool _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	Color _field19;
	int _field20;
};

struct Frame {
	int _field1;
	Page* _field2;
	FrameTree _field3;
	FrameLoader _field4;
	RedirectScheduler _field5;
	RefPtr<WebCore::DOMWindow> _field6;
	HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > _field7;
	HTMLFrameOwnerElement* _field8;
	RefPtr<WebCore::FrameView> _field9;
	RefPtr<WebCore::Document> _field10;
	ScriptController _field11;
	String _field12;
	String _field13;
	float _field14;
	SelectionController _field15;
	VisibleSelection _field16;
	Editor _field17;
	EventHandler _field18;
	AnimationController _field19;
	RefPtr<WebCore::CSSMutableStyleDeclaration> _field20;
	Timer<WebCore::Frame> _field21;
	float _field22;
	IntPoint _field23;
	ViewportArguments _field24;
	bool _field25;
	VisibleSelection _field26;
	VisibleSelection _field27;
	FloatSize _field28;
	unsigned _field29;
	unsigned _field30;
	unsigned _field31;
	double _field32;
	double _field33;
	Timer<WebCore::Frame> _field34;
	int _field35;
	bool _field36;
	bool _field37;
	bool _field38;
	bool _field39;
	bool _field40;
	bool _field41;
	int _field42;
};

typedef struct DeleteButtonController DeleteButtonController;

template<>
struct OwnPtr<WebCore::DeleteButtonController> {
	DeleteButtonController* m_ptr;
};

typedef struct CompositeEditCommand CompositeEditCommand;
typedef struct EditCommand {
	/*function-pointer*/ void** _field1;
	int _field2;
	RefPtr<WebCore::Document> _field3;
	VisibleSelection _field4;
	VisibleSelection _field5;
	RefPtr<WebCore::Element> _field6;
	RefPtr<WebCore::Element> _field7;
	CompositeEditCommand* _field8;
} EditCommand;

template<>
struct RefPtr<WebCore::EditCommand> {
	EditCommand* m_ptr;
};

typedef struct Text Text;

template<>
struct RefPtr<WebCore::Text> {
	Text* m_ptr;
};

typedef struct CompositionUnderline CompositionUnderline;

template<>
struct VectorBuffer<WebCore::CompositionUnderline,0ul> {
	CompositionUnderline* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::CompositionUnderline,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::CompositionUnderline,0ul> m_buffer;
};

typedef struct Editor {
	Frame* m_frame;
	OwnPtr<WebCore::DeleteButtonController> m_deleteButtonController;
	RefPtr<WebCore::EditCommand> m_lastEditCommand;
	RefPtr<WebCore::Node> m_removedAnchor;
	RefPtr<WebCore::Text> m_compositionNode;
	unsigned m_compositionStart;
	unsigned m_compositionEnd;
	Vector<WebCore::CompositionUnderline,0ul> m_customCompositionUnderlines;
	bool m_ignoreCompositionSelectionChange;
	bool m_shouldStartNewKillRingSequence;
	bool m_shouldStyleWithCSS;
} Editor;

typedef struct EventHandler EventHandler;
template<>
struct Timer<WebCore::EventHandler> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	EventHandler* _field6;
	XXStruct_f1ovNA _field7;
};

struct RenderObject RenderObject;

typedef struct SVGElementInstance* SVGElementInstanceRef;

template<>
struct RefPtr<WebCore::SVGElementInstance> {
	SVGElementInstanceRef m_ptr;
};

typedef struct RenderLayer RenderLayer;

typedef struct Scrollbar Scrollbar;

template<>
struct RefPtr<WebCore::Scrollbar> {
	Scrollbar* m_ptr;
};

template<>
struct pair<unsigned int,WTF::RefPtr<WebCore::Touch> >;
template<>
struct HashTable<unsigned int,std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> >,WTF::PairFirstExtractor<std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >,WTF::HashTraits<unsigned int> > {
	pair<unsigned int,WTF::RefPtr<WebCore::Touch> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > > {
	HashTable<unsigned int,std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> >,WTF::PairFirstExtractor<std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >,WTF::HashTraits<unsigned int> > m_impl;
};

typedef struct RefPtr<WebCore::EventTarget> RefPtr<WebCore::EventTarget>;
template<>
struct HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > {
	RefPtr<WebCore::EventTarget>* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

struct EventHandler {
	Frame* _field1;
	bool _field2;
	bool _field3;
	RefPtr<WebCore::Node> _field4;
	bool _field5;
	bool _field6;
	bool _field7;
	IntPoint _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	Timer<WebCore::EventHandler> _field12;
	Timer<WebCore::EventHandler> _field13;
	RenderObject* _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	Timer<WebCore::EventHandler> _field18;
	bool _field19;
	RefPtr<WebCore::SVGElementInstance> _field20;
	RefPtr<WebCore::SVGElementInstance> _field21;
	RenderLayer* _field22;
	RefPtr<WebCore::Node> _field23;
	RefPtr<WebCore::Node> _field24;
	RefPtr<WebCore::Node> _field25;
	RefPtr<WebCore::Frame> _field26;
	RefPtr<WebCore::Scrollbar> _field27;
	int _field28;
	RefPtr<WebCore::Node> _field29;
	float _field30;
	float _field31;
	float _field32;
	float _field33;
	unsigned _field34;
	HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > > _field35;
	HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > _field36;
	RefPtr<WebCore::Frame> _field37;
	RefPtr<WebCore::HTMLFrameSetElement> _field38;
	IntSize _field39;
	IntPoint _field40;
	IntPoint _field41;
	double _field42;
	PlatformMouseEvent _field43;
	bool _field44;
	RefPtr<WebCore::Node> _field45;
	bool _field46;
	RefPtr<WebCore::Node> _field47;
	id _field48;
	bool _field49;
};

template<>
struct pair<unsigned int,WTF::RefPtr<WebCore::Touch> >;

typedef struct EventTarget EventTarget;
template<>
struct RefPtr<WebCore::EventTarget> {
	EventTarget* _field1;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > {
	HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > m_impl;
};

typedef struct HTMLFrameSetElement* HTMLFrameSetElementRef;

template<>
struct RefPtr<WebCore::HTMLFrameSetElement> {
	HTMLFrameSetElementRef m_ptr;
};

typedef struct PlatformMouseEvent {
	IntPoint m_position;
	IntPoint m_globalPosition;
	int m_button;
	int m_eventType;
	int m_clickCount;
	bool m_shiftKey;
	bool m_ctrlKey;
	bool m_altKey;
	bool m_metaKey;
	double m_timestamp;
	unsigned m_modifierFlags;
} PlatformMouseEvent;

typedef struct AnimationControllerPrivate AnimationControllerPrivate;

typedef struct AnimationController {
	AnimationControllerPrivate* m_data;
} AnimationController;

typedef struct CSSMutableStyleDeclaration* CSSMutableStyleDeclarationRef;

template<>
struct RefPtr<WebCore::CSSMutableStyleDeclaration> {
	CSSMutableStyleDeclarationRef m_ptr;
};

template<>
struct Timer<WebCore::Frame> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	Frame* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct ViewportArguments {
	float initialScale;
	float minimumScale;
	float maximumScale;
	float width;
	float height;
	float userScalable;
} ViewportArguments;

typedef struct FloatSize {
	float m_width;
	float m_height;
} FloatSize;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct CGImage* CGImageRef;

typedef struct LegacyWebArchive {
	int _field1;
	RefPtr<WebCore::ArchiveResource> _field2;
	Vector<WTF::RefPtr<WebCore::ArchiveResource>,0ul> _field3;
	Vector<WTF::RefPtr<WebCore::Archive>,0ul> _field4;
} LegacyWebArchive;

template<>
struct RefPtr<WebCore::LegacyWebArchive> {
	LegacyWebArchive* m_ptr;
};

template<>
struct PassRefPtr<WebCore::LegacyWebArchive> {
	LegacyWebArchive* _field1;
};

typedef struct ArchiveResource ArchiveResource;
template<>
struct RefPtr<WebCore::ArchiveResource> {
	ArchiveResource* _field1;
};

template<>
struct VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>,0ul> {
	RefPtr<WebCore::ArchiveResource>* _field1;
	unsigned _field2;
};

template<>
struct Vector<WTF::RefPtr<WebCore::ArchiveResource>,0ul> {
	unsigned _field1;
	VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>,0ul> _field2;
};

template<>
struct RefPtr<WebCore::Archive>;

template<>
struct VectorBuffer<WTF::RefPtr<WebCore::Archive>,0ul> {
	RefPtr<WebCore::Archive>* _field1;
	unsigned _field2;
};

template<>
struct Vector<WTF::RefPtr<WebCore::Archive>,0ul> {
	unsigned _field1;
	VectorBuffer<WTF::RefPtr<WebCore::Archive>,0ul> _field2;
};

typedef struct __CFBundle* CFBundleRef;

typedef struct Geolocation Geolocation;
template<>
struct RefPtr<WebCore::Geolocation> {
	Geolocation* m_ptr;
};

template<>
struct RefPtr<WebCore::Geolocation::GeoNotifier>;

template<>
struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	RefPtr<WebCore::Geolocation::GeoNotifier>* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field1;
};

template<>
struct pair<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >;

template<>
struct HashTable<int,std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairFirstExtractor<std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::HashTraits<int> > {
	pair<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IntHash<unsigned int>,WTF::HashTraits<int>,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	HashTable<int,std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairFirstExtractor<std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::HashTraits<int> > _field1;
};

template<>
struct pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int>;

template<>
struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >, WTF::HashTraits<int> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int>* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<int> > {
	HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >, WTF::HashTraits<int> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field1;
};

typedef struct Watchers {
	HashMap<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IntHash<unsigned int>,WTF::HashTraits<int>,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field1;
	HashMap<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<int> > _field2;
} Watchers;

struct Geolocation {
	/*function-pointer*/ void** _field1;
	int _field2;
	HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field3;
	Watchers _field4;
	Frame* _field5;
	OwnPtr<WebCore::GeolocationService> _field6;
	RefPtr<WebCore::Geoposition> _field7;
	int _field8;
	bool _field9;
	OwnPtr<WebCore::GeolocationPositionCache> _field10;
	HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field11;
};

typedef struct GeolocationService GeolocationService;

template<>
struct OwnPtr<WebCore::GeolocationService> {
	GeolocationService* _field1;
};

typedef struct Geoposition Geoposition;

template<>
struct RefPtr<WebCore::Geoposition> {
	Geoposition* m_ptr;
};

typedef struct GeolocationPositionCache GeolocationPositionCache;

template<>
struct OwnPtr<WebCore::GeolocationPositionCache> {
	GeolocationPositionCache* _field1;
};

typedef struct FileChooserClient FileChooserClient;

typedef struct Icon Icon;

template<>
struct RefPtr<WebCore::Icon> {
	Icon* m_ptr;
};

typedef struct FileChooser {
	int _field1;
	FileChooserClient* _field2;
	Vector<WebCore::String,0ul> _field3;
	RefPtr<WebCore::Icon> _field4;
	bool _field5;
} FileChooser;

template<>
struct PassRefPtr<WebCore::FileChooser> {
	FileChooser* _field1;
};

typedef struct MainResourceLoader MainResourceLoader;

template<>
struct RefPtr<WebCore::MainResourceLoader> {
	MainResourceLoader* m_ptr;
};

template<>
struct RefPtr<WebCore::ResourceLoader>;

template<>
struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::ResourceLoader>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > {
	RefPtr<WebCore::ResourceLoader>* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > {
	HashTable<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::ResourceLoader>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > m_impl;
};

typedef struct SharedBuffer SharedBuffer;

template<>
struct RefPtr<WebCore::SharedBuffer> {
	SharedBuffer* m_ptr;
};

typedef struct SubstituteData {
	RefPtr<WebCore::SharedBuffer> m_content;
	String m_mimeType;
	String m_textEncoding;
	KURL m_failingURL;
	KURL m_responseURL;
} SubstituteData;

@class NSURLResponse;
template<>
struct RetainPtr<NSURLResponse> {
	NSURLResponse* m_ptr;
};

typedef struct ResourceResponse {
	KURL m_url;
	String m_mimeType;
	long long m_expectedContentLength;
	String m_textEncodingName;
	String m_suggestedFilename;
	int m_httpStatusCode;
	String m_httpStatusText;
	HTTPHeaderMap m_httpHeaderFields;
	int m_lastModifiedDate;
	unsigned m_isNull : 1;
	unsigned m_haveParsedCacheControlHeader : 1;
	unsigned m_haveParsedAgeHeader : 1;
	unsigned m_haveParsedDateHeader : 1;
	unsigned m_haveParsedExpiresHeader : 1;
	unsigned m_haveParsedLastModifiedHeader : 1;
	unsigned m_cacheControlContainsNoCache : 1;
	unsigned m_cacheControlContainsNoStore : 1;
	unsigned m_cacheControlContainsMustRevalidate : 1;
	double m_cacheControlMaxAge;
	double m_age;
	double m_date;
	double m_expires;
	double m_lastModified;
	RetainPtr<NSURLResponse> m_nsResponse;
	bool m_isUpToDate;
} ResourceResponse;

struct ArchiveResource {
	/*function-pointer*/ void** _field1;
	int _field2;
	KURL _field3;
	ResourceResponse _field4;
	RefPtr<WebCore::SharedBuffer> _field5;
	String _field6;
	String _field7;
	String _field8;
	bool _field9;
};

@class NSError;
template<>
struct RetainPtr<NSError> {
	NSError* m_ptr;
};

typedef struct ResourceError {
	String m_domain;
	int m_errorCode;
	String m_failingURL;
	String m_localizedDescription;
	bool m_isNull;
	bool m_isCancellation;
	bool m_dataIsUpToDate;
	RetainPtr<NSError> m_platformError;
} ResourceError;

typedef struct Event Event;

template<>
struct RefPtr<WebCore::Event> {
	Event* m_ptr;
};

typedef struct NavigationAction {
	KURL m_URL;
	int m_type;
	RefPtr<WebCore::Event> m_event;
} NavigationAction;

template<>
struct VectorBuffer<WebCore::ResourceResponse,0ul> {
	ResourceResponse* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::ResourceResponse,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::ResourceResponse,0ul> m_buffer;
};

template<>
struct pair<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource> >;

template<>
struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>,std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > {
	pair<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > > {
	HashTable<WTF::RefPtr<WebCore::ResourceLoader>,std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > m_impl;
};

struct DocumentLoader {
	/*function-pointer*/ void** _field1;
	int _field2;
	bool _field3;
	Frame* _field4;
	RefPtr<WebCore::MainResourceLoader> _field5;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field6;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field7;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field8;
	RefPtr<WebCore::SharedBuffer> _field9;
	ResourceRequest _field10;
	SubstituteData _field11;
	ResourceRequest _field12;
	ResourceRequest _field13;
	ResourceResponse _field14;
	ResourceError _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	String _field22;
	String _field23;
	String _field24;
	NavigationAction _field25;
	ResourceRequest _field26;
	Vector<WebCore::ResourceResponse,0ul> _field27;
	bool _field28;
	HashMap<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > > _field29;
	Timer<WebCore::DocumentLoader> _field30;
	OwnPtr<WebCore::ArchiveResourceCollection> _field31;
	RefPtr<WebCore::SharedBuffer> _field32;
	HashSet<WebCore::String,WebCore::StringHash,WTF::HashTraits<WebCore::String> > _field33;
	Vector<WebCore::String,0ul> _field34;
	String _field35;
	bool _field36;
	OwnPtr<WebCore::ApplicationCacheHost> _field37;
};

typedef struct {
	/*function-pointer*/ void* __pfn;
	int __delta;
} XXStruct_GIci6C;

template<>
struct Timer<WebCore::DocumentLoader> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	DocumentLoader* m_object;
	XXStruct_GIci6C m_function;
};

typedef struct ArchiveResourceCollection ArchiveResourceCollection;

template<>
struct OwnPtr<WebCore::ArchiveResourceCollection> {
	ArchiveResourceCollection* m_ptr;
};

template<>
struct HashTable<WebCore::String,WebCore::String,WTF::IdentityExtractor<WebCore::String>,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WebCore::String> > {
	String* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::String,WebCore::StringHash,WTF::HashTraits<WebCore::String> > {
	HashTable<WebCore::String,WebCore::String,WTF::IdentityExtractor<WebCore::String>,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WebCore::String> > m_impl;
};

typedef struct ApplicationCacheHost ApplicationCacheHost;

template<>
struct OwnPtr<WebCore::ApplicationCacheHost> {
	ApplicationCacheHost* m_ptr;
};

template<>
struct RetainPtr<objc_object*> {
	id m_ptr;
};

template<>
struct HashTable<long unsigned int,long unsigned int,WTF::IdentityExtractor<long unsigned int>,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int>,WTF::HashTraits<long unsigned int> > {
	unsigned long* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<long unsigned int,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int> > {
	HashTable<long unsigned int,long unsigned int,WTF::IdentityExtractor<long unsigned int>,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int>,WTF::HashTraits<long unsigned int> > m_impl;
};

@class WebDataSource;
typedef struct WebDocumentLoaderMac {
	/*function-pointer*/ void** _field1;
	int _field2;
	bool _field3;
	Frame* _field4;
	RefPtr<WebCore::MainResourceLoader> _field5;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field6;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field7;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field8;
	RefPtr<WebCore::SharedBuffer> _field9;
	ResourceRequest _field10;
	SubstituteData _field11;
	ResourceRequest _field12;
	ResourceRequest _field13;
	ResourceResponse _field14;
	ResourceError _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	String _field22;
	String _field23;
	String _field24;
	NavigationAction _field25;
	ResourceRequest _field26;
	Vector<WebCore::ResourceResponse,0ul> _field27;
	bool _field28;
	HashMap<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > > _field29;
	Timer<WebCore::DocumentLoader> _field30;
	OwnPtr<WebCore::ArchiveResourceCollection> _field31;
	RefPtr<WebCore::SharedBuffer> _field32;
	HashSet<WebCore::String,WebCore::StringHash,WTF::HashTraits<WebCore::String> > _field33;
	Vector<WebCore::String,0ul> _field34;
	String _field35;
	bool _field36;
	OwnPtr<WebCore::ApplicationCacheHost> _field37;
	WebDataSource* _field38;
	bool _field39;
	RetainPtr<objc_object*> _field40;
	RetainPtr<objc_object*> _field41;
	HashSet<long unsigned int,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int> > _field42;
} WebDocumentLoaderMac;

template<>
struct PassRefPtr<WebCore::EditCommand> {
	EditCommand* _field1;
};

typedef struct Element Element;

template<>
struct RefPtr<WebCore::Element> {
	Element* m_ptr;
};

struct CompositeEditCommand CompositeEditCommand;

typedef struct HitTestResult {
	RefPtr<WebCore::Node> _field1;
	RefPtr<WebCore::Node> _field2;
	IntPoint _field3;
	IntPoint _field4;
	RefPtr<WebCore::Element> _field5;
	RefPtr<WebCore::Scrollbar> _field6;
	bool _field7;
} HitTestResult;

typedef struct OpaqueJSContext OpaqueJSContext;

template<>
struct Timer<WebCore::FrameLoader> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	FrameLoader* m_object;
	XXStruct_GIci6C m_function;
};

typedef struct FrameLoader {
	/*function-pointer*/ void** _vptr$FrameLoader;
	Frame* m_frame;
	FrameLoaderClient* m_client;
	PolicyChecker m_policyChecker;
	HistoryController m_history;
	ResourceLoadNotifier m_notifer;
	DocumentWriter m_writer;
	int m_state;
	int m_loadType;
	RefPtr<WebCore::DocumentLoader> m_documentLoader;
	RefPtr<WebCore::DocumentLoader> m_provisionalDocumentLoader;
	RefPtr<WebCore::DocumentLoader> m_policyDocumentLoader;
	bool m_delegateIsHandlingProvisionalLoadError;
	bool m_firstLayoutDone;
	bool m_quickRedirectComing;
	bool m_sentRedirectNotification;
	bool m_inStopAllLoaders;
	String m_outgoingReferrer;
	bool m_isExecutingJavaScriptFormAction;
	bool m_didCallImplicitClose;
	bool m_wasUnloadEventEmitted;
	bool m_pageDismissalEventBeingDispatched;
	bool m_isComplete;
	bool m_isLoadingMainResource;
	RefPtr<WebCore::SerializedScriptValue> m_pendingStateObject;
	KURL m_URL;
	KURL m_workingURL;
	OwnPtr<WebCore::IconLoader> m_iconLoader;
	bool m_mayLoadIconLater;
	bool m_cancellingWithLoadInProgress;
	bool m_needsClear;
	bool m_receivedData;
	bool m_containsPlugIns;
	KURL m_submittedFormURL;
	Timer<WebCore::FrameLoader> m_checkTimer;
	bool m_shouldCallCheckCompleted;
	bool m_shouldCallCheckLoadComplete;
	Frame* m_opener;
	HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > m_openedFrames;
	bool m_creatingInitialEmptyDocument;
	bool m_isDisplayingInitialEmptyDocument;
	bool m_committedFirstRealDocumentLoad;
	bool m_didPerformFirstNavigation;
	bool m_loadingFromCachedPage;
	bool m_suppressOpenerInNewFrame;
	int m_sandboxFlags;
	int m_forcedSandboxFlags;
	bool m_loadsSynchronously;
} FrameLoader;

template<>
struct Timer<WebCore::RedirectScheduler> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	RedirectScheduler* m_object;
	XXStruct_GIci6C m_function;
};

typedef struct RedirectScheduler {
	Frame* m_frame;
	Timer<WebCore::RedirectScheduler> m_timer;
	OwnPtr<WebCore::ScheduledNavigation> m_redirect;
} RedirectScheduler;

template<>
struct Timer<WebCore::SelectionController> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	SelectionController* m_object;
	XXStruct_GIci6C m_function;
};

typedef struct SelectionController {
	Frame* m_frame;
	int m_xPosForVerticalArrowNavigation;
	VisibleSelection m_selection;
	int m_granularity;
	Timer<WebCore::SelectionController> m_caretBlinkTimer;
	IntRect m_caretRect;
	IntRect m_absCaretBounds;
	IntRect m_absoluteCaretRepaintBounds;
	bool m_needsLayout;
	bool m_absCaretBoundsDirty;
	bool m_isDirectional;
	bool m_isDragCaretController;
	bool m_isCaretBlinkingSuspended;
	bool m_focused;
	bool m_caretVisible;
	bool m_caretPaint;
	bool m_updateAppearanceEnabled;
	bool m_caretBlinks;
	Color m_caretColor;
	int m_closeTypingSuppressions;
} SelectionController;

template<>
struct Timer<WebCore::EventHandler> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	EventHandler* m_object;
	XXStruct_GIci6C m_function;
};

@class WAKView;
typedef struct EventHandler {
	Frame* m_frame;
	bool m_mousePressed;
	bool m_capturesDragging;
	RefPtr<WebCore::Node> m_mousePressNode;
	bool m_mouseDownMayStartSelect;
	bool m_mouseDownWasSingleClickInSelection;
	bool m_beganSelectingText;
	IntPoint m_panScrollStartPos;
	bool m_panScrollInProgress;
	bool m_panScrollButtonPressed;
	bool m_springLoadedPanScrollInProgress;
	Timer<WebCore::EventHandler> m_hoverTimer;
	Timer<WebCore::EventHandler> m_autoscrollTimer;
	RenderObject* m_autoscrollRenderer;
	bool m_autoscrollInProgress;
	bool m_mouseDownMayStartAutoscroll;
	bool m_mouseDownWasInSubframe;
	Timer<WebCore::EventHandler> m_fakeMouseMoveEventTimer;
	bool m_svgPan;
	RefPtr<WebCore::SVGElementInstance> m_instanceUnderMouse;
	RefPtr<WebCore::SVGElementInstance> m_lastInstanceUnderMouse;
	RenderLayer* m_resizeLayer;
	RefPtr<WebCore::Node> m_capturingMouseEventsNode;
	RefPtr<WebCore::Node> m_nodeUnderMouse;
	RefPtr<WebCore::Node> m_lastNodeUnderMouse;
	RefPtr<WebCore::Frame> m_lastMouseMoveEventSubframe;
	RefPtr<WebCore::Scrollbar> m_lastScrollbarUnderMouse;
	int m_clickCount;
	RefPtr<WebCore::Node> m_clickNode;
	float m_gestureInitialDiameter;
	float m_gestureLastDiameter;
	float m_gestureInitialRotation;
	float m_gestureLastRotation;
	unsigned m_firstTouchID;
	HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > > m_touchesByID;
	HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > m_gestureTargets;
	RefPtr<WebCore::Frame> m_touchEventTargetSubframe;
	RefPtr<WebCore::HTMLFrameSetElement> m_frameSetBeingResized;
	IntSize m_offsetFromResizeCorner;
	IntPoint m_currentMousePosition;
	IntPoint m_mouseDownPos;
	double m_mouseDownTimestamp;
	PlatformMouseEvent m_mouseDown;
	bool m_useLatchedWheelEventNode;
	RefPtr<WebCore::Node> m_latchedWheelEventNode;
	bool m_widgetIsLatched;
	RefPtr<WebCore::Node> m_previousWheelScrolledNode;
	WAKView* m_mouseDownView;
	bool m_sendingEventToSubview;
} EventHandler;

template<>
struct Timer<WebCore::Frame> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	Frame* m_object;
	XXStruct_GIci6C m_function;
};

typedef struct Frame {
	int _field1;
	Page* _field2;
	FrameTree _field3;
	FrameLoader _field4;
	RedirectScheduler _field5;
	RefPtr<WebCore::DOMWindow> _field6;
	HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > _field7;
	HTMLFrameOwnerElement* _field8;
	RefPtr<WebCore::FrameView> _field9;
	RefPtr<WebCore::Document> _field10;
	ScriptController _field11;
	String _field12;
	String _field13;
	float _field14;
	SelectionController _field15;
	VisibleSelection _field16;
	Editor _field17;
	EventHandler _field18;
	AnimationController _field19;
	RefPtr<WebCore::CSSMutableStyleDeclaration> _field20;
	Timer<WebCore::Frame> _field21;
	float _field22;
	IntPoint _field23;
	ViewportArguments _field24;
	bool _field25;
	VisibleSelection _field26;
	VisibleSelection _field27;
	FloatSize _field28;
	unsigned _field29;
	unsigned _field30;
	unsigned _field31;
	double _field32;
	double _field33;
	Timer<WebCore::Frame> _field34;
	int _field35;
	bool _field36;
	bool _field37;
	bool _field38;
	bool _field39;
	bool _field40;
	bool _field41;
	int _field42;
} Frame;

typedef struct JSGlobalObject* JSGlobalObjectRef;

template<>
struct HashTable<JSC::JSGlobalObject*,JSC::JSGlobalObject*,WTF::IdentityExtractor<JSC::JSGlobalObject*>,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > {
	JSGlobalObjectRef* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<JSC::JSGlobalObject*,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > {
	HashTable<JSC::JSGlobalObject*,JSC::JSGlobalObject*,WTF::IdentityExtractor<JSC::JSGlobalObject*>,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > m_impl;
};

@class WebScriptCallFrame;
template<>
struct RetainPtr<WebScriptCallFrame> {
	WebScriptCallFrame* m_ptr;
};

template<>
struct ProtectedPtr<JSC::JSGlobalObject> {
	JSGlobalObjectRef m_ptr;
};

typedef struct WebScriptDebugger {
	/*function-pointer*/ void** _field1;
	HashSet<JSC::JSGlobalObject*,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > _field2;
	bool _field3;
	RetainPtr<WebScriptCallFrame> _field4;
	ProtectedPtr<JSC::JSGlobalObject> _field5;
	RetainPtr<WebScriptCallFrame> _field6;
} WebScriptDebugger;

template<>
struct pair<long long int,WTF::RetainPtr<NSMutableArray> >;

template<>
struct HashTable<long long int,std::pair<long long int, WTF::RetainPtr<NSMutableArray> >,WTF::PairFirstExtractor<std::pair<long long int, WTF::RetainPtr<NSMutableArray> > >,WTF::IntHash<long long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > >,WTF::HashTraits<long long int> > {
	pair<long long int,WTF::RetainPtr<NSMutableArray> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<long long int,WTF::RetainPtr<NSMutableArray>,WTF::IntHash<long long unsigned int>,WTF::HashTraits<long long int>,WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > {
	HashTable<long long int,std::pair<long long int, WTF::RetainPtr<NSMutableArray> >,WTF::PairFirstExtractor<std::pair<long long int, WTF::RetainPtr<NSMutableArray> > >,WTF::IntHash<long long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > >,WTF::HashTraits<long long int> > _field1;
};

template<>
struct HashTable<WebCore::Page*,WebCore::Page*,WTF::IdentityExtractor<WebCore::Page*>,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > {
	Page** _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::Page*,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > {
	HashTable<WebCore::Page*,WebCore::Page*,WTF::IdentityExtractor<WebCore::Page*>,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > _field1;
};

template<>
struct HashTable<long long unsigned int,long long unsigned int,WTF::IdentityExtractor<long long unsigned int>,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int>,WTF::HashTraits<long long unsigned int> > {
	unsigned long long* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<long long unsigned int,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int> > {
	HashTable<long long unsigned int,long long unsigned int,WTF::IdentityExtractor<long long unsigned int>,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int>,WTF::HashTraits<long long unsigned int> > _field1;
};

typedef struct StorageNamespace StorageNamespace;

template<>
struct RefPtr<WebCore::StorageNamespace> {
	StorageNamespace* _field1;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> >;

template<>
struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> > > {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> >* _field1;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> >;

template<>
struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> > > {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> >* _field1;
};

struct PageGroup {
	String _field1;
	HashSet<WebCore::Page*,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > _field2;
	HashSet<long long unsigned int,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int> > _field3;
	bool _field4;
	unsigned _field5;
	RefPtr<WebCore::StorageNamespace> _field6;
	OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> > > _field7;
	OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> > > _field8;
};

typedef struct EditorInternalCommand EditorInternalCommand;

typedef struct Command {
	RefPtr<WebCore::Frame> _field1;
	EditorInternalCommand* _field2;
	int _field3;
} Command;

typedef struct KeyboardEvent {
	/*function-pointer*/ void** _field1;
	int _field2;
	AtomicString _field3;
	bool _field4;
	bool _field5;
	bool _field6;
	bool _field7;
	bool _field8;
	bool _field9;
	bool _field10;
	unsigned short _field11;
	EventTarget* _field12;
	RefPtr<WebCore::EventTarget> _field13;
	unsigned long long _field14;
	RefPtr<WebCore::Event> _field15;
	RefPtr<WebCore::DOMWindow> _field16;
	int _field17;
	unsigned _field18 : 1;
	unsigned _field19 : 1;
	unsigned _field20 : 1;
	unsigned _field21 : 1;
	OwnPtr<WebCore::PlatformKeyboardEvent> _field22;
	String _field23;
	unsigned _field24;
	unsigned _field25 : 1;
	Vector<WebCore::KeypressCommand,0ul> _field26;
} KeyboardEvent;

typedef struct WebHTMLViewInterpretKeyEventsParameters {
	KeyboardEvent* _field1;
	BOOL _field2;
	BOOL _field3;
	BOOL _field4;
} WebHTMLViewInterpretKeyEventsParameters;

typedef struct CGContext* CGContextRef;

typedef struct CGPDFDocument* CGPDFDocumentRef;

typedef struct CGColor* CGColorRef;

typedef struct CGPDFPage* CGPDFPageRef;

template<>
struct PassRefPtr<WebCore::ArchiveResource> {
	ArchiveResource* _field1;
};

typedef struct ExecState ExecState;

typedef struct JSValue {
	union {
		long long asEncodedJSValue;
		double asDouble;
		IntPoint asBits;
	} u;
} JSValue;

typedef struct DebuggerCallFrame {
	ExecState* _field1;
	JSValue _field2;
} DebuggerCallFrame;

typedef struct JSGlobalData* JSGlobalDataRef;
typedef struct DOMWrapperWorld {
	int _field1;
	WeakGCMap<void*,WebCore::DOMObject*> _field2;
	WeakGCMap<WebCore::StringImpl*,JSC::JSString*> _field3;
	JSGlobalDataRef _field4;
	HashSet<WebCore::Document*,WTF::PtrHash<WebCore::Document*>,WTF::HashTraits<WebCore::Document*> > _field5;
	HashSet<WebCore::ScriptController*,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > _field6;
	bool _field7;
	bool _field8;
} DOMWrapperWorld;

template<>
struct PassRefPtr<WebCore::DOMWrapperWorld> {
	DOMWrapperWorld* _field1;
};

template<>
struct RefPtr<WebCore::DOMWrapperWorld> {
	DOMWrapperWorld* m_ptr;
};

typedef struct OpaqueJSValue OpaqueJSValue;

typedef struct TextIterator TextIterator;

template<>
struct OwnPtr<WebCore::TextIterator> {
	TextIterator* m_ptr;
};

typedef struct WebResourceDelegateImplementationCache {
	/*function-pointer*/ void* didCancelAuthenticationChallengeFunc;
	/*function-pointer*/ void* didReceiveAuthenticationChallengeFunc;
	/*function-pointer*/ void* canAuthenticateAgainstProtectionSpaceFunc;
	/*function-pointer*/ void* connectionPropertiesFunc;
	/*function-pointer*/ void* webThreadDidFinishLoadingFromDataSourceFunc;
	/*function-pointer*/ void* webThreadDidFailLoadingWithErrorFromDataSourceFunc;
	/*function-pointer*/ void* webThreadIdentifierForRequestFunc;
	/*function-pointer*/ void* identifierForRequestFunc;
	/*function-pointer*/ void* willSendRequestFunc;
	/*function-pointer*/ void* didReceiveResponseFunc;
	/*function-pointer*/ void* didReceiveContentLengthFunc;
	/*function-pointer*/ void* didFinishLoadingFromDataSourceFunc;
	/*function-pointer*/ void* didFailLoadingWithErrorFromDataSourceFunc;
	/*function-pointer*/ void* didLoadResourceFromMemoryCacheFunc;
	/*function-pointer*/ void* willCacheResponseFunc;
	/*function-pointer*/ void* plugInFailedWithErrorFunc;
	/*function-pointer*/ void* shouldUseCredentialStorageFunc;
} WebResourceDelegateImplementationCache;

typedef struct WebFrameLoadDelegateImplementationCache {
	/*function-pointer*/ void* didClearWindowObjectForFrameFunc;
	/*function-pointer*/ void* didClearWindowObjectForFrameInScriptWorldFunc;
	/*function-pointer*/ void* didClearInspectorWindowObjectForFrameFunc;
	/*function-pointer*/ void* windowScriptObjectAvailableFunc;
	/*function-pointer*/ void* didHandleOnloadEventsForFrameFunc;
	/*function-pointer*/ void* didReceiveServerRedirectForProvisionalLoadForFrameFunc;
	/*function-pointer*/ void* didCancelClientRedirectForFrameFunc;
	/*function-pointer*/ void* willPerformClientRedirectToURLDelayFireDateForFrameFunc;
	/*function-pointer*/ void* didChangeLocationWithinPageForFrameFunc;
	/*function-pointer*/ void* didPushStateWithinPageForFrameFunc;
	/*function-pointer*/ void* didReplaceStateWithinPageForFrameFunc;
	/*function-pointer*/ void* didPopStateWithinPageForFrameFunc;
	/*function-pointer*/ void* willCloseFrameFunc;
	/*function-pointer*/ void* didStartProvisionalLoadForFrameFunc;
	/*function-pointer*/ void* didReceiveTitleForFrameFunc;
	/*function-pointer*/ void* didCommitLoadForFrameFunc;
	/*function-pointer*/ void* didFailProvisionalLoadWithErrorForFrameFunc;
	/*function-pointer*/ void* didFailLoadWithErrorForFrameFunc;
	/*function-pointer*/ void* didFinishLoadForFrameFunc;
	/*function-pointer*/ void* didFirstLayoutInFrameFunc;
	/*function-pointer*/ void* didFirstVisuallyNonEmptyLayoutInFrameFunc;
	/*function-pointer*/ void* didFinishDocumentLoadForFrameFunc;
	/*function-pointer*/ void* didDisplayInsecureContentFunc;
	/*function-pointer*/ void* didRunInsecureContentFunc;
} WebFrameLoadDelegateImplementationCache;

typedef struct WebScriptDebugDelegateImplementationCache {
	BOOL didParseSourceExpectsBaseLineNumber;
	/*function-pointer*/ void* didParseSourceFunc;
	/*function-pointer*/ void* failedToParseSourceFunc;
	/*function-pointer*/ void* didEnterCallFrameFunc;
	/*function-pointer*/ void* willExecuteStatementFunc;
	/*function-pointer*/ void* willLeaveCallFrameFunc;
	/*function-pointer*/ void* exceptionWasRaisedFunc;
} WebScriptDebugDelegateImplementationCache;

typedef struct WebHistoryDelegateImplementationCache {
	/*function-pointer*/ void* navigatedFunc;
	/*function-pointer*/ void* clientRedirectFunc;
	/*function-pointer*/ void* serverRedirectFunc;
	/*function-pointer*/ void* setTitleFunc;
	/*function-pointer*/ void* populateVisitedLinksFunc;
} WebHistoryDelegateImplementationCache;

template<>
struct pair<long unsigned int,WTF::RetainPtr<objc_object*> >;

template<>
struct HashTable<long unsigned int,std::pair<long unsigned int, WTF::RetainPtr<objc_object*> >,WTF::PairFirstExtractor<std::pair<long unsigned int, WTF::RetainPtr<objc_object*> > >,WTF::IntHash<long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*> > >,WTF::HashTraits<long unsigned int> > {
	pair<long unsigned int,WTF::RetainPtr<objc_object*> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<long unsigned int,WTF::RetainPtr<objc_object*>,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int>,WTF::HashTraits<WTF::RetainPtr<objc_object*> > > {
	HashTable<long unsigned int,std::pair<long unsigned int, WTF::RetainPtr<objc_object*> >,WTF::PairFirstExtractor<std::pair<long unsigned int, WTF::RetainPtr<objc_object*> > >,WTF::IntHash<long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*> > >,WTF::HashTraits<long unsigned int> > m_impl;
};

typedef struct __CFRunLoopObserver* CFRunLoopObserverRef;

typedef struct WebObjectInternal WebObjectInternal;

typedef struct UserContentURLPattern {
	bool m_invalid;
	String m_scheme;
	String m_host;
	String m_path;
	bool m_matchSubdomains;
} UserContentURLPattern;

@class GeolocationCoreLocationDelegate;
template<>
struct RetainPtr<GeolocationCoreLocationDelegate> {
	GeolocationCoreLocationDelegate* m_ptr;
};

typedef struct GeolocationLink GeolocationLink;

template<>
struct HashTable<WebCore::GeolocationLink*,WebCore::GeolocationLink*,WTF::IdentityExtractor<WebCore::GeolocationLink*>,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > {
	GeolocationLink** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::GeolocationLink*,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > {
	HashTable<WebCore::GeolocationLink*,WebCore::GeolocationLink*,WTF::IdentityExtractor<WebCore::GeolocationLink*>,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > m_impl;
};

typedef struct PositionError PositionError;

template<>
struct RefPtr<WebCore::PositionError> {
	PositionError* m_ptr;
};

typedef struct GeolocationManager {
	RetainPtr<GeolocationCoreLocationDelegate> _field1;
	HashSet<WebCore::GeolocationLink*,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > _field2;
	bool _field3;
	RefPtr<WebCore::Geoposition> _field4;
	RefPtr<WebCore::PositionError> _field5;
} GeolocationManager;

typedef struct BackForwardList BackForwardList;

template<>
struct PassRefPtr<WebCore::BackForwardList> {
	BackForwardList* _field1;
};

template<>
struct PassRefPtr<WebDocumentLoaderMac> {
	WebDocumentLoaderMac* _field1;
};

template<>
struct Timer<WebCore::DocumentLoader> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	DocumentLoader* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct __GSFont* GSFontRef;

typedef struct _NSRange {
	unsigned _field1;
	unsigned _field2;
} NSRange;

template<>
struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >;

template<>
struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > {
	HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >* _field1;
};

typedef struct Chrome Chrome;

template<>
struct OwnPtr<WebCore::Chrome> {
	Chrome* _field1;
};

template<>
struct OwnPtr<WebCore::SelectionController> {
	SelectionController* _field1;
};

typedef struct FocusController FocusController;

template<>
struct OwnPtr<WebCore::FocusController> {
	FocusController* _field1;
};

typedef struct Settings Settings;

template<>
struct OwnPtr<WebCore::Settings> {
	Settings* _field1;
};

typedef struct ProgressTracker ProgressTracker;

template<>
struct OwnPtr<WebCore::ProgressTracker> {
	ProgressTracker* _field1;
};

template<>
struct RefPtr<WebCore::BackForwardList> {
	BackForwardList* _field1;
};

typedef struct PluginData PluginData;

template<>
struct RefPtr<WebCore::PluginData> {
	PluginData* _field1;
};

typedef struct RenderTheme RenderTheme;

template<>
struct RefPtr<WebCore::RenderTheme> {
	RenderTheme* _field1;
};

struct EditorClient EditorClient;

template<>
struct OwnPtr<WebCore::PageGroup> {
	PageGroup* _field1;
};

struct Debugger Debugger;

typedef struct PluginHalter PluginHalter;

template<>
struct OwnPtr<WebCore::PluginHalter> {
	PluginHalter* _field1;
};

template<>
struct PassRefPtr<WebCore::Frame> {
	Frame* _field1;
};

typedef struct DOMObject* DOMObjectRef;

template<>
struct WeakGCPtr<WebCore::DOMObject> {
	DOMObjectRef _field1;
};

typedef struct QualifiedNameImpl QualifiedNameImpl;

typedef struct QualifiedName {
	QualifiedNameImpl* _field1;
} QualifiedName;

typedef struct NamedNodeMap NamedNodeMap;

template<>
struct RefPtr<WebCore::NamedNodeMap> {
	NamedNodeMap* _field1;
};

typedef struct VisiblePosition {
	Position _field1;
	int _field2;
} VisiblePosition;

typedef struct Range Range;
template<>
struct PassRefPtr<WebCore::Range> {
	Range* _field1;
};

typedef struct RangeBoundaryPoint {
	RefPtr<WebCore::Node> _field1;
	int _field2;
	Node* _field3;
} RangeBoundaryPoint;

struct Range {
	int _field1;
	RefPtr<WebCore::Document> _field2;
	RangeBoundaryPoint _field3;
	RangeBoundaryPoint _field4;
};

template<>
struct VectorBuffer<WebCore::Node*,0ul> {
	Node** _field1;
	unsigned _field2;
};

template<>
struct Vector<WebCore::Node*,0ul> {
	unsigned _field1;
	VectorBuffer<WebCore::Node*,0ul> _field2;
};

template<>
struct PassRefPtr<WebCore::HistoryItem> {
	HistoryItem* _field1;
};

struct EventTarget EventTarget;

typedef struct PlatformKeyboardEvent PlatformKeyboardEvent;

template<>
struct OwnPtr<WebCore::PlatformKeyboardEvent> {
	PlatformKeyboardEvent* _field1;
};

typedef struct KeypressCommand KeypressCommand;

template<>
struct VectorBuffer<WebCore::KeypressCommand,0ul> {
	KeypressCommand* _field1;
	unsigned _field2;
};

template<>
struct Vector<WebCore::KeypressCommand,0ul> {
	unsigned _field1;
	VectorBuffer<WebCore::KeypressCommand,0ul> _field2;
};

typedef struct IconFetcher IconFetcher;

template<>
struct PassRefPtr<WebCore::IconFetcher> {
	IconFetcher* _field1;
};

template<>
struct RetainPtr<WebIconFetcher> {
	id _field1;
};

typedef struct WebIconFetcherClient {
	/*function-pointer*/ void** _field1;
	RetainPtr<WebIconFetcher> _field2;
	id _field3;
	SEL _field4;
} WebIconFetcherClient;

template<>
struct pair<void*,WebCore::DOMObject*>;

template<>
struct HashTable<void*,std::pair<void*, WebCore::DOMObject*>,WTF::PairFirstExtractor<std::pair<void*, WebCore::DOMObject*> >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WebCore::DOMObject*> >,WTF::HashTraits<void*> > {
	pair<void*,WebCore::DOMObject*>* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<void*,WebCore::DOMObject*,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WebCore::DOMObject*> > {
	HashTable<void*,std::pair<void*, WebCore::DOMObject*>,WTF::PairFirstExtractor<std::pair<void*, WebCore::DOMObject*> >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WebCore::DOMObject*> >,WTF::HashTraits<void*> > _field1;
};

template<>
struct WeakGCMap<void*,WebCore::DOMObject*> {
	HashMap<void*,WebCore::DOMObject*,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WebCore::DOMObject*> > _field1;
};

template<>
struct pair<WebCore::StringImpl*,JSC::JSString*>;

template<>
struct HashTable<WebCore::StringImpl*,std::pair<WebCore::StringImpl*, JSC::JSString*>,WTF::PairFirstExtractor<std::pair<WebCore::StringImpl*, JSC::JSString*> >,WebCore::StringHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::StringImpl*>, WTF::HashTraits<JSC::JSString*> >,WTF::HashTraits<WebCore::StringImpl*> > {
	pair<WebCore::StringImpl*,JSC::JSString*>* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<WebCore::StringImpl*,JSC::JSString*,WebCore::StringHash,WTF::HashTraits<WebCore::StringImpl*>,WTF::HashTraits<JSC::JSString*> > {
	HashTable<WebCore::StringImpl*,std::pair<WebCore::StringImpl*, JSC::JSString*>,WTF::PairFirstExtractor<std::pair<WebCore::StringImpl*, JSC::JSString*> >,WebCore::StringHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::StringImpl*>, WTF::HashTraits<JSC::JSString*> >,WTF::HashTraits<WebCore::StringImpl*> > _field1;
};

template<>
struct WeakGCMap<WebCore::StringImpl*,JSC::JSString*> {
	HashMap<WebCore::StringImpl*,JSC::JSString*,WebCore::StringHash,WTF::HashTraits<WebCore::StringImpl*>,WTF::HashTraits<JSC::JSString*> > _field1;
};

struct JSGlobalData* JSGlobalDataRef;

template<>
struct HashTable<WebCore::Document*,WebCore::Document*,WTF::IdentityExtractor<WebCore::Document*>,WTF::PtrHash<WebCore::Document*>,WTF::HashTraits<WebCore::Document*>,WTF::HashTraits<WebCore::Document*> > {
	Document** _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::Document*,WTF::PtrHash<WebCore::Document*>,WTF::HashTraits<WebCore::Document*> > {
	HashTable<WebCore::Document*,WebCore::Document*,WTF::IdentityExtractor<WebCore::Document*>,WTF::PtrHash<WebCore::Document*>,WTF::HashTraits<WebCore::Document*>,WTF::HashTraits<WebCore::Document*> > _field1;
};

template<>
struct HashTable<WebCore::ScriptController*,WebCore::ScriptController*,WTF::IdentityExtractor<WebCore::ScriptController*>,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > {
	ScriptController** _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::ScriptController*,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > {
	HashTable<WebCore::ScriptController*,WebCore::ScriptController*,WTF::IdentityExtractor<WebCore::ScriptController*>,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > _field1;
};

typedef struct SecurityOrigin {
	int _field1;
	int _field2;
	String _field3;
	String _field4;
	String _field5;
	String _field6;
	String _field7;
	unsigned short _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	bool _field13;
} SecurityOrigin;


