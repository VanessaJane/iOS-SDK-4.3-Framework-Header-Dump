/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
 */

#import "MCSlide.h"
#import "MCAnimationPathSupport.h"
#import "iLifeSlideshow-Structs.h"
#import "MCFilterSupport.h"
#import "MCObject.h"

@class NSMutableSet, NSRecursiveLock, MCSong, NSMutableDictionary, MCAssetVideo, NSDictionary, MCContainerEffect, NSSet, NSString, NSArray;

@interface MCSlide : MCObject {
	MCAssetVideo* mAsset;
	MCSong* mSong;
	unsigned mIndex;
	float mAudioVolume;
	double mAudioFadeInDuration;
	double mAudioFadeOutDuration;
	float mAudioDuckLevel;
	double mAudioDuckInDuration;
	double mAudioDuckOutDuration;
	double mStartTime;
	double mDuration;
	BOOL mStartTimeIsDefined;
	BOOL mDurationIsDefined;
	NSString* mFrameID;
	NSMutableDictionary* mFrameAttributes;
	NSString* mKenBurnsType;
	CGPoint mCenter;
	float mScale;
	float mRotation;
	NSMutableSet* mAnimationPaths;
	NSRecursiveLock* mAnimationPathsLock;
	NSMutableSet* mFilters;
	NSRecursiveLock* mFiltersLock;
	NSArray* mCachedOrderedFilters;
	MCContainerEffect* mContainer;
}
@property(retain) MCAssetVideo* asset;
@property(readonly, assign) MCSong* song;
@property(assign) unsigned index;
@property(assign) float audioVolume;
@property(assign) double audioFadeInDuration;
@property(assign) double audioFadeOutDuration;
@property(assign) float audioDuckLevel;
@property(assign) double audioDuckInDuration;
@property(assign) double audioDuckOutDuration;
@property(assign) double startTime;
@property(readonly, assign) BOOL startTimeIsDefined;
@property(assign) double duration;
@property(readonly, assign) BOOL durationIsDefined;
@property(copy) NSString* frameID;
@property(copy) NSString* kenBurnsType;
@property(assign) CGPoint center;
@property(assign) float scale;
@property(assign) float rotation;
@property(assign) MCContainerEffect* container;
@property(copy) NSDictionary* frameAttributes;
+(id)keyPathsForValuesAffectingValueForKey:(id)key;
-(id)init;
-(id)initWithImprint:(id)imprint andMontage:(id)montage;
-(void)demolish;
-(id)imprint;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(void)setSongForAsset:(id)asset;
-(void)undefineStartTime;
-(void)undefineDuration;
-(id)frameAttributeForKey:(id)key;
-(void)setFrameAttribute:(id)attribute forKey:(id)key;
-(id)snapshot;
-(void)_copySelfToSnapshot:(id)snapshot;
@end

@interface MCSlide (MCFilterSupport) <MCFilterSupport>
@property(readonly, assign) NSSet* filters;
@property(readonly, assign) NSArray* orderedFilters;
-(void)initFiltersWithImprints:(id)imprints;
-(void)demolishFilters;
-(id)imprintsForFilters;
-(unsigned)countOfFilters;
-(id)filterAtIndex:(unsigned)index;
-(id)addFilterWithFilterID:(id)filterID;
-(id)insertFilterWithFilterID:(id)filterID atIndex:(unsigned)index;
-(void)removeFiltersAtIndices:(id)indices;
-(void)removeAllFilters;
-(void)moveFiltersAtIndices:(id)indices toIndex:(unsigned)index;
-(void)observeFilter:(id)filter;
-(void)unobserveFilter:(id)filter;
@end

@interface MCSlide (MCAnimationPathSupport) <MCAnimationPathSupport>
@property(readonly, assign) NSSet* animationPaths;
@property(readonly, assign) unsigned countOfAnimationPaths;
-(void)initAnimationPathsWithImprints:(id)imprints;
-(void)demolishAnimationPaths;
-(id)imprintsForAnimationPaths;
-(id)animationPathForKey:(id)key createIfNeeded:(BOOL)needed;
-(id)animationPathForKey:(id)key;
-(void)removeAnimationPathForKey:(id)key;
-(void)removeAllAnimationPaths;
@end

