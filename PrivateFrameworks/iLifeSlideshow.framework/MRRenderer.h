/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
 */

#import "iLifeSlideshow-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class EAGLContext, NSConditionLock, MCMontage, NSThread, NSLock, NSDictionary, MRLayerParallelizer;
@protocol MRLiveSlideshowDelegate;

@interface MRRenderer : XXUnknownSuperclass {
	MCMontage* mMontage;
	MRLayerParallelizer* mTopMRLayer;
	NSLock* mRenderLock;
	NSConditionLock* mWarmUpLock;
	CGSize mSize;
	int mOrientation;
	BOOL mNeedsToUpdateSize;
	BOOL mIsPlaying;
	id mDisplayLink;
	NSDictionary* mParameters;
	EAGLContext* mContext;
	EAGLContext* mPreloadContext;
	unsigned mFramebuffer;
	unsigned mRenderbuffer;
	BOOL mFramebufferIsSetup;
	NSThread* mRenderThread;
	double mTimeOffset;
	double mLastRenderedTime;
	float mFadeAlpha;
	BOOL mShowFPS;
	BOOL mPauseWhenStill;
	BOOL mIsWarmingUp;
	BOOL mWasForcedPaused;
	id<MRLiveSlideshowDelegate> mLiveSlideshowDelegate;
}
@property(retain) MCMontage* montage;
@property(readonly, assign) EAGLContext* context;
@property(readonly, assign) EAGLContext* preloadContext;
@property(assign) CGSize size;
@property(assign) int orientation;
@property(readonly, assign) BOOL isPlaying;
@property(readonly, assign) BOOL isWarmingUp;
@property(assign) BOOL showFPS;
@property(assign) float fadeAlpha;
@property(assign) id<MRLiveSlideshowDelegate> liveSlideshowDelegate;
@property(assign) double time;
-(id)init;
-(void)dealloc;
-(void)cleanup;
-(void)setContext:(id)context frameBuffer:(unsigned)buffer renderBuffer:(unsigned)buffer3;
-(void)render;
-(void)warmup;
-(void)warmupAndWhenDoneCallSelector:(SEL)selector withTarget:(id)target andObject:(id)object;
-(void)_warmupWithCallback:(id)callback;
-(void)pause;
-(void)pauseWhenStill;
-(void)resume;
-(void)stepForward;
-(void)stepBackward;
-(void)setForcedPaused;
-(void)_startRenderThread;
-(void)_exitRenderThread;
-(void)_startRenderTimer;
-(void)_stopRenderTimer;
-(void)_render;
-(void)_render:(id)render;
-(void)_postPlaybackOverNotification;
-(void)_displayFPS;
-(void)_warmup;
-(void)_armWarmingUp;
-(void)_warmingUpCompleted;
-(void)_pause:(BOOL)pause;
-(void)_resume;
-(void)hackCheckIfNeedsAdditionalEffectsAtTime:(double)time;
@end

