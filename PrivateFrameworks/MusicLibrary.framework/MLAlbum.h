/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSArray, NSString, NSDictionary, NSMutableDictionary;

@interface MLAlbum : XXUnknownSuperclass {
@private
	int _albumID;
	NSString* _albumName;
	NSString* _uuid;
	NSArray* _albumContents;
	NSArray* _filteredImages;
	id _posterImage;
	BOOL _isLibrary;
	unsigned char _albumKind;
	int _currentFilter;
	unsigned long long _playlistID;
	unsigned long long _songID;
	NSDictionary* _slideshowSettings;
	int _keyPhotoKeyITunes;
	int _keyPhotoFaceIndexITunes;
	int _posterImageIndex;
	unsigned _didSetPosterImageIndex : 1;
	int _hasPendingItems;
	NSMutableDictionary* _cachedIndexesByFilter;
}
+(id)libraryAlbum;
-(id)init;
-(id)initWithAlbumID:(unsigned)albumID albumName:(id)name;
-(void)dealloc;
-(id)description;
-(unsigned)albumID;
-(BOOL)isLibrary;
-(void)setLibrary:(BOOL)library;
-(id)name;
-(void)setName:(id)name;
-(id)uuid;
-(void)setUuid:(id)uuid;
-(int)albumKind;
-(void)setAlbumKind:(int)kind;
-(unsigned long long)slideshowPlaylistID;
-(void)setSlideshowPlaylistID:(unsigned long long)anId;
-(unsigned long long)slideshowSongID;
-(void)setSlideshowSongID:(unsigned long long)anId;
-(id)slideshowSettings;
-(void)setSlideshowSettings:(id)settings;
-(int)indexOfPosterImage;
-(id)_posterImage;
-(void)_setPosterImage:(id)image;
-(int)keyPhotoKey;
-(void)setKeyPhotoKey:(int)key;
-(int)keyPhotoFaceIndex;
-(void)setKeyPhotoFaceIndex:(int)index;
-(id)photoAlbumSlideshowSettings;
-(void)setPhotoAlbumSlideshowSettings:(id)settings;
-(int)currentFilter;
-(void)setCurrentFilter:(int)filter;
-(BOOL)shouldSortImagesByDate;
-(id)date;
-(BOOL)isEmpty;
-(BOOL)isEditable;
-(BOOL)deletedWhenEmpty;
-(void)_invalidateFilterCache;
-(id)_contentIndexesMatchingFilter:(int)filter albumContents:(id)contents;
-(id)contents;
-(id)contentsWithCurrentFilter;
-(id)contentsWithFilter:(int)filter;
-(void)_setAlbumContents:(id)contents invalidateFilterCache:(BOOL)cache;
-(void)setContents:(id)contents;
-(id)imageWithImageID:(int)imageID;
-(void)_incrementPendingItems;
-(void)_decrementPendingItems;
-(BOOL)hasPendingItems;
-(void)setHasPendingItem:(BOOL)item;
-(void)_removeIndexFromFilterCache:(unsigned)filterCache;
-(void)_insertIndexInFilterCache:(unsigned)filterCache;
-(void)_insertItemInAlbumContents:(id)albumContents atIndex:(unsigned)index;
-(unsigned)addItemToAlbumContents:(id)albumContents sorted:(BOOL)sorted;
-(void)removeItemFromAlbumContent:(id)albumContent;
-(void)deleteItemAtIndex:(int)index;
-(void)deleteItemsAtIndexes:(id)indexes;
-(unsigned)count;
-(unsigned)countWithCurrentFilter;
-(unsigned)photoCount;
-(unsigned)videoCount;
-(unsigned)audioCount;
-(unsigned)unknownCount;
-(unsigned)knownCount;
-(unsigned)countWithFilter:(int)filter;
-(id)faceImageWithSize:(CGSize)size returnLocationInImage:(CGRect*)image;
@end

