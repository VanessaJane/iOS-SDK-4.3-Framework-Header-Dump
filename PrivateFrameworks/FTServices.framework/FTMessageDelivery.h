/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/FTServices.framework/FTServices
 */

#import "FTMessageQueueDelegate.h"
#import "FTServices-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class FTMessageQueue, PCPersistentTimer, NSData, NSDate, FTMessage, NSString, NSArray, NSNumber;
@protocol FTMessageDeliveryDelegate;

@interface FTMessageDelivery : XXUnknownSuperclass <FTMessageQueueDelegate> {
	NSNumber* _playerID;
	NSNumber* _protocolVersion;
	NSString* _userID;
	NSData* _signature;
	NSString* _deviceID;
	NSString* _deviceIDPrefix;
	NSString* _userAgent;
	NSData* _pushToken;
	SecIdentity* _clientIdentity;
	NSArray* _clientCertificates;
	id _delegate;
	FTMessageQueue* _queue;
	PCPersistentTimer* _retryTimer;
	NSDate* _retryDate;
	BOOL _shouldQueue;
	unsigned _retries;
}
@property(copy) NSArray* clientCertificates;
@property(copy) NSNumber* protocolVersion;
@property(copy) NSString* userAgent;
@property(copy) NSString* userID;
@property(copy) NSString* deviceID;
@property(copy) NSString* deviceIDPrefix;
@property(assign) id<FTMessageDeliveryDelegate> delegate;
@property(copy) NSData* pushToken;
@property(copy) NSData* signature;
@property(readonly, assign) NSArray* queuedMessages;
@property(readonly, assign) FTMessage* currentMessage;
@property(assign) BOOL shouldQueueItems;
@property(readonly, assign) BOOL busy;
@property(readonly, assign) BOOL hasQueuedItems;
@property(assign) SecIdentity* clientIdentity;
@property(assign) double messageTimeoutTime;
+(id)alloc;
+(id)_errorForTDMessageDeliveryStatus:(int)tdmessageDeliveryStatus userInfo:(id)info;
-(id)init;
-(void)dealloc;
-(void)invalidate;
-(void)_informDelegateAboutMessage:(id)message error:(id)error result:(id)result;
-(BOOL)_sendMessageAsynchronously:(id)asynchronously error:(id*)error;
-(void)queue:(id)queue hitTimeoutForMessage:(id)message;
-(void)cancelMessage:(id)message;
-(int)sendMessage:(id)message error:(id*)error;
-(void)_retryTimerHit:(id)hit;
-(void)_clearRetryTimer;
-(void)_setRetryTimer:(double)timer;
@end

