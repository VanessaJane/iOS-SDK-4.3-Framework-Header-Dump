/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
 */

#import "ManagedConfiguration-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSDictionary, NSMutableDictionary;

@interface MCTruthManager : XXUnknownSuperclass {
@private
	NSMutableDictionary* _defaultTruth;
	NSMutableDictionary* _truth;
	NSMutableDictionary* _profileTruth;
	NSMutableDictionary* _clientTruth;
	NSDictionary* _userSettings;
	NSDictionary* _effectiveUserSettings;
	NSDictionary* _clientTypeLoaders;
	CFDictionaryRef _clientTypeToLoaderClass;
	CFDictionaryRef _clientTypeToLoaderSelector;
	CFDictionaryRef _clientTypeToRecomputeComplianceSelector;
	dispatch_queue_s* _syncQueue;
	dispatch_queue_s* _nagMetaQueue;
	int _senderPID;
}
@property(assign) int senderPID;
+(void)_setPathsTruthFilePath:(id)path defaultTruthFilePath:(id)path2 clientTypeLoadersFilePath:(id)path3 profileTruthFilePath:(id)path4 clientTruthFilePath:(id)path5 userSettingsFilePath:(id)path6 effectiveUserSettingsFilePath:(id)path7;
+(id)sharedManager;
+(id)truthAfterApplyingTruthDictionary:(id)dictionary toTruthDictionary:(id)truthDictionary outChangeDetected:(BOOL*)detected outError:(id*)error;
+(id)truthWithCurrentTruth:(id)currentTruth defaultTruth:(id)truth profileTruth:(id)truth3 clientTruth:(id)truth4 outTruthChanged:(BOOL*)changed outError:(id*)error;
+(id)filterRestrictionDictionaryForPublicUse:(id)publicUse;
+(int)restrictedBoolForFeature:(id)feature withTruthDictionary:(id)truthDictionary;
+(id)valueForFeature:(id)feature withTruthDictionary:(id)truthDictionary;
+(id)objectForFeature:(id)feature withTruthDictionary:(id)truthDictionary;
+(BOOL)restrictedBool:(id)aBool changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions3;
+(BOOL)restrictedValue:(id)value changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions3;
+(id)defaultSettingsDict;
+(id)defaultParametersForBoolSetting:(id)boolSetting;
+(id)defaultParametersForValueSetting:(id)valueSetting;
+(int)defaultBoolValueForSetting:(id)setting;
+(id)defaultValueForSetting:(id)setting;
+(int)boolSettingForFeature:(id)feature withUserSettingDictionary:(id)userSettingDictionary;
+(id)valueSettingForFeature:(id)feature withUserSettingDictionary:(id)userSettingDictionary;
+(BOOL)boolSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings3;
+(BOOL)valueSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings3;
+(BOOL)_isDictionary:(id)dictionary differentFromDictionary:(id)dictionary2;
-(void)invalidateTruth;
-(void)invalidateSettings;
-(id)_defaultTruthDictionary;
-(id)defaultTruthDictionary;
-(id)_defaultSettingsDictionary;
-(id)_currentTruthDictionary;
-(id)currentTruthDictionary;
-(void)_setTruth:(id)truth;
-(id)_profileTruth;
-(id)profileTruth;
-(id)combinedProfileRestrictions;
-(BOOL)setProfileTruth:(id)truth outTruthChanged:(BOOL*)changed outEffectiveSettingsChanged:(BOOL*)changed3 outRecomputedNag:(BOOL*)nag outError:(id*)error;
-(id)_clientTruth;
-(id)clientTruth;
-(id)_clientTruthForClientUUID:(id)clientUUID;
-(id)_clientTypeForClientUUID:(id)clientUUID;
-(id)clientTruthForClientUUID:(id)clientUUID;
-(id)_userInfoForClientUUID:(id)clientUUID;
-(id)userInfoForClientUUID:(id)clientUUID;
-(id)allClientUUIDsForClientType:(id)clientType;
-(void)_setClientTruthsWithoutNotifications:(id)notifications;
-(BOOL)_setAllClientTruths:(id)truths outTruthChanged:(BOOL*)changed outEffectiveSettingsChanged:(BOOL*)changed3 outError:(id*)error;
-(void)setUserInfo:(id)info forClientUUID:(id)clientUUID;
-(BOOL)setAllClientTruths:(id)truths outTruthChanged:(BOOL*)changed outEffectiveSettingsChanged:(BOOL*)changed3 outRecomputedNag:(BOOL*)nag outError:(id*)error;
-(BOOL)setClientTruth:(id)truth clientType:(id)type clientUUID:(id)uuid localizedClientDescription:(id)description localizedWarning:(id)warning outTruthChanged:(BOOL*)changed outEffectiveSettingsChanged:(BOOL*)changed7 outRecomputedNag:(BOOL*)nag outError:(id*)error;
-(id)_loadClientLoaders;
-(id)_liveClientUUIDsForClientType:(id)clientType;
-(void)notifyClientsToRecomputeCompliance;
-(BOOL)removeOrphanedClientTruths;
-(BOOL)recomputeNagMetadata;
-(void)setShowNagMessage;
-(void)notifyHaveSeenComplianceMessageWithLastLockDate:(id)lastLockDate;
-(id)_init;
-(id)description;
-(void)dealloc;
-(id)potentialTruthAfterApplyingTruthDictionary:(id)dictionary outChangeDetected:(BOOL*)detected outError:(id*)error;
-(int)restrictedBoolForFeature:(id)feature;
-(id)valueForFeature:(id)feature;
-(id)objectForFeature:(id)feature;
-(id)_userSettings;
-(id)userSettings;
-(BOOL)_setUserSettings:(id)settings;
-(id)_effectiveUserSettings;
-(id)effectiveUserSettings;
-(BOOL)_setEffectiveUserSettings:(id)settings;
-(BOOL)_recomputeEffectiveUserSettings;
-(BOOL)setParametersForSettingsByType:(id)settingsByType;
-(id)effectiveParametersForBoolSetting:(id)boolSetting;
-(id)effectiveParametersForValueSetting:(id)valueSetting;
-(int)effectiveRestrictedBoolForSetting:(id)setting;
-(id)effectiveValueForSetting:(id)setting;
-(BOOL)isBoolSettingLockedDownByRestrictions:(id)restrictions;
-(BOOL)isValueSettingLockedDownByRestrictions:(id)restrictions;
-(void)removeBoolSetting:(id)setting;
-(void)removeValueSetting:(id)setting;
-(void)resetAllSettingsToDefaults;
@end

