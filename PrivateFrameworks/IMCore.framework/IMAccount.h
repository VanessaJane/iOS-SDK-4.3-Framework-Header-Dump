/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMCore.framework/IMCore
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "IMSystemMonitorListener.h"
#import "IMCore-Structs.h"

@class NSString, IMHandle, NSMutableDictionary, NSDictionary, NSData, IMPeople, NSArray, IMRemoteProxy, UIImage, NSDate, NSAttributedString, IMServiceImpl;
@protocol IMServiceSessionProtocol;

@interface IMAccount : XXUnknownSuperclass <IMSystemMonitorListener> {
	IMRemoteProxy<IMServiceSessionProtocol>* _remoteSession;
	IMServiceImpl* _service;
	IMPeople* _buddyList;
	NSMutableDictionary* _imHandles;
	NSMutableDictionary* _inlineTransfers;
	IMHandle* _loginIMHandle;
	NSArray* _cachedAllowList;
	NSArray* _cachedBlockList;
	NSString* _loginID;
	NSString* _displayName;
	NSString* _uniqueID;
	NSDictionary* _data;
	NSMutableDictionary* _dataChanges;
	NSDictionary* _profile;
	NSMutableDictionary* _profileChanges;
	NSDictionary* _accountPreferences;
	NSMutableDictionary* _accountPreferencesChanges;
	NSArray* _groups;
	NSMutableDictionary* _sortOrders;
	NSDictionary* _members;
	NSMutableDictionary* _coalescedChanges;
	NSArray* _targetGroupState;
	NSArray* _lastReceivedGroupState;
	UIImage* _smallImage;
	UIImage* _accountImage;
	NSDictionary* _subtypeInfo;
	unsigned _myStatus;
	NSMutableDictionary* _currentAccountStatus;
	NSString* _myStatusMessage;
	NSDictionary* _myNowPlaying;
	NSDate* _myIdleSince;
	NSData* _myPictureData;
	NSData* _accountImageData;
	unsigned long long _capabilities;
	NSAttributedString* _myProfile;
	int _registrationStatus;
	int _registrationFailureReason;
	NSDictionary* _registrationAlertInfo;
	unsigned _loginStatus;
	BOOL _isActive;
	BOOL _justLoggedIn;
	BOOL _asleep;
	BOOL _useMeCardName;
	int _cachedBlockingMode;
	BOOL _blockIdleStatus;
	BOOL _blockOtherAddresses;
	BOOL _allowsVCRelay;
	BOOL _syncedBuddies;
	BOOL _syncedWithRemoteBuddyList;
	BOOL _hasReceivedSync;
	int _numHolding;
	int _coalesceCount;
	BOOL _needToCheckForWatchedIMHandles;
	BOOL _iconChecked;
	BOOL _hasBeenRemoved;
}
@property(readonly, assign, nonatomic) unsigned loginStatus;
@property(readonly, assign, nonatomic) BOOL hasSyncedWithRemoteBuddies;
@property(readonly, assign, nonatomic) BOOL hasTargetGroupStateBeenMet;
@property(readonly, assign, nonatomic) BOOL isAwaitingTargetGroupState;
@property(readonly, assign, nonatomic) id loginIMHandle;
@property(readonly, assign, nonatomic) NSArray* arrayOfAllIMHandles;
@property(readonly, assign, nonatomic) NSDictionary* accountPreferences;
@property(assign, nonatomic) BOOL blockOtherAddresses;
@property(assign, nonatomic) BOOL blockIdleStatus;
@property(assign, nonatomic) unsigned blockingMode;
@property(retain, nonatomic) NSArray* allowList;
@property(retain, nonatomic) NSArray* blockList;
@property(readonly, assign, nonatomic) BOOL makingChanges;
@property(readonly, assign, nonatomic) IMPeople* buddyList;
@property(readonly, assign, nonatomic) NSArray* groupList;
@property(readonly, assign, nonatomic) NSString* password;
@property(readonly, assign, nonatomic) int invalidSettings;
@property(readonly, assign, nonatomic) BOOL validServer;
@property(readonly, assign, nonatomic) BOOL validPort;
@property(readonly, assign, nonatomic) BOOL validLogin;
@property(readonly, assign, nonatomic) BOOL handlesChatInvites;
@property(readonly, assign, nonatomic) unsigned long long capabilities;
@property(readonly, assign, nonatomic) BOOL canActivate;
@property(readonly, assign, nonatomic) BOOL isActive;
@property(assign, nonatomic) BOOL secureImEnabled;
@property(readonly, assign, nonatomic) BOOL canBeSecure;
@property(assign, nonatomic, getter=isInvisible) BOOL invisible;
@property(readonly, assign, nonatomic) BOOL justLoggedIn;
@property(readonly, assign, nonatomic) BOOL isConnected;
@property(readonly, assign, nonatomic) BOOL isConnecting;
@property(retain, nonatomic) NSString* accountDescription;
@property(readonly, assign, nonatomic) BOOL hasCustomDescription;
@property(assign, nonatomic) BOOL allowsVCRelay;
@property(assign, nonatomic) BOOL goIdle;
@property(assign, nonatomic) BOOL autoLogin;
@property(readonly, assign, nonatomic) BOOL useSSL;
@property(readonly, assign, nonatomic) int port;
@property(readonly, assign, nonatomic) NSString* server;
@property(retain, nonatomic) NSString* login;
@property(readonly, assign, nonatomic) BOOL isManaged;
@property(readonly, assign, nonatomic) NSDictionary* myStatusDictionary;
@property(readonly, assign, nonatomic) NSAttributedString* myProfile;
@property(readonly, assign, nonatomic) NSString* myNowPlayingString;
@property(readonly, assign, nonatomic) NSData* myPictureData;
@property(readonly, assign, nonatomic) NSDate* myIdleSince;
@property(readonly, assign, nonatomic) NSString* myStatusMessage;
@property(readonly, assign, nonatomic) unsigned myStatus;
@property(readonly, assign, nonatomic) NSString* loginStatusMessage;
@property(copy, nonatomic) NSString* displayName;
@property(readonly, assign, nonatomic) NSArray* aliases;
@property(readonly, assign, nonatomic) NSDictionary* profileInfo;
@property(readonly, assign, nonatomic) NSString* authorizationToken;
@property(readonly, assign, nonatomic) NSString* authorizationID;
@property(readonly, assign, nonatomic) BOOL supportsAuthorization;
@property(readonly, assign, nonatomic) int registrationFailureReason;
@property(readonly, assign, nonatomic) int registrationStatus;
@property(readonly, assign, nonatomic) BOOL supportsRegistration;
@property(readonly, assign, nonatomic) NSDictionary* accountSubtypeInfo;
@property(readonly, assign, nonatomic) IMServiceImpl* service;
@property(readonly, assign, nonatomic) NSArray* addressBookProperties;
@property(readonly, assign, nonatomic) NSString* addressBookProperty;
@property(readonly, assign, nonatomic) NSData* accountImageData;
@property(readonly, assign, nonatomic) NSArray* emailDomains;
@property(readonly, assign, nonatomic) NSString* internalName;
@property(readonly, assign, nonatomic) NSString* serviceName;
@property(readonly, assign, nonatomic) NSString* shortName;
@property(readonly, assign, nonatomic) NSString* name;
@property(readonly, assign, nonatomic) NSString* uniqueID;
@property(readonly, assign, nonatomic) NSDictionary* dictionary;
+(id)passwordForAccount:(id)account forServiceName:(id)serviceName;
+(void)setPassword:(id)password forAccount:(id)account forServiceName:(id)serviceName;
+(void)removePasswordForAccount:(id)account forServiceName:(id)serviceName;
+(id)_groupSummaryFromGroupList:(id)groupList;
+(id)nameOfLoginStatus:(unsigned)loginStatus;
+(id)arrayOfAllIMHandles;
+(id)allBuddyListIMHandles;
-(void)finalize;
-(void)dealloc;
-(void)clearServiceCaches;
-(id)initWithService:(id)service;
-(id)initWithUniqueID:(id)uniqueID service:(id)service;
-(unsigned)status;
-(void)_loginWithAutoLogin:(BOOL)autoLogin;
-(void)autoLoginAccount;
-(void)loginAccount;
-(void)logoutAccount;
-(void)loginStatusChanged:(unsigned)changed message:(id)message reason:(unsigned)reason properties:(id)properties;
-(void)_updateLogin:(id)login;
-(void)_updateMyStatus:(unsigned)status message:(id)message;
-(void)setCurrentAccountStatus:(id)status;
-(void)setUniqueID:(id)anId;
-(id)canonicalFormOfID:(id)anId;
-(BOOL)equalID:(id)anId andID:(id)anId2;
-(void)writeSettings;
-(void)resetToDefaults;
-(BOOL)emailAddressIsID:(id)anId;
-(int)compareLoginStatus:(id)status;
-(int)compareAccountNames:(id)names;
-(int)compareStatus:(id)status;
-(int)compareIDs:(id)ids;
-(int)compareServices:(id)services;
-(BOOL)hasCapability:(unsigned long long)capability;
-(void)updateCapabilities:(unsigned long long)capabilities;
-(void)setPassword:(id)password;
-(void)removePassword;
-(id)description;
-(id)_serverWithSSL:(BOOL)ssl;
-(void)setSigningCertificate:(SecCertificate*)certificate encryptionCertificate:(SecCertificate*)certificate2;
-(void)enableSecureIM:(BOOL)im;
-(void)disableCertificatesForIMHandle:(id)imhandle;
-(void)requestProperty:(id)property ofIMHandle:(id)imhandle;
-(void)setValue:(id)value ofExtraProperty:(id)extraProperty ofIMHandle:(id)imhandle;
-(void)loadFromDictionary:(id)dictionary;
-(void)setCachedAllowList:(id)list;
-(void)setCachedBlockList:(id)list;
-(void)setCachedBlockingMode:(unsigned)mode;
-(void)setCachedBlockIdleStatus:(BOOL)status;
-(void)blockMessages:(BOOL)messages fromID:(id)anId;
-(void)clearTargetState;
-(void)targetGroupStateTimeout;
-(void)setWaitForTargetState;
-(void)updateWithTargetGroups;
-(void)setTargetGroupsState:(id)state;
-(void)_applyChangesToTemporaryCache:(id)temporaryCache;
-(void)beginChanges;
-(void)hookupToDaemon;
-(void)requestGroups;
-(void)syncWithRemoteBuddies;
-(void)_ensureGroupsExists:(id)exists;
-(BOOL)addPeople:(id)people toGroups:(id)groups atLocation:(int)location;
-(BOOL)removePeople:(id)people fromGroups:(id)groups;
-(BOOL)addIMHandle:(id)handle toGroups:(id)groups atLocation:(int)location;
-(BOOL)removeIMHandle:(id)handle fromGroups:(id)groups;
-(void)addBuddyToBuddyList:(id)buddyList;
-(void)changeBuddyList:(id)list add:(BOOL)add groups:(id)groups atLocation:(int)location;
-(void)renameGroup:(id)group to:(id)to;
-(void)reorderGroup:(id)group order:(id)order;
-(void)reorderGroups:(id)groups;
-(id)propertiesForGroup:(id)group;
-(id)groupMembers:(id)members;
-(id)memberGroups:(id)groups;
-(void)endChanges;
-(void)holdBuddyUpdates;
-(void)_resumeBuddyUpdatesNow;
-(void)resumeBuddyUpdates;
-(void)buddyPropertiesChanged:(id)changed;
-(void)buddyPictureChanged:(id)changed imageData:(id)data imageHash:(id)hash;
-(void)setBuddyProperties:(id)properties buddyPictures:(id)pictures;
-(void)_serviceDidConnect:(id)_service;
-(void)_serviceDidReconnect:(id)_service;
-(void)_serviceDidDisconnect:(id)_service;
-(void)accountWillBeRemoved;
-(void)accountDidBecomeActive;
-(void)accountDidDeactivate;
-(void)_updateRegistrationStatus:(int)status error:(int)error info:(id)info;
-(BOOL)registerAccount;
-(BOOL)unregisterAccount;
-(void)_notJustLoggedIn;
-(void)setIsActive:(BOOL)active;
-(void)setIMAccountLoginStatus:(unsigned)status;
-(void)setIMAccountLoginStatus:(unsigned)status errorMessage:(id)message;
-(void)setIMAccountLoginStatus:(unsigned)status errorMessage:(id)message reason:(unsigned)reason;
-(void)_syncWithRemoteBuddies;
-(void)groupsChanged:(id)changed error:(id)error;
-(int)compareNames:(id)names;
-(id)recalculatedSubtypeInfo;
-(void)recalculateSubtypeInfo;
-(Class)imHandleClass;
-(id)imHandleWithInfo:(id)info;
-(id)existingIMHandleWithInfo:(id)info;
-(id)imHandleWithInfo:(id)info alreadyCanonical:(BOOL)canonical;
-(id)existingIMHandleWithInfo:(id)info alreadyCanonical:(BOOL)canonical;
-(id)existingIMHandleWithID:(id)anId alreadyCanonical:(BOOL)canonical;
-(id)existingIMHandleWithID:(id)anId;
-(unsigned long long)defaultHandleCapabilities;
-(id)imHandleWithID:(id)anId alreadyCanonical:(BOOL)canonical;
-(id)imHandleWithID:(id)anId;
-(id)personForIMHandle:(id)imhandle;
-(id)personSibsForIMHandle:(id)imhandle;
-(unsigned)sortOrderForIMHandle:(id)imhandle inGroup:(id)group;
-(void)setBuddyListAuthorization:(BOOL)authorization forIMHandle:(id)imhandle;
-(void)requestBuddyListAuthorizationFromIMHandle:(id)imhandle;
-(id)imHandlesForIMPerson:(id)imperson;
-(BOOL)addIMHandle:(id)handle toIMPerson:(id)imperson;
-(BOOL)removeIMHandle:(id)handle fromIMPerson:(id)imperson;
-(void)_watchBuddiesIfNecessary;
-(void)watchBuddiesIfNecessary;
-(void)startWatchingIMHandle:(id)handle;
-(void)stopWatchingIMHandle:(id)handle;
-(void)forgetAllWatches;
-(void)_refreshLoginIMHandle;
-(void)registerIMHandle:(id)handle;
-(void)unregisterIMHandle:(id)handle;
-(void)disconnectAllIMHandles;
-(void)imHandle:(id)handle buddyStatusChanged:(BOOL)changed;
-(void)handleSubscriptionRequestFrom:(id)from withMessage:(id)message;
-(void)nowLoggedIn;
-(void)nowLoggedOut;
-(id)chatIDForRoomName:(id)roomName;
-(id)defaultChatSuffix;
-(FZChatRoomValidity)validityOfChatRoomName:(id)chatRoomName;
-(BOOL)requestNewAuthorizationCredentials;
-(id)profileValueForKey:(id)key;
-(id)profileStringForKey:(id)key;
-(BOOL)removeProfileValueForKey:(id)key;
-(BOOL)setProfileValue:(id)value forKey:(id)key;
-(BOOL)setProfileString:(id)string forKey:(id)key;
-(BOOL)validateProfile;
-(int)profileValidationStatus;
-(int)profileValidationErrorReason;
-(void)_updateProfileInfo:(id)info;
-(id)_aliases;
-(id)_aliasInfoForAlias:(id)alias;
-(id)_statuses;
-(BOOL)hasAlias:(id)alias;
-(BOOL)hasAlias:(id)alias type:(int)type;
-(id)aliasesForType:(int)type;
-(BOOL)addAlias:(id)alias;
-(BOOL)addAlias:(id)alias type:(int)type;
-(BOOL)removeAlias:(id)alias;
-(BOOL)removeAlias:(id)alias type:(int)type;
-(int)typeForAlias:(id)alias;
-(BOOL)validateAlias:(id)alias;
-(BOOL)validateAlias:(id)alias type:(int)type;
-(int)validationStatusForAlias:(id)alias;
-(int)validationStatusForAlias:(id)alias type:(int)type;
-(int)validationErrorReasonForAlias:(id)alias;
-(int)validationErrorReasonForAlias:(id)alias type:(int)type;
-(id)objectForKey:(id)key;
-(void)setObject:(id)object forKey:(id)key;
-(void)removeObjectForKey:(id)key;
-(void)setDictionaryData:(id)data forKey:(id)key;
-(id)dictionaryDataForKey:(id)key;
-(id)stringForKey:(id)key;
-(void)setString:(id)string forKey:(id)key;
-(BOOL)boolForKey:(id)key;
-(void)setBool:(BOOL)aBool forKey:(id)key;
-(int)integerForKey:(id)key;
-(void)setInteger:(int)integer forKey:(id)key;
-(void)systemDidWake;
-(void)systemWillSleep;
-(id)objectForPreferenceKey:(id)preferenceKey;
-(void)setObject:(id)object forPreferenceKey:(id)preferenceKey;
-(void)removeObjectForPreferenceKey:(id)preferenceKey;
-(void)setDictionaryData:(id)data forPreferenceKey:(id)preferenceKey;
-(id)dictionaryDataForPreferenceKey:(id)preferenceKey;
-(id)stringForPreferenceKey:(id)preferenceKey;
-(void)setString:(id)string forPreferenceKey:(id)preferenceKey;
-(BOOL)boolForPreferenceKey:(id)preferenceKey;
-(void)setBool:(BOOL)aBool forPreferenceKey:(id)preferenceKey;
-(int)integerForPreferenceKey:(id)preferenceKey;
-(void)setInteger:(int)integer forPreferenceKey:(id)preferenceKey;
-(BOOL)_updateDisplayName:(id)name;
-(id)_remoteSession;
@end

