/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMCore.framework/IMCore
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class IMRemoteObject, IMDaemonListener, IMLocalObject, NSLock, NSPort, NSString, NSMutableArray, NSProtocolChecker;
@protocol FZDaemon;

@interface IMDaemonController : XXUnknownSuperclass {
	id _delegate;
	IMRemoteObject<FZDaemon>* _remoteObject;
	IMLocalObject* _localObject;
	IMDaemonListener* _daemonListener;
	NSMutableArray* _services;
	NSProtocolChecker* _protocol;
	NSString* _listenerID;
	BOOL _hasCheckedForDaemon;
	BOOL _preventReconnect;
	BOOL _inBlockingConnect;
	NSLock* _blockingLock;
	BOOL _systemShuttingDown;
	BOOL _autoReconnect;
	unsigned _gMyFZListenerCapabilities;
}
@property(readonly, assign, nonatomic) IMDaemonListener* listener;
@property(assign, nonatomic) id delegate;
@property(assign, nonatomic) BOOL autoReconnect;
@property(assign, setter=_setCapabilities:) unsigned _capabilities;
@property(readonly, assign, nonatomic) BOOL isConnected;
@property(readonly, assign, nonatomic) BOOL isConnecting;
@property(assign, nonatomic) unsigned capabilities;
@property(readonly, assign, nonatomic) NSPort* localPort;
+(id)sharedController;
+(void)_blockUntilSendQueueIsEmpty;
-(oneway void)release;
-(unsigned)retainCount;
-(id)autorelease;
-(id)init;
-(void)dealloc;
-(void)_agentDidLaunchNotification:(id)_agent;
-(void)_handleDaemonException:(id)exception;
-(void)_makeConnectionWithLaunch:(BOOL)launch;
-(void)disconnectFromDaemonWithForce:(BOOL)force;
-(void)disconnectFromDaemon;
-(BOOL)_connectToDaemonWithLaunch:(BOOL)launch capabilities:(unsigned long long)capabilities;
-(BOOL)connectToDaemonWithLaunch:(BOOL)launch;
-(BOOL)connectToDaemon;
-(BOOL)connectToDaemonWithLaunch:(BOOL)launch capabilities:(unsigned)capabilities blockUntilConnected:(BOOL)connected;
-(void)sendABInformationToDaemon;
-(id)_remoteObject;
-(void)setMyPicture:(id)picture smallPictureData:(id)data;
-(void)setMyProfile:(id)profile;
-(void)setMyStatus:(unsigned)status message:(id)message;
-(void)setMyStatus:(unsigned)status message:(id)message forAccount:(id)account;
-(void)setPresenceValue:(id)value forKey:(id)key forAccount:(id)account;
-(oneway void)_addressBookChanged:(id)changed;
-(void)blockUntilConnected;
-(oneway void)listener:(id)listener setListenerCapabilities:(unsigned)capabilities;
-(void)_localObjectDiedNotification:(id)notification;
-(void)_remoteObjectDiedNotification:(id)notification;
-(void)localObjectDiedNotification:(id)notification;
-(void)remoteObjectDiedNotification:(id)notification;
-(oneway void)listener:(id)listener setValue:(id)value ofProperty:(id)property;
-(oneway void)setValue:(id)value ofProperty:(id)property;
-(oneway void)listener:(id)listener setValue:(id)value ofPersistentProperty:(id)persistentProperty;
-(oneway void)setValue:(id)value ofPersistentProperty:(id)persistentProperty;
-(oneway void)addListener:(id)listener withListenerID:(id)listenerID capabilities:(unsigned)capabilities;
-(oneway void)listener:(id)listener setDaemonShouldTerminateWithoutActiveListeners:(BOOL)terminateWithoutActiveListeners;
-(oneway void)listener:(id)listener setDaemonShouldLogoutWithoutStatusListeners:(BOOL)logoutWithoutStatusListeners;
-(void)setDaemonTerminatesWithoutListeners:(BOOL)listeners;
-(void)setDaemonLogsOutWithoutStatusListeners:(BOOL)listeners;
-(id)methodSignatureForSelector:(SEL)selector;
-(void)forwardInvocation:(id)invocation;
@end

