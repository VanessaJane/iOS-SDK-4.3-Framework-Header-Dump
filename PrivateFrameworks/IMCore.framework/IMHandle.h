/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMCore.framework/IMCore
 */

#import "IMCore-Structs.h"
#import "NSCoding.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "IMHandle.h"

@class NSSet, NSURL, NSDate, NSAttributedString, IMServiceImpl, IMPerson, NSMutableArray, IMAccount, NSString, NSDictionary, NSData, NSArray;

@interface IMHandle : XXUnknownSuperclass <NSCoding> {
	NSString* _guid;
	IMAccount* _account;
	NSString* _id;
	NSDictionary* _otherServiceIDs;
	NSDate* _idleSince;
	NSDate* _feedUpdatedDate;
	NSDictionary* _presenceProps;
	NSDictionary* _extraProps;
	NSDictionary* _certs;
	NSSet* _groups;
	IMPerson* _person;
	NSString* _abFirstName;
	NSString* _abLastName;
	NSString* _abFullName;
	NSString* _abNickname;
	NSArray* _abEmails;
	NSString* _displayID;
	NSString* _firstName;
	NSString* _lastName;
	NSString* _fullName;
	NSString* _nickname;
	NSArray* _emails;
	NSString* _normalizedFormOfID;
	NSString* _IDWithoutResource;
	NSString* _IDWithTrimmedServer;
	NSString* _uniqueName;
	NSData* _pictureData;
	NSString* _statusMsg;
	NSString* _processedStatusMsg;
	NSAttributedString* _richStatusMsg;
	NSDate* _whenWentOffline;
	NSDate* _whenStatusChanged;
	NSString* _prevStatusMsg;
	NSMutableArray* _notificationNameQueue;
	NSMutableArray* _notificationQueue;
	NSURL* _statusMessageURL;
	NSURL* _statusURL;
	unsigned _status;
	unsigned _prevStatus;
	unsigned long long _capabilities;
	unsigned _authRequestStatus;
	unsigned _resourceIndex;
	BOOL _isRetainingAccount;
	BOOL _blockNotifications;
	BOOL _hasTemporaryWatch;
	BOOL _isMobile;
	BOOL _isBot;
	BOOL _isAnonymous;
	BOOL _beingTornDown;
	BOOL _isBuddy;
	BOOL _willUpdateIdleTime;
	BOOL _customPictureChecked;
	int _priority;
	unsigned _sortOrder;
	int _notificationQueueCount;
}
@property(retain, nonatomic) NSData* customPictureData;
@property(readonly, assign, nonatomic) BOOL areABPropertiesRecent;
@property(readonly, assign, nonatomic) NSArray* dependentIMHandles;
@property(readonly, assign, nonatomic) BOOL hasServer;
@property(readonly, assign, nonatomic) id existingIMHandleWithoutResource;
@property(readonly, assign, nonatomic) id imHandleWithoutResource;
@property(readonly, assign, nonatomic) BOOL hasLocation;
@property(readonly, assign, nonatomic) NSString* guid;
@property(readonly, assign, nonatomic) NSString* accountTypeName;
@property(readonly, assign, nonatomic) NSString* server;
@property(readonly, assign, nonatomic) NSString* IDWithoutResource;
@property(readonly, assign, nonatomic) NSString* resource;
@property(readonly, assign, nonatomic) BOOL hasResource;
@property(readonly, assign, nonatomic) BOOL supportsARDMuxing;
@property(readonly, assign, nonatomic) BOOL supportsWidescreenVideo;
@property(readonly, assign, nonatomic) BOOL hasMultiwayAudio;
@property(readonly, assign, nonatomic) BOOL hasAudio;
@property(readonly, assign, nonatomic) BOOL hasMultiwayVideo;
@property(readonly, assign, nonatomic) BOOL hasVideo;
@property(readonly, assign, nonatomic) BOOL hasConferencing;
@property(readonly, assign, nonatomic) BOOL isConferenceAvailable;
@property(readonly, assign, nonatomic) id bestAccountSibling;
@property(readonly, assign, nonatomic) id bestSibling;
@property(readonly, assign, nonatomic) NSArray* existingAccountSiblingsArray;
@property(readonly, assign, nonatomic) NSArray* accountSiblingsArray;
@property(readonly, assign, nonatomic) NSArray* siblingsArray;
@property(readonly, assign, nonatomic) NSSet* siblings;
@property(readonly, assign, nonatomic) BOOL hasOtherSiblings;
@property(readonly, assign, nonatomic) NSSet* groups;
@property(readonly, assign, nonatomic) NSArray* groupsArray;
@property(retain, nonatomic, setter=setIMPerson:) IMPerson* person;
@property(assign, nonatomic) int securityLevel;
@property(readonly, assign, nonatomic) BOOL couldBeSecure;
@property(readonly, assign, nonatomic) BOOL hasValidCertificates;
@property(readonly, assign, nonatomic) int certificateStatus;
@property(readonly, assign, nonatomic) unsigned encryptionTrustResult;
@property(readonly, assign, nonatomic) NSData* encryptionCertificate;
@property(readonly, assign, nonatomic) unsigned signingTrustResult;
@property(readonly, assign, nonatomic) NSData* signingCertificate;
@property(readonly, assign, nonatomic) NSArray* emails;
@property(readonly, assign, nonatomic) NSString* email;
@property(readonly, assign, nonatomic) NSString* nickname;
@property(readonly, assign, nonatomic) NSString* lastName;
@property(readonly, assign, nonatomic) NSString* firstName;
@property(readonly, assign, nonatomic) NSString* nameAndEmail;
@property(readonly, assign, nonatomic) NSString* nameAndID;
@property(readonly, assign, nonatomic) NSString* uniqueName;
@property(readonly, assign, nonatomic) NSString* fullName;
@property(readonly, assign, nonatomic) NSString* name;
@property(readonly, assign, nonatomic) BOOL hasName;
@property(readonly, assign, nonatomic) NSString* normalizedID;
@property(readonly, assign, nonatomic) NSString* displayID;
@property(readonly, assign, nonatomic) NSDictionary* extraProperties;
@property(readonly, assign, nonatomic) NSDictionary* presenceProperties;
@property(readonly, assign, nonatomic) NSDictionary* otherServiceIDs;
@property(readonly, assign, nonatomic) NSData* pictureData;
@property(readonly, assign, nonatomic) BOOL watchingIMHandle;
@property(readonly, assign, nonatomic) NSString* mobileDeviceName;
@property(readonly, assign, nonatomic) BOOL isLoginIMHandleForAnyAccount;
@property(readonly, assign, nonatomic) BOOL isMobile;
@property(readonly, assign, nonatomic) BOOL isSystemUser;
@property(readonly, assign, nonatomic) BOOL isAnonymous;
@property(readonly, assign, nonatomic) BOOL isBlocked;
@property(readonly, assign, nonatomic) BOOL isVisiblyBlocked;
@property(readonly, assign, nonatomic) BOOL isLoginIMHandle;
@property(readonly, assign, nonatomic) BOOL isBuddy;
@property(readonly, assign, nonatomic) BOOL isBot;
@property(readonly, assign, nonatomic) unsigned long long capabilities;
@property(readonly, assign, nonatomic) BOOL canBeDeleted;
@property(readonly, assign, nonatomic) BOOL canBeAdded;
@property(readonly, assign, nonatomic) BOOL canBeSecure;
@property(readonly, assign, nonatomic) double timeSinceStatusChanged;
@property(readonly, assign, nonatomic) double timeSinceWentOffline;
@property(readonly, assign, nonatomic) int priority;
@property(readonly, assign, nonatomic) NSDate* feedUpdatedDate;
@property(readonly, assign, nonatomic) NSString* idleString;
@property(readonly, assign, nonatomic) double idleTime;
@property(readonly, assign, nonatomic) NSString* previousStatusMessage;
@property(readonly, assign, nonatomic) unsigned previousStatus;
@property(readonly, assign, nonatomic) NSString* offlineString;
@property(readonly, assign, nonatomic) NSAttributedString* richStatusMessage;
@property(readonly, assign, nonatomic) NSString* nameOfStatus;
@property(readonly, assign, nonatomic) NSString* statusMessage;
@property(readonly, assign, nonatomic) unsigned status;
@property(readonly, assign, nonatomic) NSURL* statusURL;
@property(readonly, assign, nonatomic) unsigned authRequestStatus;
@property(readonly, assign, nonatomic) IMServiceImpl* service;
@property(readonly, assign, nonatomic) IMAccount* account;
@property(readonly, assign, nonatomic) NSString* ID;
+(void)setNotificationsEnabled:(BOOL)enabled;
+(BOOL)notificationsEnabled;
+(void)_loadStatusNames;
+(id)nameOfStatus:(unsigned)status;
+(id)imHandlesForIMPerson:(id)imperson;
+(id)bestIMHandleInArray:(id)array;
+(id)filterIMHandlesForAccountSiblings:(id)accountSiblings onAccount:(id)account;
+(id)filterIMHandlesForBestAccountSiblings:(id)bestAccountSiblings;
-(void)_unregisterFromIMPerson;
-(void)_registerForIMPerson;
-(id)init;
-(id)initWithAccount:(id)account ID:(id)anId;
-(oneway void)release;
-(void)finalize;
-(void)dealloc;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(id)copyWithZone:(NSZone*)zone;
-(id)imHandleForOtherAccount:(id)otherAccount;
-(void)setAnonymous:(BOOL)anonymous;
-(void)_postNotification:(id)notification;
-(void)_postNotificationName:(id)name userInfo:(id)info;
-(void)postNotificationName:(id)name;
-(void)setUniqueName:(id)name;
-(unsigned)hash;
-(void)clearABPerson;
-(BOOL)resetABPerson;
-(id)_abPersonCreateIfNeeded;
-(void)resetABProperties;
-(unsigned long)_trustResultForKey:(id)key;
-(void)setCertificates:(id)certificates;
-(int)_individualSecurityLevel;
-(void)disableCertificates;
-(id)_IDWithTrimmedServer;
-(BOOL)_hasServiceNameProperties;
-(BOOL)_hasABName;
-(id)_nameUsingUnique:(BOOL)unique;
-(void)resetUniqueName;
-(void)_setABPersonFirstName:(id)name lastName:(id)name2;
-(void)_setBaseFirstName:(id)name lastName:(id)name2 fullName:(id)name3;
-(void)setImageData:(id)data;
-(void)setLocalNickname:(id)nickname;
-(void)setFirstName:(id)name lastName:(id)name2 fullName:(id)name3 andUpdateABPerson:(BOOL)person;
-(void)setEmail:(id)email andUpdateABPerson:(BOOL)person;
-(void)setEmails:(id)emails andUpdateABPerson:(BOOL)person;
-(void)setFirstName:(id)name lastName:(id)name2;
-(void)setEmail:(id)email;
-(void)setEmails:(id)emails;
-(void)setIsMobile:(BOOL)mobile;
-(void)setIsBot:(BOOL)bot;
-(void)setPriority:(int)priority;
-(void)setOtherServiceIDs:(id)ids;
-(void)requestValueOfProperty:(id)property;
-(void)setValue:(id)value ofExtraProperty:(id)extraProperty;
-(void)setHasTemporaryWatch:(BOOL)watch;
-(BOOL)isBetterThanIMHandle:(id)handle;
-(id)bestIMHandleForService:(id)service;
-(id)bestIMHandleForAccount:(id)account;
-(id)bestIMHandleForAccount:(id)account onService:(id)service inGroup:(id)group otherThan:(id)than;
-(id)bestSiblingInGroup:(id)group otherThan:(id)than;
-(id)bestSiblingInGroup:(id)group;
-(void)setPresenceProperties:(id)properties;
-(void)_setExtraProperties:(id)properties;
-(void)propertiesChanged:(id)changed;
-(BOOL)_isMyIDInList:(id)list;
-(void)setBlocked:(BOOL)blocked;
-(unsigned)sortOrderInGroup:(id)group;
-(void)_removeAccountReference:(id)reference;
-(void)_stopRetainingAccount:(id)account;
-(void)_updateStatusBasedOnAuthRequestStatus;
-(void)setAuthRequestStatus:(unsigned)status;
-(void)setPersonStatus:(unsigned)status;
-(void)statusChanged:(unsigned)changed message:(id)message;
-(void)statusMessageChanged:(id)changed;
-(void)statusChanged:(unsigned)changed;
-(void)setIdleSince:(id)since;
-(void)setFeedUpdatedDate:(id)date;
-(void)setStatusURLFromString:(id)string;
-(void)_filterStatusMessage;
-(void)_clearStatusMessageURLCache;
-(void)_scheduleIdleTimeUpdate;
-(void)_updateIdleTime;
-(void)_updateIdleTimer;
-(void)setStatus:(unsigned)status message:(id)message richMessage:(id)message3;
-(id)_nameForComparisonPreferFirst:(BOOL)comparisonPreferFirst;
-(int)compareFirstNames:(id)names;
-(int)compareLastNames:(id)names;
-(int)compareStatus:(id)status;
-(int)compareIDs:(id)ids;
-(int)compareNormalizedIDs:(id)ids;
-(int)compareAccountNames:(id)names;
-(BOOL)matchesIMHandle:(id)handle;
-(BOOL)isAccountSiblingOf:(id)of;
-(BOOL)isSiblingOf:(id)of;
-(void)setCapabilities:(unsigned long long)capabilities;
-(BOOL)hasCapability:(unsigned long long)capability;
-(void)_imPersonPictureChanged:(id)changed;
-(void)customPictureDataChanged:(id)changed key:(id)key;
-(void)setCustomPictureData:(id)data key:(id)key;
-(id)description;
-(void)sendNotificationABPersonChanged;
@end

@interface IMHandle (PublicAPIMethods)
-(id)publicAPIPropertiesDictionary;
@end

@interface IMHandle (QueueNotifications)
-(BOOL)shouldQueueNotifications;
-(void)beginNotificationQueue;
-(void)releaseNotificationQueue;
@end

@interface IMHandle (IMHandleRegistrarAdditions)
-(id)imHandleRegistrarGUID;
@end

