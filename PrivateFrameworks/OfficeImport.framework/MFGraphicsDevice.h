/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class MFDeviceContext, NSMutableArray, MFObjectTable, NSObject, NSDictionary;
@protocol MFDeviceDriver;

__attribute__((visibility("hidden")))
@interface MFGraphicsDevice : XXUnknownSuperclass {
@private
	MFDeviceContext* m_currentDC;
	NSMutableArray* m_savedDC;
	NSObject<MFDeviceDriver>* m_deviceDriver;
	MFObjectTable* m_objectTable;
	MFObjectTable* m_stockObjects;
	NSDictionary* m_colorMap;
	NSDictionary* m_fillMap;
}
-(id)initWithCanvas:(CGRect)canvas;
-(void)dealloc;
-(void)setColorMap:(id)map fillMap:(id)map2;
-(id)recolor:(id)recolor fill:(BOOL)fill;
-(id)recolor:(unsigned char)recolor :(unsigned char)arg2 :(unsigned char)arg3 fill:(BOOL)fill;
-(void)done;
-(int)comment:(id)comment;
-(int)description:(id)description;
-(int)setMiterLimit:(double)limit;
-(int)setBkColour:(id)colour;
-(int)setBkMode:(int)mode;
-(int)setBrushOrg:(double)org :(double)arg2;
-(int)setStretchBltMode:(int)mode;
-(int)setTextColour:(const id)colour;
-(int)setTextJustification:(int)justification :(int)arg2;
-(int)setTextCharExtra:(int)extra;
-(int)setTextAlign:(bool)align :(int)arg2 :(int)arg3 :(int)arg4;
-(int)textOut:(int)anOut :(int)arg2 :(id)arg3;
-(int)textOutEncoded:(int)encoded :(int)arg2 :(id)arg3;
-(int)extTextOut:(int)anOut :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int*)arg9 :(int)arg10;
-(int)extTextOutEncoded:(int)encoded :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int*)arg9 :(int)arg10;
-(int)rectangle:(int)rectangle :(int)arg2 :(int)arg3 :(int)arg4;
-(int)ellipse:(int)ellipse :(int)arg2 :(int)arg3 :(int)arg4;
-(int)setViewBox:(double)box :(double)arg2 :(double)arg3 :(double)arg4;
-(int)saveDC;
-(int)restoreDC:(int)dc;
-(int)moveTo:(double)to :(double)arg2;
-(int)lineTo:(double)to :(double)arg2;
-(int)polygon:(CGPoint*)polygon :(int)arg2;
-(int)polyPolygon:(CGPoint*)polygon :(int*)arg2 :(int)arg3;
-(int)setArcDirection:(int)direction;
-(int)polyline:(CGPoint*)polyline :(int)arg2;
-(int)polyPolyline:(CGPoint*)polyline :(int*)arg2 :(int)arg3;
-(int)arc:(int)arc :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;
-(int)pie:(int)pie :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;
-(int)angleArc:(int)arc :(int)arg2 :(unsigned long)arg3 :(double)arg4 :(double)arg5;
-(int)arcTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;
-(int)chord:(int)chord :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;
-(int)bezierTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6;
-(int)bezier:(int)bezier :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;
-(int)closeCurrentPath:(bool)path;
-(int)roundRect:(int)rect :(int)arg2 :(int)arg3 :(int)arg4 :(double)arg5 :(double)arg6;
-(int)realizePalette;
-(int)setPolyFillMode:(int)mode;
-(int)selectObject:(int)object;
-(int)getStockObject:(unsigned)object;
-(int)deleteObject:(int)object;
-(int)createRegion:(id)region;
-(int)createBrush:(int)brush :(id)arg2 :(int)arg3 :(unsigned)arg4;
-(int)createFontIndirect:(long)indirect :(long)arg2 :(long)arg3 :(long)arg4 :(long)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15;
-(int)createFontIndirectW:(long)w :(long)arg2 :(long)arg3 :(long)arg4 :(long)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15 :(id)arg16 :(id)arg17 :(unsigned)arg18 :(unsigned)arg19 :(unsigned)arg20 :(unsigned)arg21 :(unsigned)arg22 :(unsigned)arg23;
-(int)createPen:(int)pen :(long)arg2 :(id)arg3 :(double*)arg4 :(unsigned)arg5;
-(id)createColorWithRGBBytes:(unsigned char)rgbbytes :(unsigned char)arg2 :(unsigned char)arg3 :(unsigned char)arg4;
-(int)setPaletteEntries:(unsigned)entries :(id)arg2 :(unsigned)arg3;
-(int)resizePalette:(unsigned)palette :(unsigned)arg2;
-(int)createPalette:(id)palette :(unsigned)arg2;
-(int)createPatternBrush:(id)brush :(unsigned)arg2 usePaletteForBilevel:(BOOL)bilevel;
-(void)createStockObjects;
-(int)setWindowExt:(int)ext :(int)arg2;
-(int)setWindowOrg:(int)org :(int)arg2;
-(int)setViewportExt:(int)ext :(int)arg2;
-(int)offsetWindowOrg:(int)org :(int)arg2;
-(int)offsetViewportOrg:(int)org :(int)arg2;
-(int)setViewportOrg:(int)org :(int)arg2;
-(int)scaleViewportExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;
-(int)scaleWindowExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;
-(int)setWorldTransform:(const CGAffineTransform*)transform;
-(int)modifyWorldTransform:(const CGAffineTransform*)transform :(int)arg2;
-(int)setMapMode:(int)mode;
-(int)setRop2:(int)a2;
-(int)abortPath;
-(int)beginPath;
-(int)widenPath;
-(int)endPath;
-(int)strokeAndFillPath:(bool)path :(bool)arg2;
-(int)selectClipPath:(int)path;
-(int)selectClipRegionWithRects:(id)rects :(int)arg2;
-(int)selectClipRegion:(unsigned)region :(int)arg2;
-(int)excludeClipRect:(CGRect)rect;
-(int)intersectClipRect:(CGRect)rect;
-(int)setMetaRgn;
-(int)paintRgnWithRects:(id)rects;
-(int)paintRgn:(unsigned)rgn;
-(int)invertRgnWithRects:(id)rects;
-(int)invertRgn:(unsigned)rgn;
-(int)fillRgnWithRects:(id)rects :(unsigned)arg2;
-(int)fillRgn:(unsigned)rgn :(unsigned)arg2;
-(int)frameRegionWithRects:(id)rects :(unsigned)arg2 :(int)arg3 :(int)arg4;
-(int)frameRegion:(unsigned)region :(unsigned)arg2 :(int)arg3 :(int)arg4;
-(id)createDIBitmap:(const char*)bitmap :(unsigned)arg2 :(int)arg3;
-(id)createDIBitmap:(const char*)bitmap :(unsigned)arg2 :(const char*)arg3 :(unsigned)arg4 :(int)arg5;
-(id)createBitmap:(unsigned)bitmap :(unsigned)arg2 :(unsigned)arg3 :(unsigned)arg4 :(const char*)arg5 :(unsigned)arg6;
-(int)patBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(unsigned long)arg5;
-(int)bitBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(unsigned long)arg8 :(CGAffineTransform*)arg9 :(unsigned long)arg10;
-(int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned long)arg10 :(CGAffineTransform*)arg11 :(unsigned long)arg12;
-(int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned long)arg10 :(CGAffineTransform*)arg11 :(unsigned long)arg12 usePaletteForBilevel:(BOOL)bilevel;
-(int)maskBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(id)arg8 :(int)arg9 :(int)arg10 :(unsigned long)arg11 :(CGAffineTransform*)arg12 :(unsigned long)arg13;
-(int)plgBlt:(CGPoint*)blt :(id)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(id)arg7 :(int)arg8 :(int)arg9 :(CGAffineTransform*)arg10 :(unsigned long)arg11;
@end

