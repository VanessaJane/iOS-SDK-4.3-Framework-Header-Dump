/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "NSBezierPathStub.h"
#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <XXUnknownSuperclass.h> // Unknown library


__attribute__((visibility("hidden")))
@interface NSBezierPathStub : XXUnknownSuperclass <NSCopying> {
@private
	int _segmentCount;
	int _segmentMax;
	PATHSEGMENT* _head;
	int _lastSubpathIndex;
	int _elementCount;
	float _lineWidth;
	CGRect _controlPointBounds;
	float _miterLimit;
	float _flatness;
	float* _dashedLinePattern;
	unsigned _dashedLineCount;
	float _dashedLinePhase;
	void* _path;
	id _private[4];
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;
}
+(void)initialize;
+(void)setCurrentCGContext:(CGContextRef)context;
+(CGContextRef)currentCGContext;
+(id)bezierPath;
+(id)bezierPathWithRect:(CGRect)rect;
+(id)bezierPathWithOvalInRect:(CGRect)rect;
+(id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;
+(void)fillRect:(CGRect)rect;
+(void)strokeRect:(CGRect)rect;
+(void)clipRect:(CGRect)rect;
+(void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;
+(void)drawPackedGlyphs:(const char*)glyphs atPoint:(CGPoint)point;
+(void)setDefaultMiterLimit:(float)limit;
+(float)defaultMiterLimit;
+(void)setDefaultFlatness:(float)flatness;
+(float)defaultFlatness;
+(void)setDefaultWindingRule:(unsigned)rule;
+(unsigned)defaultWindingRule;
+(void)setDefaultLineCapStyle:(unsigned)style;
+(unsigned)defaultLineCapStyle;
+(void)setDefaultLineJoinStyle:(unsigned)style;
+(unsigned)defaultLineJoinStyle;
+(void)setDefaultLineWidth:(float)width;
+(float)defaultLineWidth;
+(void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;
-(id)init;
-(void)dealloc;
-(void)finalize;
-(id)copyWithZone:(NSZone*)zone;
-(void)moveToPoint:(CGPoint)point;
-(void)lineToPoint:(CGPoint)point;
-(void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;
-(void)closePath;
-(void)removeAllPoints;
-(void)relativeMoveToPoint:(CGPoint)point;
-(void)relativeLineToPoint:(CGPoint)point;
-(void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;
-(float)lineWidth;
-(void)setLineWidth:(float)width;
-(unsigned)lineCapStyle;
-(void)setLineCapStyle:(unsigned)style;
-(unsigned)lineJoinStyle;
-(void)setLineJoinStyle:(unsigned)style;
-(unsigned)windingRule;
-(void)setWindingRule:(unsigned)rule;
-(float)miterLimit;
-(void)setMiterLimit:(float)limit;
-(float)flatness;
-(void)setFlatness:(float)flatness;
-(void)setLineDash:(const float*)dash count:(int)count phase:(float)phase;
-(void)getLineDash:(float*)dash count:(int*)count phase:(float*)phase;
-(void)_doPath;
-(void)stroke;
-(void)fill;
-(void)addClip;
-(void)setClip;
-(void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;
-(void)flattenIntoPath:(id)path;
-(id)bezierPathByFlatteningPath;
-(id)_copyFlattenedPath;
-(id)bezierPathByReversingPath;
-(void)transformUsingAffineTransform:(id)transform;
-(BOOL)isEmpty;
-(CGPoint)currentPoint;
-(CGRect)controlPointBounds;
-(CGRect)bounds;
-(int)elementCount;
-(unsigned)elementAtIndex:(int)index;
-(int)_segmentIndexForElementIndex:(int)elementIndex;
-(unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint*)points;
-(void)setAssociatedPoints:(CGPoint*)points atIndex:(int)index;
-(void)appendBezierPath:(id)path;
-(void)appendBezierPathWithRect:(CGRect)rect;
-(void)appendBezierPathWithPoints:(CGPoint*)points count:(int)count;
-(void)appendBezierPathWithOvalInRect:(CGRect)rect;
-(void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;
-(void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;
-(void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;
-(int)_locationOfPoint:(CGPoint)point;
-(BOOL)containsPoint:(CGPoint)point;
-(BOOL)isHitByPoint:(CGPoint)point;
-(BOOL)isHitByRect:(CGRect)rect;
-(BOOL)isHitByPath:(id)path;
-(BOOL)isStrokeHitByPoint:(CGPoint)point;
-(BOOL)isStrokeHitByRect:(CGRect)rect;
-(BOOL)isStrokeHitByPath:(id)path;
-(BOOL)cachesBezierPath;
-(void)setCachesBezierPath:(BOOL)path;
@end

@interface NSBezierPathStub (NSBezierPathCompatibility)
+(void)setMiterLimit:(float)limit;
+(float)miterLimit;
+(void)setFlatness:(float)flatness;
+(float)flatness;
+(void)setWindingRule:(unsigned)rule;
+(unsigned)windingRule;
+(void)setLineCapStyle:(unsigned)style;
+(unsigned)lineCapStyle;
+(void)setLineJoinStyle:(unsigned)style;
+(unsigned)lineJoinStyle;
+(void)setLineWidth:(float)width;
+(float)lineWidth;
-(id)description;
@end

@interface NSBezierPathStub (NSBezierPathDevicePrimitives)
-(void)_addPathSegment:(int)segment point:(CGPoint)point;
-(void)_deviceMoveToPoint:(CGPoint)point;
-(void)_deviceLineToPoint:(CGPoint)point;
-(void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;
-(void)_deviceClosePath;
-(void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;
@end

@interface NSBezierPathStub (MFBezierPath)
-(void)appendBezierPathWithArcWithRect:(CGPoint)rect rightBottom:(CGPoint)bottom start:(CGPoint)start end:(CGPoint)end clockwise:(BOOL)clockwise;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)center radiusSize:(CGSize)size startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;
-(id)getGlyphs:(id)glyphs :(id)arg2 :(unsigned*)arg3;
-(void)appendBezierPathWithString:(id)string attributes:(id)attributes;
-(void)appendBezierPathWithString:(id)string attributes:(id)attributes spacing:(int*)spacing spacingCount:(int)count;
-(BOOL)equalToCurrentPoint:(CGPoint)currentPoint;
-(void)attachBezierPath:(id)path;
@end

