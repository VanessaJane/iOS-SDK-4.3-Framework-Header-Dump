/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "CMShapeBuilder.h"


__attribute__((visibility("hidden")))
@interface CMCanonicalShapeBuilder : CMShapeBuilder {
}
-(CGAffineTransform)affineTransform;
-(CGPathRef)createShapeWithTransform:(CGAffineTransform)transform;
-(CGPathRef)_rectangleWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_parallelogramWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_trapezoidWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_ellipseWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_roundedRectWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_diamondWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_triangleWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_rightTriangleWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_plusWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_pentagonWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_hexagonWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_octagonWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_canWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_cubeWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_wedgeRectWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_straightConnector1tWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_lineWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_rightArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_leftArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_upArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_downArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_leftRightArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_upDownArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_quadArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_leftRightUpArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_starWithTransform:(CGAffineTransform)transform aspectRatio:(float)ratio andBranchNumber:(int)number;
-(CGPathRef)_homePlateWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_chevronWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_pieWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_circularArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_rightDiagramArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_upDiagramArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_pyramidLayerWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
-(CGPathRef)_diagramCircularArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;
@end

