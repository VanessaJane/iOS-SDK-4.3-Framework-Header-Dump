/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "OfficeImport-Structs.h"
#import "SFUNumberFormatter.h"

@class NSMutableDictionary, NSString;

__attribute__((visibility("hidden")))
@interface SFUNumberFormatter : XXUnknownSuperclass {
@private
	CFLocaleRef mLocale;
	CFArrayRef mDecimalFormatters;
	CFArrayRef mCurrencyFormatters;
	CFArrayRef mPercentageFormatters;
	CFArrayRef mScientificFormatters;
	CFNumberFormatterRef mFractionFormatter;
	NSMutableDictionary* mCurrencyCodeToSymbolMap;
	NSString* mCurrencyString;
	NSString* mPercentageString;
	NSString* mScientificString;
	NSString* mDecimalString;
	NSString* mPercentSymbol;
}
+(int)positionOfSymbol:(id)symbol inNumberFormatSubpattern:(id)numberFormatSubpattern;
+(int)positionOfCurrencySymbolInNumberFormatSubpattern:(id)numberFormatSubpattern;
+(int)positionOfMinusSignInNumberFormatSubpattern:(id)numberFormatSubpattern;
+(id)formatString:(id)string transformedForNegativeStyle:(int)negativeStyle;
+(void)formatString:(id)string replaceOccurencesOfUnescapedString:(id)unescapedString withString:(id)string3;
+(id)availableCurrencyCodes;
+(id)displayNameForCurrencyCode:(id)currencyCode;
+(id)currencySymbolForCurrencyCode:(id)currencyCode;
+(id)currentLocaleCurrencyCode;
+(id)numberFormatStringSpecialSymbols;
+(id)defaultFormatStringForValueType:(int)valueType;
+(id)localizedPercentSymbol;
@end

@interface SFUNumberFormatter (Private)
+(id)formatterForLocale:(CFLocaleRef)locale;
-(id)initWithLocale:(CFLocaleRef)locale;
-(void)dealloc;
-(void)numberPreferencesChanged:(id)changed;
-(BOOL)decimalFromString:(CFStringRef)string value:(double*)value formatString:(const CFStringRef*)string3;
-(BOOL)currencyFromString:(CFStringRef)string value:(double*)value formatString:(const CFStringRef*)string3 currencyCode:(const CFStringRef*)code;
-(BOOL)percentageFromString:(CFStringRef)string value:(double*)value formatString:(const CFStringRef*)string3;
-(BOOL)scientificFromString:(CFStringRef)string value:(double*)value formatString:(const CFStringRef*)string3;
-(BOOL)fractionFromString:(CFStringRef)string value:(double*)value;
-(BOOL)valueFromString:(CFStringRef)string formatters:(CFArrayRef)formatters value:(double*)value formatString:(const CFStringRef*)string4 currencyCode:(const CFStringRef*)code;
-(BOOL)findCurrencySymbolInString:(CFStringRef)string;
-(id)displayNameForCurrencyCode:(id)currencyCode;
-(id)currencySymbolForCurrencyCode:(id)currencyCode;
-(id)currentLocaleCurrencyCode;
-(id)defaultFormatStringForValueType:(int)valueType;
-(id)localizedPercentSymbol;
@end

