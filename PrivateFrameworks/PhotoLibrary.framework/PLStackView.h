/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import "PhotoLibrary-Structs.h"
#import "UIGestureRecognizerDelegate.h"
#import "PLExpandableView.h"
#import "UITableViewDelegate.h"
#import "UITableViewDataSource.h"

@class UIGestureRecognizer, NSMutableIndexSet, CAReplicatorLayer, UIImage, NSArray, NSIndexSet, PLStackItemView, NSMutableArray, PLTableView, NSMutableDictionary, CADynamicsBehavior;
@protocol PLStackViewDataSource;

@interface PLStackView : PLExpandableView <UITableViewDelegate, UITableViewDataSource, UIGestureRecognizerDelegate> {
	PLTableView* _tableView;
	CADynamicsBehavior* _behavior;
	NSMutableArray* _springs;
	NSMutableArray* _bakedAngles;
	UIGestureRecognizer* _pressRecognizer;
	PLExpandableView* _forwardingView;
	unsigned _itemCount;
	id<PLStackViewDataSource> _dataSource;
	NSArray* _stackedViews;
	NSMutableIndexSet* _stackedItemIndexes;
	NSMutableIndexSet* _selectedIndexes;
	NSMutableIndexSet* _badgedIndexes;
	UIImage* _badgeImage;
	NSMutableDictionary* _customBadgeImages;
	UIImage* _placeholder;
	UIImage* _stackedImage;
	CAReplicatorLayer* _stackedImageLayer;
	PLStackItemView* _contextStackItemView;
	CGRect _expandedLayoutFrame;
	float _horizontalMargin;
	float _verticalMargin;
	unsigned _numColumns;
	unsigned _layoutCols;
	unsigned _layoutRows;
	CGSize _collapsedImageSize;
	CGSize _expandedImageSize;
	CGSize _preferredStackedImageSize;
	CFDictionaryRef _viewsByIndex;
	NSRange _displayedImageIndexes;
	NSMutableIndexSet* _collapsedStackIndexes;
	float _previousExpansionFraction;
	float _currentExpansionFraction;
	double _centerXVelocity;
	double _centerYVelocity;
	CGPoint _anchorPoint;
	CGRect _currentLayoutBounds;
	float _currentLayoutWidthSpace;
	float _currentLayoutHeightSpace;
	CGPoint _currentLayoutOrigin;
	CGSize _currentImageSize;
	CGPoint _tableViewContentOffset;
	UIEdgeInsets _tableViewContentInset;
	UIEdgeInsets _layoutMargins;
	CGColorSpaceRef _deviceRGB;
	struct {
		unsigned allowsPinchToCollapse : 1;
		unsigned allowsSelection : 1;
		unsigned allowsSelectionGestures : 1;
		unsigned canCreateStackedImage : 1;
		unsigned showsTextBadges : 1;
		unsigned showLoadingIndicator : 1;
		unsigned expandingItemImagesLoadSynchronously : 1;
		unsigned didStartExpand : 1;
		unsigned dontChangeTransforms : 1;
		unsigned firstPass : 1;
		unsigned isHandlingPinch : 1;
		unsigned didBeginPinching : 1;
		unsigned dataSourceImplementsDataForImage : 1;
		unsigned dataSourceImplementsTextBadgeStringForImage : 1;
		unsigned dataSourceImplementsWillRemoveItemViewAtIndex : 1;
		unsigned dataSourceImplementsPreheatImagesInRange : 1;
		unsigned replaceBitmapWithStackItemViews : 1;
		unsigned dragSelectionState : 2;
		unsigned expansionFractionIsDirty : 1;
		unsigned imageSizeIsDirty : 1;
		unsigned isDisplayingContextMenu : 1;
		unsigned useExpandedBoundsForPointInside : 1;
		unsigned preventReload : 1;
		unsigned needsReload : 1;
		unsigned refreshStackedImage : 1;
		unsigned debugDelegateSupportsSingleTaps : 1;
		unsigned scrollingDownward : 1;
	} _stackFlags;
	NSMutableArray* _inProgressAnimationContexts;
	NSMutableIndexSet* _unloadedIndexes;
}
@property(assign, nonatomic) UIEdgeInsets layoutMargins;
@property(retain, nonatomic) UIImage* placeholder;
@property(retain, nonatomic) PLExpandableView* forwardingView;
@property(assign, nonatomic) PLStackItemView* contextStackItemView;
@property(retain, nonatomic) NSIndexSet* selectedIndexes;
@property(assign, nonatomic) BOOL allowsSelectionGestures;
@property(assign, nonatomic) BOOL allowsSelection;
@property(retain, nonatomic) NSIndexSet* badgedIndexes;
@property(retain, nonatomic) UIImage* badgeImage;
@property(assign, nonatomic) BOOL expandingItemImagesLoadSynchronously;
@property(assign, nonatomic) BOOL showTextBadges;
@property(assign, nonatomic) BOOL allowsPinchToCollapse;
@property(assign, nonatomic) BOOL canCreateStackedImage;
@property(assign, nonatomic) CGSize expandedImageSize;
@property(assign, nonatomic) CGSize collapsedImageSize;
@property(assign, nonatomic) id<PLStackViewDataSource> dataSource;
+(void)initialize;
+(float)maxStackedAngle;
+(id)selectionBadgeImage;
-(id)initWithFrame:(CGRect)frame;
-(void)dealloc;
-(BOOL)canBecomeFirstResponder;
-(void)expandWithAnimation:(BOOL)animation;
-(void)setFrame:(CGRect)frame;
-(void)_calculateLayout;
-(void)reconfigureViewWithFrame:(CGRect)frame withSuperview:(id)superview;
-(void)reconfigureViewWithFrame:(CGRect)frame;
-(void)didMoveToSuperview;
-(void)parentTableViewCellWillChange:(id)parentTableViewCell;
-(int)orientation;
-(BOOL)_isAnimating;
-(BOOL)_canReload;
-(void)_reloadDataIfNeeded;
-(void)_reloadVisibleRows;
-(void)reloadData;
-(void)reloadItemAtIndex:(int)index synchronously:(BOOL)synchronously;
-(void)reloadItemAtIndex:(int)index;
-(void)unloadItemAtIndex:(int)index;
-(void)reloadImagesForItemAtIndex:(int)index;
-(void)insertItemsAtIndexes:(id)indexes;
-(void)removeItemsAtIndexes:(id)indexes;
-(void)_updateItemCount;
-(unsigned)itemCount;
-(unsigned)_numberOfRowsForNItems:(unsigned)nitems;
-(id)visibleStackItemViewAtIndex:(int)index;
-(void)scrollToItemAtIndex:(unsigned)index animated:(BOOL)animated;
-(id)visibleItemViews;
-(id)visibleItemIndexes;
-(void)_addAnimationDidStop:(id)_addAnimation finished:(id)finished context:(id)context;
-(void)_removeAnimationDidStop:(id)_removeAnimation finished:(id)finished context:(id)context;
-(void)layoutSubviews;
-(void)_layoutStacked;
-(void)_tileStackItemsWithDuration:(double)duration;
-(void)updateItemViewPositionForContractedState;
-(void)_setLayoutBounds:(CGRect)bounds forState:(int)state withDuration:(double)duration;
-(id)itemViewAtIndex:(unsigned)index loadSynchronously:(BOOL)synchronously;
-(void)refreshStackedImage;
-(void)_invalidateStackedImage;
-(void)_updateStackedImageView;
-(id)replicatorLayer;
-(BOOL)_stackedImageShouldBeSquare;
-(id)_createStackedImageWithViews:(id)views;
-(id)_stackedImage;
-(id)_stackedViews;
-(id)collapsedStackIndexes;
-(CGSize)preferredStackedImageSize;
-(void)imageDidChangeForItemIndex:(unsigned)image;
-(void)_imageDidChangeForItemsAtIndexes:(id)_image;
-(void)_updateDisplayedImageIndexes;
-(void)_beginExpansion;
-(CGRect)_contractedLayoutBounds;
-(float)currentExpansionFraction;
-(CGSize)_currentImageSize;
-(CGRect)expandedContentFrame;
-(CGPoint)positionOfImageAtIndex:(int)index inView:(id)view;
-(CGRect)frameOfImageAtIndex:(int)index inView:(id)view;
-(void)_moveItemsToTableView;
-(void)_moveItemsFromTableView;
-(BOOL)pointInside:(CGPoint)inside withEvent:(id)event;
-(void)_validateTableViewLayerAsAHackForRadar8952327;
-(id)_visibleImageViewAtPoint:(CGPoint)point;
-(id)visibleStackItemViewAtPoint:(CGPoint)point;
-(void)tap:(id)tap;
-(void)pinch:(id)pinch;
-(void)longPress:(id)press;
-(void)_pinchWasCanceled:(id)canceled;
-(void)beginTrackingPinch:(id)pinch;
-(float)continueTrackingPinch:(id)pinch;
-(float)completeTrackingPinch:(id)pinch toState:(int)state duration:(double)duration;
-(void)stateDidChangeFrom:(int)state;
-(void)finishStateTransition;
-(int)snapState:(BOOL)state;
-(void)_addBehaviorToLayer:(id)layer withSprings:(id)springs;
-(void)_removeBehavior;
-(void)_behaviorEnded:(BOOL)ended;
-(void)_nudgeAnimationDidStop:(id)_nudgeAnimation finished:(id)finished;
-(void)_cancelBehavior;
-(void)behaviorDidStop:(id)behavior;
-(BOOL)_shouldAnimatePropertyWithKey:(id)key;
-(void)_badgeChangeAnimationDidStop:(id)_badgeChangeAnimation finished:(id)finished context:(void*)context;
-(void)_updateBadgesForOldIndexes:(id)oldIndexes newIndexes:(id)indexes animated:(BOOL)animated;
-(void)_updateBadgesForItemAtIndex:(unsigned)index animated:(BOOL)animated;
-(void)_shiftCustomBadgeImagesStartingAtIndex:(unsigned)index by:(int)by;
-(id)customBadgeForItemAtIndex:(unsigned)index;
-(void)setCustomBadgeImage:(id)image forItemAtIndex:(unsigned)index;
-(void)setAllowsSelection:(BOOL)selection animated:(BOOL)animated;
-(void)showLoadingIndicatorWithAnimation:(int)animation;
-(void)hideLoadingIndicatorWithAnimation:(int)animation;
-(void)_dragSelect:(id)select;
-(void)_setSelectedIndexes:(id)indexes animated:(BOOL)animated;
-(void)deselectAll:(BOOL)all;
-(void)_setSelectionState:(int)state forStackItemView:(id)stackItemView;
-(void)_deselectAnimationDidStop:(id)_deselectAnimation finished:(id)finished context:(void*)context;
-(void)_displayContextMenu:(id)menu;
-(void)_autohideMenu;
-(void)_hideMenu;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)scrollViewShouldScrollToTop:(id)scrollView;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)scrollViewDidScrollToTop:(id)scrollView;
-(void)scrollViewDidEndScrollingAnimation:(id)scrollView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(void)setExpandedFrame:(CGRect)frame;
-(void)_setTableView:(id)view;
-(id)tableView;
-(void)scrollToItemAtIndex:(unsigned)index atScrollPosition:(int)scrollPosition animated:(BOOL)animated;
-(void)scrollWithMotionBlurToItemAtIndex:(unsigned)index atScrollPosition:(int)scrollPosition;
-(void)_layoutItemViewsFromIndex:(unsigned)index toIndex:(unsigned)index2 inTableCell:(id)tableCell atRow:(unsigned)row;
-(void)_preheatImageDataForDownwardScroll:(BOOL)downwardScroll;
@end

