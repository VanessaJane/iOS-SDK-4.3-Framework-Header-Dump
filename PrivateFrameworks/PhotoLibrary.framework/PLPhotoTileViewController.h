/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "PLImageRotationAnimationProtocol.h"
#import "PLPhotoTileViewController.h"
#import "PhotoLibrary-Structs.h"
#import "UIScrollViewDelegate.h"

@class UIGestureRecognizer, UIImage, PLExpandableImageView, PLRotationView, UIImageView, PLImageScrollView, MLPhoto, PLVideoView;
@protocol PLPhotoTileViewControllerDelegate;

@interface PLPhotoTileViewController : XXUnknownSuperclass <UIScrollViewDelegate, PLImageRotationAnimationProtocol> {
	UIImage* _image;
	UIImage* _pendingImage;
	UIImage* _unscaledImage;
	MLPhoto* _modelPhoto;
	PLRotationView* _rotationView;
	PLImageScrollView* _scrollView;
	PLExpandableImageView* _imageView;
	PLVideoView* _videoView;
	UIImageView* _gradientView;
	UIImageView* _hdrBadgeImageView;
	UIGestureRecognizer* _singleTapGestureRecognizer;
	UIGestureRecognizer* _doubleTapGestureRecognizer;
	id<PLPhotoTileViewControllerDelegate> _tileDelegate;
	int _imageOrientation;
	CGSize _imageSize;
	int _imageIndex;
	CGRect _tileFrame;
	BOOL _zoomToFillInsteadOfToFit;
	BOOL _useLessThanMinZoomForZoomedOutTest;
	BOOL _allowZoomToFill;
	id _orientationDelegate;
	float _cropRectZoomScale;
	CGRect _cropOverlayRect;
	CGRect _cropRect;
	float _maxZoomScale;
	float _minZoomScale;
	float _zoomToFillScale;
	int _imageRotationDegrees;
	int _currentRotationDegrees;
	int _mode;
	int _lastDisplayedOrientation;
	BOOL _clientIsTemporarilyWallpaper;
	BOOL _userDidAdjustWallpaper;
	float _wallpaperPortraitZoomScale;
	float _wallpaperLandscapeZoomScale;
	float _zoomScaleBeforeZooming;
	CGRect _cropRectBeforeDragging;
	BOOL _force1XCroppedImage;
	BOOL _forceNativeScreenScale;
	BOOL _isBeingDeleted;
	BOOL _centerContentVertically;
	unsigned _imageIsThumbnail : 1;
	unsigned _isTVOut : 1;
	unsigned _zooming : 1;
	unsigned _autoZooming : 1;
	unsigned _zoomGesturesEnabled : 1;
	unsigned _userDidZoom : 1;
	unsigned _ignoreZoomChange : 1;
	unsigned _tileParentIsPageController : 1;
	unsigned _lockedUnderCropOverlay : 1;
	unsigned _viewDidAppear : 1;
	unsigned _viewWillAppear : 1;
	unsigned _didRequestFullSizeImage : 1;
	unsigned _useZoomScaleForCropRect : 1;
	unsigned _photoShouldBeHDRBadged : 1;
	unsigned _hdrBadgeShouldBeVisible : 1;
	unsigned _didSetHDRForModelPhoto : 1;
	unsigned _isRotating : 1;
}
@property(assign, nonatomic) BOOL isBeingDeleted;
@property(assign, nonatomic) BOOL centerContentVertically;
@property(retain, nonatomic) UIImage* unscaledImage;
@property(assign, nonatomic) BOOL forceNativeScreenScale;
@property(assign, nonatomic) BOOL force1XCroppedImage;
@property(readonly, assign, nonatomic) int rotationDegrees;
@property(assign, nonatomic) CGRect tileFrame;
@property(retain, nonatomic) UIImage* thumbnailImage;
@property(assign, nonatomic) unsigned imageIndex;
@property(retain, nonatomic) MLPhoto* photo;
+(CGSize)tileSize;
+(CGSize)tvOutTileSize;
+(id)newPhotoTileViewControllerWithFrame:(CGRect)frame imageRef:(CGImageRef)ref imageOrientation:(int)orientation allowZoomToFill:(BOOL)fill mode:(int)mode;
+(id)newPhotoTileViewControllerWithFrame:(CGRect)frame image:(id)image allowZoomToFill:(BOOL)fill mode:(int)mode;
+(id)newPhotoTileViewControllerWithFrame:(CGRect)frame modelPhoto:(id)photo mode:(int)mode;
-(id)init;
-(id)initWithPhoto:(id)photo image:(id)image frame:(CGRect)frame isThumbnail:(BOOL)thumbnail imageOrientation:(int)orientation allowZoomToFill:(BOOL)fill mode:(int)mode;
-(id)initForPageController;
-(id)initWithPhoto:(id)photo thumbnailImage:(id)image size:(CGSize)size;
-(void)dealloc;
-(BOOL)tileIsOnScreen;
-(void)prepareForReuse;
-(id)description;
-(id)layoutHistory;
-(void)setZoomScale:(float)scale;
-(void)setCropOverlayRect:(CGRect)rect forCropRect:(CGRect)cropRect;
-(void)setZoomingGesturesEnabled:(BOOL)enabled;
-(void)forceZoomingGesturesEnabled;
-(id)expandableImageView;
-(id)imageView;
-(id)image;
-(id)newCGImageBackedUIImage;
-(id)scrollView;
-(id)videoView;
-(void)setVideoView:(id)view;
-(id)tileDelegate;
-(void)setTileDelegate:(id)delegate;
-(BOOL)isTVOut;
-(void)setTVOut:(BOOL)anOut;
-(BOOL)userDidAdjustWallpaper;
-(BOOL)_clientIsWallpaper;
-(void)setClientIsWallpaper:(BOOL)wallpaper;
-(BOOL)allowsEditing;
-(BOOL)gesturesEnabled;
-(void)setGesturesEnabled:(BOOL)enabled;
-(void)_addRotationView;
-(void)_repositionHDRBadge;
-(BOOL)photoShouldHaveHDRBadge;
-(void)_setupHDRBadge;
-(void)setHDRBadgeVisible:(BOOL)visible;
-(void)_configureViews;
-(void)_centerImageInScrollView;
-(void)_adjustScrollViewContentInsetWithContentSize:(CGSize)contentSize;
-(void)_adjustScrollViewVerticalContentOffset;
-(void)_updateGradientImageForOrientation:(int)orientation;
-(void)_updateModelPhotoWithImage:(id)image;
-(void)_setImage:(id)image isThumbnail:(BOOL)thumbnail;
-(void)refreshTileWithFullScreenImage:(id)fullScreenImage;
-(void)setFullSizeImage:(id)image;
-(BOOL)hasFullSizeImage;
-(BOOL)didRequestFullSizeImage;
-(void)loadView;
-(void)viewDidLoad;
-(void)viewDidDisappear:(BOOL)view;
-(CGSize)scrollView:(id)view contentSizeForZoomScale:(float)zoomScale withProposedSize:(CGSize)proposedSize;
-(void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;
-(void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;
-(void)scrollViewDidZoom:(id)scrollView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(id)viewForZoomingInScrollView:(id)scrollView;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(void)contentViewFrameChanged;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)ensureFullSizeImageLoaded;
-(void)_handleSingleTap:(id)tap;
-(void)_requestFullSizeImage;
-(void)_handleDoubleTap:(id)tap;
-(id)newImageWithCropRect:(CGRect)cropRect croppedImageData:(id*)data fullScreenImageData:(id*)data3 fullScreenImage:(CGImageRef*)image imageCropRect:(CGRect*)rect intersectCropWithFullRect:(BOOL)fullRect;
-(id)dictionaryWithCroppedImageForRect:(CGRect)rect withOptions:(int)options;
-(float)minRotatedScale;
-(float)_calculateZoomScale:(BOOL)scale inView:(id)view;
-(float)_minZoomScaleInView:(id)view;
-(float)minZoomScale;
-(float)maxZoomScale;
-(float)_zoomToFillScaleInView:(id)view;
-(float)zoomToFillScale;
-(float)defaultZoomScale;
-(float)currentToDefaultZoomRatio;
-(BOOL)isZoomedOut;
-(CGRect)frameForImageAtDefaultScale;
-(void)setOrientationDelegate:(id)delegate;
-(void)_setDefaultZoomScale;
-(void)_updateZoomScalesForView:(id)view;
-(void)updateZoomScales;
-(void)setAllowsZoomToFill:(BOOL)fill;
-(int)imageOrientation;
-(void)updateAfterCollapse;
-(void)_resetRotationState;
-(BOOL)_imageRotationAngleAffectsBounds;
-(void)_setRotationDegrees:(int)degrees;
-(void)willStartRotatingByDegrees:(int)degrees;
-(void)didFinishRotation;
-(void)didCancelRotation;
-(void)_adjustZoomForEnteringMode:(BOOL)enteringMode;
-(void)setLockedUnderCropOverlay:(BOOL)overlay;
-(BOOL)isRotating;
@end

@interface PLPhotoTileViewController (PLImagePickerUtils)
-(id)_newOriginalImageForPickerFromCachedData;
-(int)_imageOrientation;
@end

