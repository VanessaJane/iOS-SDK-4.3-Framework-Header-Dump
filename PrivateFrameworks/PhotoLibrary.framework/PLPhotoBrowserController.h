/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import "PhotoLibrary-Structs.h"
#import "AirPlayRemoteSlideshowDelegate.h"
#import "PLAirTunesServicePickerViewControllerDelegate.h"
#import "PLPhotoPrinterDelegate.h"
#import "PLSlideshowPluginDelegate.h"
#import "PLSlideshowSettingsViewControllerDelegate.h"
#import "PLUIEditImageViewControllerDelegate.h"
#import "PLCropPhotoControllerDelegate.h"
#import "PhotoScrubberDataSource.h"
#import "PLPhotoTileViewControllerDelegate.h"
#import "PLImageLoadingQueueDelegate.h"
#import "PLVideoViewDelegate.h"
#import "UIToolbarDelegate.h"
#import "UIPageControllerDelegate.h"
#import "UIScrollViewDelegate.h"
#import "UIPopoverControllerDelegate.h"
#import "UINavigationControllerDelegate.h"
#import "UIAlertViewDelegate.h"
#import "UIActionSheetDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class PLPhotoPrinter, PLPhotoScrubber, PLAirTunesServiceBrowser, PLAirTunesService, PLCropOverlay, PLAirPlayBackgroundView, PLEmptyAlbumView, PLAirTunesButton, PLVideoView, PLPictureFramePlugin, UITransitionView, MLAlbum, NSMutableArray, PLImageCache, PLImageLoadingQueue, UIPageController, UIScrollView, PLImageSource, UIView, MLPhoto, NSNumberFormatter, UIToolbar, UIActionSheet, UIAlertView, UIProgressHUD, UIPopoverController, NSTimer, UIWindow, NSData, NSString, UIViewController, UINavigationController, UILongPressGestureRecognizer, UIImage, UIBarButtonItem, PLPublishingAgent, UINavigationButton, NSArray, PLProgressView, PLVideoRemaker, UIImageView, PLExpandableImageView, PLPhotoTileViewController;
@protocol PLPhotoBrowserControllerDelegate;

@interface PLPhotoBrowserController : XXUnknownSuperclass <UIPageControllerDelegate, PLPhotoTileViewControllerDelegate, PLVideoViewDelegate, UIScrollViewDelegate, UIToolbarDelegate, UINavigationControllerDelegate, UIAlertViewDelegate, UIActionSheetDelegate, PLImageLoadingQueueDelegate, PhotoScrubberDataSource, UIPopoverControllerDelegate, PLUIEditImageViewControllerDelegate, PLCropPhotoControllerDelegate, PLPhotoPrinterDelegate, PLSlideshowSettingsViewControllerDelegate, PLSlideshowPluginDelegate, PLAirTunesServicePickerViewControllerDelegate, AirPlayRemoteSlideshowDelegate> {
	id<PLPhotoBrowserControllerDelegate> _delegate;
	MLAlbum* _album;
	int _albumFilter;
	NSMutableArray* _filteredAlbumImages;
	CFDictionaryRef _tileCache;
	UIPageController* _pageController;
	UIScrollView* _scroller;
	PLEmptyAlbumView* _emptyCameraView;
	UIView* _fadeToBlackView;
	UITransitionView* _slideshowTransitionView;
	UITransitionView* _cameraTransitionView;
	unsigned _currentIndex;
	unsigned _deletedIndex;
	unsigned _previousIndex;
	MLPhoto* _itemToBeDeleted;
	NSNumberFormatter* _scrubOverlayTitleFormatter;
	int _slideshowStatus;
	BOOL _showingNextImage;
	BOOL _tvOutOn;
	BOOL _playingVideo;
	BOOL _beingRotated;
	BOOL _animating;
	int _directionToMoveAfterSmoothScrollCompletes;
	CGSize _contentStartSize;
	float _startScale;
	float _endScale;
	UIToolbar* _buttonBar;
	UIView* _remakerContainerView;
	CFDictionaryRef _buttonGroups;
	int _currentButtonGroup;
	UIActionSheet* _actionView;
	UIAlertView* _alertView;
	UIProgressHUD* _savingPhotoHud;
	UIPopoverController* _peoplePickerContainer;
	BOOL _canPlaySlideshow;
	double _slideshowDelay;
	BOOL _slideshowTimerIsRunning;
	unsigned _previousSimpleRemotePriority;
	NSTimer* _toolbarTimer;
	NSTimer* _scrubTimer;
	BOOL _scrubbingTopSpeed;
	BOOL _scrubbingStarted;
	PLCropOverlay* _cropOverlay;
	SEL _photoAction;
	MLPhoto* _pendingPhoto;
	void* _person;
	UIView* _fromView;
	UIView* _toView;
	UIWindow* _tvOutWindow;
	UIView* _tvOutContentView;
	UIPageController* _tvOutPageController;
	UIScrollView* _tvOutScroller;
	CFDictionaryRef _tvOutTileCache;
	UITransitionView* _tvOutTransitionView;
	UIView* _tvOutFromView;
	UIView* _tvOutToView;
	CGRect _animationFrame;
	UIView* _animationView;
	NSData* _emailData;
	NSString* _emailDataMimeType;
	NSString* _emailImageExtension;
	UIViewController* _composeSheetViewController;
	unsigned _didDisplayComposeSheet : 1;
	unsigned _didSlideImageDown : 1;
	unsigned _isAnimatingSendToEmail : 1;
	id _attachmentIdentifier;
	id _previousLeftBarButtonItem;
	id _previousRightBarButtonItem;
	NSTimer* _progressUpdateTimer;
	PLProgressView* _progressView;
	PLPublishingAgent* _currentPublishingAgent;
	PLPublishingAgent* _publishingAgentToPresent;
	int _remakerMode;
	PLVideoRemaker* _remaker;
	MLPhoto* _currentVideo;
	UINavigationController* _mmsController;
	double _maximumTrimLength;
	UILongPressGestureRecognizer* _recognizer;
	int _statusBarMode;
	SEL _actionAfterForcedRotation;
	BOOL _isCameraApp;
	int _autohideControlCount;
	unsigned _overlayIsHidden : 1;
	unsigned _statusBarIsLocked;
	unsigned _rotationDisabled;
	unsigned _videoEditingMode : 1;
	unsigned _remaking : 1;
	unsigned _remakeAfterPublish : 1;
	unsigned _isCroppingPhoto : 1;
	unsigned _clearingFullScreenView : 1;
	unsigned _scrolling : 1;
	unsigned _canShowCopyCallout : 1;
	unsigned _viewIsDisappearing : 1;
	unsigned _didRotate : 1;
	unsigned _navigationBarDisabled;
	unsigned _bottomBarDisabled;
	unsigned _appInteractionDisabled;
	unsigned _didFinishSuckingToTrash : 1;
	unsigned _didStartMusicPlayback : 1;
	unsigned _rotationDisabledUnderCropOverlay : 1;
	unsigned _isSettingWallpaper : 1;
	unsigned _didSetSimpleRemotePriority : 1;
	unsigned _paging : 1;
	unsigned _collapsing : 1;
	unsigned _rotating : 1;
	unsigned _reloadPhotoScrubber : 1;
	unsigned _videoViewWillBeginEditing : 1;
	unsigned _playVideoOnActivation : 1;
	unsigned _remakingWasCancelled : 1;
	unsigned _canUploadHDVideoOver3G : 1;
	unsigned _didSetHDVideoUploadCapability : 1;
	unsigned _didShowHDRPrompt : 1;
	unsigned _imagesAreShuffled : 1;
	unsigned _scrubbedImageIndex;
	PLImageCache* _imageCache;
	PLImageSource* _fullSizeSource;
	PLImageSource* _fullScreenSource;
	PLImageSource* _fullScreenLowResSource;
	PLImageSource* _scrubberLoupeSource;
	PLImageSource* _scrubberSource;
	PLImageLoadingQueue* _loadQueue;
	CFDictionaryRef _imageRequests;
	NSMutableArray* _reusableTiles;
	UIImage* _loadedImage;
	PLPhotoScrubber* _photoScrubber;
	UIBarButtonItem* _actionItem;
	UIBarButtonItem* _rotateItem;
	UIBarButtonItem* _playSlideshowItem;
	UINavigationButton* _trashItem;
	UINavigationButton* _playPauseButton;
	UIImageView* _viewForTrashCanAnimation;
	PLAirTunesButton* _airTunesButton;
	PLPhotoTileViewController* _deletedTile;
	NSArray* _wallpaperItems;
	int _wallpaperMode;
	int _previousToolbarMode;
	int _currentAirTunesMode;
	unsigned _didAddScrubberOnNavBar : 1;
	unsigned _didVideoViewStateChange : 1;
	int _personCount;
	unsigned _slideshowEndIndex;
	BOOL _fadingToBlack;
	BOOL _slideshowIsOrigami;
	BOOL _slideshowStartedInFullScreen;
	BOOL _slideshowIsLoading;
	BOOL _slideshowIsEnding;
	PLPictureFramePlugin* _slideshowPlugin;
	UIView* _slideshowView;
	UIPopoverController* _slideshowSettingsPopover;
	UIViewController* _slideshowSettingsViewController;
	PLPhotoPrinter* _photoPrinter;
	int _lastStreamedPhotoIndex;
	unsigned _lastDisplayedRemoteSlideshowPhotoIndex;
	NSString* _currentAirTunesTransition;
	NSArray* _availableAirTunesServices;
	UIPopoverController* _airTunesServicePickerPopover;
	PLAirTunesServiceBrowser* _airTunesBrowser;
	PLAirTunesService* _selectedAirTunesService;
	unsigned _showAirTunesOption : 1;
	unsigned _slideShowIsStreamed : 1;
	unsigned _airTunesSlideShowIsEnding : 1;
	PLAirPlayBackgroundView* _airTunesBackgroundView;
}
@property(assign, nonatomic) BOOL canPlaySlideshow;
@property(assign, nonatomic) id<PLPhotoBrowserControllerDelegate> delegate;
@property(assign, nonatomic) BOOL isCameraApp;
@property(retain, nonatomic) UIScrollView* pageControllerScrollView;
@property(readonly, assign, nonatomic) BOOL canEditVideo;
@property(assign, nonatomic) BOOL canShowCopyCallout;
@property(readonly, assign, nonatomic) UIView* pageControllerView;
@property(readonly, assign, nonatomic) UIPageController* pageController;
@property(readonly, assign, nonatomic) NSArray* currentToolbarItems;
@property(retain, nonatomic) PLPhotoScrubber* photoScrubber;
@property(readonly, assign, nonatomic) UIScrollView* albumScroller;
@property(readonly, assign, nonatomic) UIView* remakerContainerView;
@property(retain, nonatomic) UIToolbar* buttonBar;
@property(readonly, assign, nonatomic) MLPhoto* nextImage;
@property(readonly, assign, nonatomic) PLPhotoTileViewController* currentTile;
@property(readonly, assign, nonatomic) PLVideoView* currentVideoView;
@property(readonly, assign, nonatomic) PLExpandableImageView* currentImageView;
@property(readonly, assign, nonatomic) UIImage* currentUIImage;
@property(assign, nonatomic) MLPhoto* currentImage;
@property(assign, nonatomic) unsigned currentTileIndex;
@property(retain, nonatomic) MLAlbum* album;
-(void)_updateFilteredImagesAndShuffle:(BOOL)shuffle;
-(void)_clearFullScreenView;
-(BOOL)_albumScrollerIsVisible;
-(id)_lowResolutionPreviewImageForPhoto:(id)photo;
-(id)_fullScreenPreviewImageForPhoto:(id)photo;
-(void)_preloadTileAtIndex:(unsigned)index;
-(id)_tileForTileIndex:(unsigned)tileIndex shouldCreate:(BOOL)create tileCache:(CFDictionaryRef)cache;
-(id)_newTileAtIndex:(unsigned)index withPhoto:(id)photo size:(CGSize)size isTileTVOut:(BOOL)anOut;
-(void)_configureVideoViewInTile:(id)tile;
-(id)_currentTVOutTile;
-(int)_currentIndexFromScrollPosition;
-(void)_disableIdleTimer;
-(void)_startSlideshowTimer;
-(void)_stopSlideshowTimer;
-(void)_clearTileCache;
-(id)_modelImageForTileIndex:(unsigned)tileIndex;
-(unsigned)tileIndexOfImage:(id)image;
-(void)albumsChanged:(id)changed;
-(BOOL)_canEmailPhoto;
-(BOOL)_canUploadHDVideo;
-(void)_capabilitiesChanged;
-(BOOL)_currentItemIsVideo;
-(BOOL)_canRotateCurrentItem;
-(BOOL)_currentItemIsPlaying;
-(BOOL)_isScrolling;
-(BOOL)_shouldShowAssignToContactOption;
-(BOOL)_didSetDataForCurrentItem;
-(void)_forceRemoveSavingPhotoHUD;
-(void)_showSavingPhotoHUDForPhoto:(id)photo;
-(void)_removeSavingPhotoHUDForPhoto:(id)photo;
-(void)_showImageAtIndex:(unsigned)index;
-(void)_showHDRPromptIfNeeded;
-(id)_navigationController;
-(id)_visibleViewController;
-(void)setRotationDisabled:(BOOL)disabled;
-(id)_navigationBar;
-(BOOL)isRotationEnabled;
-(id)_buttonItemViewWithTag:(int)tag;
-(id)initWithImageCache:(id)imageCache;
-(void)_dismissModalViewControllerAnimated:(BOOL)animated;
-(BOOL)_isAirPlayEnabled;
-(void)dealloc;
-(void)_showOverlaysForResume;
-(void)applicationWillBeginSuspendAnimation:(id)application;
-(void)_applicationWillResignActive:(id)_application;
-(void)_stopSlideshowForResignActive:(id)resignActive;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationResumed:(id)resumed;
-(void)applicationWillEnterForeground:(id)application;
-(void)_applicationDidBecomeActive:(id)_application;
-(void)_processUpdatedPhotos:(id)photos;
-(void)albumChanged:(id)changed;
-(void)_simpleRemoteActionDidOccur:(id)_simpleRemoteAction;
-(void)storeCurrentConfiguration:(id)configuration;
-(void)loadCurrentConfiguration:(id)configuration;
-(void)setAlbumScrollerEnabled:(BOOL)enabled;
-(void)didMoveToPhotoAtIndex:(unsigned)index;
-(void)updateNavigationItemTitle;
-(void)didLoadFullScreenImage:(id)image forPhotoAtIndex:(unsigned)index;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(id)rotatingFooterView;
-(id)pageController:(id)controller viewControllerLeftOfController:(id)controller2;
-(id)pageController:(id)controller viewControllerRightOfController:(id)controller2;
-(void)pageControllerWillBeginPaging:(id)pageController;
-(void)pageControllerDidEndPaging:(id)pageController;
-(void)_discardPhotoScrubber;
-(void)_setupPhotoScrubber:(BOOL)scrubber;
-(void)_photoScrubberDidBeginScrubbing:(id)_photoScrubber;
-(void)_photoScrubberValueDidChange:(id)_photoScrubberValue;
-(void)_photoScrubberDidEndScrubbing:(id)_photoScrubber;
-(int)numPhotosInAlbumForPhotoScrubber:(id)photoScrubber;
-(id)photoScrubber:(id)scrubber loadImageSynchronously:(BOOL)synchronously atIndex:(int)index forLoupe:(BOOL)loupe;
-(void)animateToIndex;
-(double)durationForTransition:(int)transition;
-(void)transitionViewDidComplete:(id)transitionView fromView:(id)view toView:(id)view3;
-(void)viewWillAppear;
-(void)_hideCallout;
-(void)viewDidAppear;
-(void)viewWillDisappear;
-(void)_endSlideshow;
-(void)_setMusicIsPlaying:(BOOL)playing forPhoto:(id)photo;
-(void)_setMusicIsPlaying:(BOOL)playing;
-(void)playSlideshowFromPhotoViewer;
-(void)stopSlideshow:(BOOL)slideshow;
-(void)_stopSlideshowWithStatus:(int)status;
-(void)_playTimerFired;
-(void)togglePlay;
-(void)_showSlideshowSettings:(id)settings;
-(void)_endSlideshowSettings;
-(void)prepareForSlideshow;
-(void)playSlideshowFromAlbumUsingOrigami:(BOOL)albumUsingOrigami;
-(void)setAppInteractionDisabled:(BOOL)disabled;
-(void)_prepareToFade;
-(void)_fadeOutAndCollapse:(BOOL)collapse;
-(void)_fadeOutAndCollapseAnimation:(id)animation finished:(id)finished context:(id)context;
-(void)_fadeToViewContents;
-(void)_fadeToViewContentsAnimation:(id)viewContentsAnimation finished:(id)finished context:(void*)context;
-(void)_fadeIn;
-(void)fadeInAnimation:(id)animation finished:(id)finished;
-(void)_enqueueReusableTile:(id)tile;
-(void)_cleanseCache:(CFDictionaryRef*)cache tileIndex:(int)index;
-(void)_updateTVOutOffset;
-(void)_stopVideoPlaybackForIndex:(int)index;
-(CGRect)frameForCurrentImageAtDefaultScale;
-(void)updateAfterCollapse;
-(void)_makeTilesPerformSelector:(SEL)selector withObject:(id)object;
-(void)_showTileCache;
-(void)_preloadNextImage;
-(void)_cleanseTileCachesForTileIndex:(int)tileIndex;
-(void)_cleanseTileCachesForTVOutTileIndex:(int)tvoutTileIndex;
-(void)updateTVOutStateAfterAnimation;
-(void)updateAfterAnimation;
-(void)slideshowSettingsViewControllerPlayButtonWasPressed:(id)pressed;
-(void)slideshowSettingsViewController:(id)controller didSelectAirPlayService:(id)service;
-(id)slideshowSettingsViewController:(id)controller transitionKeysForAirPlayService:(id)airPlayService;
-(id)slideshowSettingsViewController:(id)controller alternateTransitionLocalizationsForAirPlayService:(id)airPlayService;
-(id)slideshowSettingsViewController:(id)controller slideshowSettingsForAirPlayService:(id)airPlayService;
-(void)_slideshowViewWasTapped:(id)tapped;
-(void)slideshowPluginReadyToBegin:(id)begin;
-(void)slideshowPluginDidDisplayFinalImage:(id)slideshowPlugin;
-(void)_loadSlideshowPlugin;
-(void)_displayLastImageForSlideshowPlugin:(id)slideshowPlugin;
-(id)_newAlbumFromImages:(id)images startingAtIndex:(unsigned)index;
-(id)_currentTVOutVideoView;
-(BOOL)_canTrimCurrentVideoInPlace;
-(BOOL)canShowNextImage:(BOOL)image;
-(BOOL)canShowNextImage;
-(BOOL)canShowPreviousImage;
-(void)_transitionToImage:(id)image fromOldIndex:(int)oldIndex toNewIndex:(int)newIndex transition:(int)transition transitionView:(id)view;
-(void)_transitionToImage:(id)image fromOldIndex:(int)oldIndex toNewIndex:(int)newIndex transition:(int)transition;
-(void)animationDidStop:(id)animation finished:(BOOL)finished;
-(void)_runLKTransition:(id)transition transitionView:(id)view fromView:(id)view3 toView:(id)view4;
-(void)_runLKTransition:(id)transition;
-(void)showNextImageWithTransition:(int)transition;
-(void)showPreviousImageWithTransition:(int)transition;
-(void)_updateTileCache:(CFDictionaryRef*)cache;
-(void)deleteCurrentPhoto:(id)photo;
-(void)_processAlbumChangedWithItems:(id)items albumModificationMode:(int)mode;
-(void)finishDelete;
-(void)_performOpenTrashAnimation;
-(void)_performCloseTrashAnimation;
-(void)didFinishSuckingToTrash:(id)trash finished:(id)finished context:(void*)context;
-(void)suckToTrash:(id)trash transitionParent:(id)parent;
-(void)_prepareForSucking;
-(void)_trashOpenAnimationFinished;
-(void)_trashClosedAnimationFinished;
-(void)_didLoadImage:(id)image forImageID:(int)imageID;
-(void)imageLoadingQueue:(id)queue didLoadImage:(id)image forObject:(id)object fromSource:(id)source;
-(void)_flushTileCache;
-(void)_flushTileCachePreservingTileAtIndex:(unsigned)index newTileIndex:(unsigned)index2;
-(void)albumScrollerDidEndSmoothScroll;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewWillBeginDecelerating:(id)scrollView;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(BOOL)videoViewShouldPlayImmediately:(id)videoView;
-(BOOL)videoViewShouldDisplayScrubber:(id)videoView;
-(void)videoView:(id)view scrubberWasCreated:(id)created;
-(BOOL)videoViewShouldRespondToPlayOverlayTap:(id)videoView;
-(void)setNavigationBarDisabled:(BOOL)disabled;
-(void)setBottomBarDisabled:(BOOL)disabled;
-(BOOL)videoViewCanBeginPlayback:(id)playback;
-(void)videoViewDidBeginPlayback:(id)videoView;
-(void)videoViewDidPausePlayback:(id)videoView;
-(void)videoViewDidEndPlayback:(id)videoView didFinish:(BOOL)finish;
-(void)videoViewDidBeginScrubbing:(id)videoView;
-(void)videoViewDidEndScrubbing:(id)videoView;
-(void)videoViewWillBeginEditing:(id)videoView;
-(void)videoViewDidBeginEditing:(id)videoView;
-(void)videoViewDidCancelEditing:(id)videoView;
-(BOOL)videoViewCanCreateMetadata:(id)metadata;
-(id)videoViewSelectedAirTunesService:(id)service;
-(void)imageViewWillSwitchToFullSizeImage:(id)imageView;
-(void)imageViewDidSwitchToFullSizeImage:(id)imageView;
-(BOOL)photoTileViewControllerIsDisplayingLandscape:(id)landscape;
-(void)_loadImageForTile:(id)tile fromImageSource:(id)imageSource;
-(void)photoTileViewControllerRequestsFullScreenImage:(id)image;
-(void)photoTileViewControllerRequestsFullSizeImage:(id)image;
-(void)photoTileViewControllerCancelImageRequests:(id)requests;
-(void)photoTileViewController:(id)controller willAppear:(BOOL)appear;
-(void)photoTileViewController:(id)controller didDisappear:(BOOL)disappear;
-(void)photoTileViewControllerSingleTap:(id)tap;
-(void)photoTileViewControllerWillBeginGesture:(id)photoTileViewController;
-(void)photoTileViewControllerDidEndGesture:(id)photoTileViewController;
-(BOOL)photoTileViewControllerAllowsEditing:(id)editing;
-(BOOL)isPhotoTileParentPageControllerAnimating:(id)animating;
-(void)photoTileViewControllerDidSetHDRTypeForPhoto:(id)photoTileViewController;
-(void)_cancelScrubTimer;
-(void)_resetScrubTimerForDirection:(int)direction;
-(void)_scrubTimerFired:(id)fired;
-(void)_stopScrubbing:(id)scrubbing;
-(void)_handleDirectionButtonMouseDown:(id)down direction:(int)direction;
-(void)mouseDownInLeftButton:(id)leftButton;
-(void)mouseDownInRightButton:(id)rightButton;
-(void)_showCropOverlayWithTitle:(id)title subtitle:(id)subtitle cropButtonTitle:(id)title3 disablingRotation:(BOOL)rotation duration:(float)duration;
-(void)_dismissCropOverlay;
-(void)_savePhoto:(BOOL)photo;
-(void)_backgroundSavePhoto:(id)photo;
-(void)_savePhotoFinished:(id)finished;
-(void)cropOverlayWasCancelled:(id)cancelled;
-(void)cropOverlayWasOKed:(id)ked;
-(void)_dismissActionMenuAndShowButtonBar:(BOOL)bar;
-(void)_showPeoplePicker;
-(void)_reallyShowPeoplePicker;
-(void)_endPeoplePicker;
-(void)peoplePickerNavigationControllerDidCancel:(id)peoplePickerNavigationController;
-(BOOL)peoplePickerNavigationController:(id)controller shouldContinueAfterSelectingPerson:(void*)person;
-(BOOL)peoplePickerNavigationController:(id)controller shouldContinueAfterSelectingPerson:(void*)person property:(int)property identifier:(int)identifier;
-(void)editImageViewController:(id)controller didEditImageWithOptions:(id)options;
-(void)editImageViewControllerDidCancel:(id)editImageViewController;
-(void)_dismissPeoplePickerPopover;
-(void)popoverControllerDidDismissPopover:(id)popoverController;
-(BOOL)_shouldRespondToButtonBarButtons;
-(void)playSlideshowClicked:(id)clicked;
-(void)deleteImageClicked:(id)clicked;
-(void)copy:(id)copy;
-(void)rotateCurrentPhoto:(id)photo;
-(void)saveCurrentPhoto:(id)photo;
-(void)displayActionMenu:(id)menu;
-(void)displayPreviousPhoto:(id)photo;
-(void)displayNextPhoto:(id)photo;
-(void)displayCropOverlay:(id)overlay;
-(BOOL)canPerformAction:(SEL)action withSender:(id)sender;
-(void)cropPhoto:(id)photo;
-(void)cancelCropPhoto:(id)photo;
-(CGRect)_animationDestinationRectForImageSize:(CGSize)imageSize;
-(void)sendViaEmailClicked;
-(void)_performSendViaEmail;
-(void)_reallySendViaEmail:(id)email;
-(void)_animateSendToEmail;
-(void)_finishedSlidingImageUp:(id)up finished:(id)finished context:(void*)context;
-(void)composeSheetIsReady;
-(void)_composeSheetDidDisplay;
-(void)_finishedSlidingImageDown:(id)down finished:(id)finished context:(void*)context;
-(void)_commonDidFinishEmailAnimation:(BOOL)_common;
-(void)mailComposeController:(id)controller didFinishWithResult:(int)result error:(id)error;
-(double)_durationForCurrentVideo;
-(void)_clearCurrentPhotoPrinter;
-(void)printCurrentPhoto:(id)photo;
-(void)rotateImageByDegrees:(int)degrees;
-(void)_rotationAnimation:(id)animation finished:(BOOL)finished context:(XXStruct_lMgBbA*)context;
-(void)savePhotoToCameraRoll;
-(void)photoPrinterWillPresentPrintingOptions:(id)photoPrinter;
-(void)photoPrinterDidDismissPrintingOptions:(id)photoPrinter;
-(void)_startSettingWallpaper:(id)wallpaper;
-(void)_endSettingWallpaper:(id)wallpaper;
-(void)startSettingWallpaper;
-(void)endSettingWallpaper;
-(void)_setImageAsHomeScreenClicked:(id)clicked;
-(void)_setImageAsLockScreenClicked:(id)clicked;
-(void)_setImageAsHomeScreenAndLockScreenClicked:(id)clicked;
-(void)_showCompositionForPublishingBundleNamed:(id)publishingBundleNamed;
-(void)_cancelRemaking;
-(void)_transcodeVideoUsingMode:(int)mode;
-(void)publishToMobileMeClicked;
-(void)_publishToMobileMeClicked;
-(void)publishToYouTubeClicked;
-(void)_publishToYouTubeClicked;
-(void)_showVideoTooLongAlert;
-(void)_enterVideoEditingMode;
-(void)_showMMSComposeSheet;
-(void)videoRemakerDidBeginRemaking:(id)videoRemaker;
-(void)videoRemaker:(id)remaker progressDidChange:(float)progress;
-(void)videoRemakerDidEndRemaking:(id)videoRemaker temporaryPath:(id)path;
-(void)sendViaMMSClicked;
-(void)smsComposeControllerDataInserted:(id)inserted;
-(void)smsComposeControllerCancelled:(id)cancelled;
-(void)smsComposeControllerSendStarted:(id)started;
-(BOOL)_shouldShowVideoPlayOverlay;
-(void)setVideoEditingMode:(BOOL)mode;
-(void)setVideoEditingMode:(BOOL)mode animated:(BOOL)animated;
-(BOOL)videoEditingMode;
-(void)_cancelVideoEditingMode:(id)mode;
-(void)_delayedExitEditingMode;
-(void)_showConfirmationForPassthroughTrimming:(id)passthroughTrimming;
-(void)_trimVideo:(id)video;
-(void)videoViewDidBeginRemaking:(id)videoView;
-(void)_commonDidBeginRemaking;
-(void)videoView:(id)view remakingProgressDidChange:(float)remakingProgress;
-(void)_commonRemakingProgressDidChange:(float)_commonRemakingProgress;
-(void)videoViewDidEndRemaking:(id)videoView didSucceed:(BOOL)succeed;
-(void)_commonDidEndRemaking:(id)_common pathToTrimmedFile:(id)trimmedFile didSucceed:(BOOL)succeed;
-(void)_showTrimUI;
-(void)_hideTrimUI;
-(void)_showNavigationBarAnimationDidStop:(id)_showNavigationBarAnimation finished:(id)finished context:(id)context;
-(id)photoCountFormatter;
-(id)photoScrollerTitle;
-(void)_showButtonGroup:(int)group withDuration:(double)duration;
-(void)_updateButtonBar:(BOOL)bar;
-(void)_cancelProgressTimer;
-(void)_removeProgressView;
-(void)_clearPublishingAgent:(id)agent;
-(void)_publishingAgentDidFinishPublishing:(id)_publishingAgent;
-(void)_publishingAgentDidStartPublishing:(id)_publishingAgent;
-(void)_publishingAgentDidStartRemaking:(id)_publishingAgent;
-(void)_publishingAgentDidEndRemaking:(id)_publishingAgent;
-(void)_publishingAgentsDidForceCancel:(id)_publishingAgents;
-(void)_updateProgressView;
-(void)updateProgressView;
-(void)updateOverlays;
-(void)_updateNavigationBar;
-(void)_updateVideoScrubberWidth;
-(int)_toolbarMode;
-(void)_setupButtonBar;
-(id)_itemsForButtonGroup:(int)buttonGroup;
-(void)hideToolbarWithDuration:(double)duration;
-(void)enableAutohideControls;
-(void)disableAutohideControls;
-(BOOL)autohideControlsIsEnabled;
-(void)_setAutohidesControls:(BOOL)controls;
-(void)resetToolbarTimer;
-(void)_resetToolbarTimer:(float)timer;
-(void)_cancelToolbarTimer;
-(void)_hideToolbarFired:(id)fired;
-(int)_statusBarStyle;
-(void)_setShouldRasterizeOverlays:(BOOL)_set;
-(void)showOverlaysWithDuration:(float)duration;
-(void)hideOverlays;
-(void)hideOverlaysWithDuration:(float)duration hideStatusBar:(BOOL)bar;
-(void)_overlayAnimationFinished;
-(int)statusBarMode;
-(void)setStatusBarIsLocked:(BOOL)locked;
-(BOOL)statusBarIsLocked;
-(BOOL)_dismissPopovers;
-(void)_forceDismissAlertView:(BOOL)view enableToolbarTimer:(BOOL)timer;
-(void)_forceDismissActionSheet:(BOOL)sheet enableToolbarTimer:(BOOL)timer;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)willPresentActionSheet:(id)sheet;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;
-(void)_repositionPopoversIfNecessary;
-(void)_redisplayActionSheet:(id)sheet;
-(void)_redisplayPopovers;
-(id)_actionViewRootView;
-(void)_configureTVOutPageController;
-(void)_externalScreenGotDisconnected;
-(void)_prepareForTVOut;
-(void)_removeTVOutWindow;
-(void)_longPressRecognized:(id)recognized;
-(void)_getRotationContentSettings:(XXStruct_3B_lsC*)settings;
-(void)setSearchForAirTunesService:(BOOL)airTunesService;
-(id)_imageForMode:(int)mode isHighlighted:(BOOL)highlighted;
-(id)_getButtonForAirTunesMode:(int)airTunesMode;
-(void)_removeAirTunesOption;
-(void)setAirTunesMode:(int)mode;
-(void)_airTunesServicesDidChange:(id)_airTunesServices;
-(void)_airTunesButtonWasPressed;
-(void)_dismissAirtunesServicePickerPopover;
-(void)_setSelectedAirTunesService:(id)service;
-(void)_streamPhoto:(id)photo withTransition:(id)transition;
-(void)_stopStreamingPhotosToAirTunes;
-(void)_networkReachabilityDidChange:(id)_networkReachability;
-(void)_airTunesServiceDidDisconnect:(id)_airTunesService;
-(void)airTunesServicePickerViewController:(id)controller didSelectService:(id)service;
-(void)showFullScreenPhotoEditTools;
-(BOOL)_airTunesSlideShowShouldContinue;
-(id)_nextAirTunesSlideshowPhoto;
-(void)_airTunesSlideShowTimerFired;
-(void)_removeAirTunesSlideShowViewAndReset;
-(void)_stopAirTunesSlideShow:(BOOL)show;
-(void)_startAirTunesSlideShow;
-(void)_airTunesSlideShowViewWasTapped;
-(id)airPlayRemoteSlideshowAssetKeys:(id)keys;
-(BOOL)airplayRemoteSlideshow:(id)slideshow requestAssetWithInfo:(id)info completion:(id)completion;
-(BOOL)airplayRemoteSlideshow:(id)slideshow handleEvent:(id)event;
@end

