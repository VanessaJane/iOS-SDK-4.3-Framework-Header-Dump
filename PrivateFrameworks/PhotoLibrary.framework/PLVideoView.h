/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import "PhotoLibrary-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "UIMovieScrubberDelegate.h"
#import "UIMovieScrubberDataSource.h"

@class PLMoviePlayerController, NSArray, UIMovieScrubber, NSMutableDictionary, MLPhotoBakedThumbnails, AVRemaker, NSDictionary, PLPhotoTileViewController, UIButton, UIView, MLPhoto, NSTimer, PLAirTunesService, NSString, PLAirPlayBackgroundView, PLVideoEditingOverlayView, UIImageView, PLVideoOutBackgroundView, UIImage, PLVideoPosterFrameView;
@protocol PLVideoViewDelegate;

@interface PLVideoView : XXUnknownSuperclass <UIMovieScrubberDelegate, UIMovieScrubberDataSource> {
	MLPhoto* _videoCameraImage;
	PLPhotoTileViewController* _imageTile;
	PLVideoPosterFrameView* _posterFrameView;
	UIButton* _videoOverlayPlayButton;
	UIView* _videoOverlayBackgroundView;
	PLVideoEditingOverlayView* _trimMessageView;
	UIImage* _posterFrameImage;
	float _scrubberWidth;
	unsigned _scaleMode;
	UIImageView* _scrubberBackgroundView;
	UIMovieScrubber* _scrubber;
	UIView* _scrubberTitleView;
	NSTimer* _scrubberUpdateTimer;
	NSDictionary* _thumbnailOptionsDict;
	NSMutableDictionary* _cachedThumbnails;
	MLPhotoBakedThumbnails* _bakedLandscapeThumbnails;
	MLPhotoBakedThumbnails* _bakedPortraitThumbnails;
	AVRemaker* _remaker;
	int _timeOptions;
	NSString* _trimmedPath;
	NSString* _videoPathAfterTrim;
	NSTimer* _trimProgressTimer;
	MLPhoto* _trimmedVideoClip;
	XXStruct_6rcd1D* _trimProgressStack;
	float _progress;
	int _interfaceOrientation;
	PLMoviePlayerController* _moviePlayer;
	int _orientationWhenLastDisplayed;
	id<PLVideoViewDelegate> _delegate;
	double _maximumTrimLength;
	double _lastScrubbedValue;
	double _lastActualValue;
	double _duration;
	double _cachedCurrentPlaybackTime;
	NSMutableDictionary* _thumbnailRequests;
	unsigned _currentThumbnailRequestID;
	unsigned _previewFrameRequestID;
	NSArray* _portraitSummaryThumbnailTimestamps;
	NSArray* _landscapeSummaryThumbnailTimestamps;
	PLAirTunesService* _selectedAirTunesService;
	PLAirPlayBackgroundView* _airPlayBackgroundView;
	PLVideoOutBackgroundView* _videoOutBackgroundView;
	unsigned _showsPosterFrame : 1;
	unsigned _showsPlayButton : 1;
	unsigned _canEdit : 1;
	unsigned _loadMediaImmediately : 1;
	unsigned _scrubberIsSubview : 1;
	unsigned _viewWillAppear : 1;
	unsigned _didLayout : 1;
	unsigned _wasPlayingBeforeScrub : 1;
	unsigned _playFromBeginning : 1;
	unsigned _reloadScrubberThumbnails : 1;
	unsigned _playing : 1;
	unsigned _playingToAirTunes : 1;
	unsigned _editing : 1;
	unsigned _disableEditAfterTrim : 1;
	unsigned _scrubbing : 1;
	unsigned _scrubbingToRight : 1;
	unsigned _deleteOriginalFile : 1;
	unsigned _passthroughTrimming : 1;
	unsigned _preparingMoviePlayer : 1;
	unsigned _didPrepareMoviePlayer : 1;
	unsigned _moviePlayerIsReady : 1;
	unsigned _firstFrameWasDisplayed : 1;
	unsigned _showingOverlay : 1;
	unsigned _showingScrubber : 1;
	unsigned _showScrubberWhenMovieIsReady : 1;
	unsigned _playbackDidBegin : 1;
	unsigned _playbackWillBegin : 1;
	unsigned _didDisappear : 1;
	unsigned _loadScrubberThumbnails : 1;
	unsigned _videoIsLandscape : 1;
	unsigned _posterImageIsThumbnail : 1;
	unsigned _canCreateMetadata : 1;
	unsigned _createPreviewPosterFrame : 1;
	unsigned _startedDeliveringNotificationsToMainThread : 1;
	unsigned _isTrimming : 1;
	unsigned _wasTrimmedInPlace : 1;
	unsigned _remakingFailed : 1;
}
@property(readonly, assign, nonatomic) int interfaceOrientation;
@property(assign, nonatomic) float scrubberWidth;
@property(readonly, assign, nonatomic) UIView* posterFrameView;
@property(assign, nonatomic) double currentTime;
@property(assign, nonatomic) BOOL scrubberIsSubview;
@property(assign, nonatomic) BOOL canEdit;
@property(assign, nonatomic) BOOL loadMediaImmediately;
@property(assign, nonatomic) BOOL showsPlayOverlay;
@property(assign, nonatomic) BOOL showsPosterFrame;
@property(readonly, assign, nonatomic) UIImage* currentFrameImage;
@property(readonly, assign, nonatomic) UIImageView* previewImageView;
@property(readonly, assign, nonatomic) NSString* videoPathAfterTrim;
@property(readonly, assign, nonatomic) double endTime;
@property(readonly, assign, nonatomic) double startTime;
@property(assign, nonatomic, getter=isEditing) BOOL editing;
@property(readonly, assign, nonatomic) double duration;
@property(readonly, assign, nonatomic) UIImage* posterFrameImage;
@property(retain, nonatomic) MLPhoto* trimmedVideoClip;
@property(readonly, assign, nonatomic) MLPhoto* videoCameraImage;
@property(assign, nonatomic) PLPhotoTileViewController* imageTile;
@property(assign, nonatomic) id<PLVideoViewDelegate> delegate;
-(id)initWithFrame:(CGRect)frame videoCameraImage:(id)image orientation:(int)orientation;
-(void)_resetMoviePlayer;
-(void)dealloc;
-(id)description;
-(void)touchesEnded:(id)ended withEvent:(id)event;
-(id)hitTest:(CGPoint)test withEvent:(id)event;
-(float)_scrubberYOffsetForOrientation:(int)orientation;
-(void)_createScrubber:(BOOL)scrubber;
-(id)videoScrubber;
-(id)videoScrubberBackgroundView;
-(id)videoOverlayBackgroundView;
-(void)setVideoOverlayBackgroundView:(id)view;
-(void)_showVideoOverlay;
-(void)_videoOverlayFadeOutDidFinish;
-(void)_hideVideoOverlay:(BOOL)overlay;
-(void)_hideTrimMessageView:(BOOL)view;
-(void)_updateScrubberVisibility:(BOOL)visibility;
-(void)_setScaleModeForSize:(CGSize)size;
-(BOOL)_canCreateMetadata;
-(void)_setPosterFrameHidden:(BOOL)hidden;
-(void)setPosterFrameImage:(id)image isThumbnail:(BOOL)thumbnail;
-(void)layoutSubviews;
-(void)_dcimContentsDidChange:(id)_dcimContents;
-(void)_itemPlaybackDidEnd:(id)_itemPlayback;
-(void)_videoFrameDisplayed:(id)displayed;
-(void)_rateDidChange:(id)_rate;
-(void)_setReloadScrubberThumbnails:(BOOL)thumbnails;
-(void)_reloadScrubberThumbnails;
-(BOOL)moviePlayerExitRequest:(id)request exitReason:(int)reason;
-(void)moviePlayerPlaybackStateDidChange:(id)moviePlayerPlaybackState;
-(void)_requestPreviewPosterFrameForVideoSize:(CGSize)videoSize;
-(void)_savePreviewPosterFrameImage:(CGImageRef)image;
-(void)moviePlayerReadyToPlay:(id)play;
-(void)moviePlayerDelegateDidChange:(id)moviePlayerDelegate;
-(BOOL)moviePlayerHeadsetPlayPausePressed:(id)pressed;
-(BOOL)moviePlayerHeadsetNextTrackPressed:(id)pressed;
-(BOOL)moviePlayerHeadsetPreviousTrackPressed:(id)pressed;
-(double)movieScrubberDuration:(id)duration;
-(id)movieScrubber:(id)scrubber evenlySpacedTimestamps:(int)timestamps startingAt:(id)at endingAt:(id)at4;
-(id)movieScrubber:(id)scrubber timestampsStartingAt:(id)at endingAt:(id)at3 maxCount:(int)count;
-(void)_saveCachedThumbnailsIfNecessary;
-(void)_thumbnailImageWasGenerated:(id)generated;
-(void)_thumbnailImageGenerationFailed:(id)failed;
-(void)movieScrubber:(id)scrubber requestThumbnailImageForTimestamp:(id)timestamp;
-(id)_loadThumbnailsIntoDictionary:(id)dictionary isLandscape:(BOOL)landscape aspectRatio:(float)ratio;
-(float)movieScrubberThumbnailAspectRatio:(id)ratio;
-(void)_removeScrubberUpdateTimer;
-(void)_resetScrubberUpdateTimer;
-(void)movieScrubberDidBeginScrubbing:(id)movieScrubber withHandle:(int)handle;
-(void)movieScrubberDidEndScrubbing:(id)movieScrubber withHandle:(int)handle;
-(void)_didScrubToValue:(double)value withHandle:(int)handle;
-(void)movieScrubber:(id)scrubber valueDidChange:(double)value;
-(void)movieScrubber:(id)scrubber editingStartValueDidChange:(double)editingStartValue;
-(void)movieScrubber:(id)scrubber editingEndValueDidChange:(double)editingEndValue;
-(void)movieScrubberWillBeginRequestingThumbnails:(id)movieScrubber;
-(void)movieScrubberDidFinishRequestingThumbnails:(id)movieScrubber;
-(void)movieScrubberWillBeginEditing:(id)movieScrubber;
-(void)movieScrubberDidBeginEditing:(id)movieScrubber;
-(void)movieScrubberDidCancelEditing:(id)movieScrubber;
-(void)movieScrubber:(id)scrubber widthDelta:(float)delta originXDelta:(float)delta3;
-(void)setMaximumTrimLength:(double)length;
-(void)showTrimMessage:(id)message withBottomY:(float)bottomY;
-(void)hideTrimMessage;
-(void)setEditing:(BOOL)editing animated:(BOOL)animated;
-(void)_setPlaying:(BOOL)playing;
-(void)_reset;
-(void)movieScrubberEditingAnimationFinished:(id)finished;
-(void)_scrubberAnimationFinished;
-(void)_thumbnailsWereRegenerated:(id)regenerated error:(id)error contextInfo:(void*)info;
-(void)importerFinishedProcessingTrimmedVideo:(id)video;
-(void)_removeTrimProgressTimer;
-(void)_resetTrimProgressTimer;
-(void)_informDelegateAboutProgressChange:(float)change;
-(void)_updateTrimProgress;
-(void)setProgress:(id)progress;
-(void)_trimProgressChanged:(id)changed;
-(void)_startDeliveringNotificationsToMainThread;
-(void)_stopDeliveringNotifications;
-(void)_cancelRemaking:(id)remaking;
-(void)_remakerDidFinish:(id)_remaker;
-(BOOL)deleteOriginalFileAfterTrim;
-(BOOL)isTrimming;
-(BOOL)wasTrimmedInPlace;
-(void)trimUsingMode:(int)mode saveACopy:(BOOL)copy;
-(void)cancelTrim;
-(id)newPreviewImageData:(id*)data fullScreenImage:(id*)image;
-(void)toggleScaleMode:(float)mode;
-(void)handleDoubleTap;
-(BOOL)isPlaying;
-(void)_delayedHidePosterFrame;
-(void)_didBeginPlayback;
-(void)playButtonClicked:(id)clicked;
-(void)playToAirTunes;
-(BOOL)playingToAirTunes;
-(BOOL)playingToVideoOut;
-(void)play;
-(void)pause;
-(void)stop;
-(void)hideScrubberBackgroundViewWithDuration:(float)duration;
-(void)showScrubberBackgroundViewWithDuration:(float)duration;
-(void)viewWillAppear:(BOOL)view;
-(void)_viewDidAppear:(BOOL)_view;
-(void)viewDidAppear;
-(void)viewDidDisappear;
-(void)setFrame:(CGRect)frame;
-(void)didMoveToSuperview;
-(void)willMoveToSuperview:(id)superview;
-(BOOL)_canEditDuration:(double)duration;
-(void)_scrubToTime:(double)time;
-(BOOL)shouldShowCopyCalloutAtPoint:(CGPoint)point;
-(void)_screenDidConnect:(id)_screen;
-(void)_screenDidDisconnect:(id)_screen;
-(void)_handleScreenConnectionChange:(BOOL)change;
-(id)_parentViewForExternalOutputBackground;
-(void)_addAirPlayBackgroundView;
-(void)_removeAirPlayBackgroundView;
-(void)_airTunesServiceChanged;
-(void)adjustUIForVideoOut:(BOOL)videoOut;
-(id)_moviePlayer;
-(void)_prepareMoviePlayer;
-(void)_playbackFinished;
-(void)_updateScrubberValue;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
@end

