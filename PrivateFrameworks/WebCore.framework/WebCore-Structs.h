/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

typedef struct Page Page;

typedef struct StringImpl StringImpl;

template<>
struct RefPtr<WebCore::StringImpl> {
	StringImpl* m_ptr;
};

typedef struct String {
	RefPtr<WebCore::StringImpl> m_impl;
} String;

typedef struct AtomicString {
	String _field1;
} AtomicString;

typedef struct Frame Frame;
template<>
struct RefPtr<WebCore::Frame> {
	Frame* _field1;
};

typedef struct FrameTree {
	Frame* _field1;
	Frame* _field2;
	AtomicString _field3;
	RefPtr<WebCore::Frame> _field4;
	Frame* _field5;
	RefPtr<WebCore::Frame> _field6;
	Frame* _field7;
	unsigned _field8;
} FrameTree;

typedef struct FrameLoaderClient FrameLoaderClient;

typedef struct KURL {
	String _field1;
	unsigned _field2 : 1;
	unsigned _field3 : 1;
	int _field4;
	int _field5;
	int _field6;
	int _field7;
	int _field8;
	int _field9;
	int _field10;
	int _field11;
	int _field12;
	int _field13;
} KURL;

template<>
struct pair<WebCore::AtomicString,WebCore::String>;

template<>
struct HashTable<WebCore::AtomicString,std::pair<WebCore::AtomicString, WebCore::String>,WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String> >,WebCore::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String> >,WTF::HashTraits<WebCore::AtomicString> > {
	pair<WebCore::AtomicString,WebCore::String>* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

typedef struct HTTPHeaderMap {
	HashTable<WebCore::AtomicString,std::pair<WebCore::AtomicString, WebCore::String>,WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String> >,WebCore::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String> >,WTF::HashTraits<WebCore::AtomicString> > _field1;
} HTTPHeaderMap;

template<>
struct VectorBuffer<WebCore::String,0ul> {
	String* _field1;
	unsigned _field2;
};

template<>
struct Vector<WebCore::String,0ul> {
	unsigned _field1;
	VectorBuffer<WebCore::String,0ul> _field2;
};

typedef struct FormData FormData;

template<>
struct RefPtr<WebCore::FormData> {
	FormData* _field1;
};

template<>
struct RetainPtr<NSURLRequest> {
	id _field1;
};

typedef struct ResourceRequest {
	KURL _field1;
	int _field2;
	double _field3;
	KURL _field4;
	String _field5;
	HTTPHeaderMap _field6;
	Vector<WebCore::String,0ul> _field7;
	RefPtr<WebCore::FormData> _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	int _field13;
	int _field14;
	bool _field15;
	RetainPtr<NSURLRequest> _field16;
} ResourceRequest;

typedef struct FormState FormState;

template<>
struct RefPtr<WebCore::FormState> {
	FormState* _field1;
};

typedef struct PolicyCallback {
	ResourceRequest _field1;
	RefPtr<WebCore::FormState> _field2;
	String _field3;
	/*function-pointer*/ void* _field4;
	/*function-pointer*/ void* _field5;
	/*function-pointer*/ void* _field6;
	void* _field7;
} PolicyCallback;

typedef struct PolicyChecker {
	Frame* _field1;
	bool _field2;
	bool _field3;
	int _field4;
	PolicyCallback _field5;
} PolicyChecker;

typedef struct HistoryItem HistoryItem;

template<>
struct RefPtr<WebCore::HistoryItem> {
	HistoryItem* _field1;
};

typedef struct HistoryController {
	Frame* _field1;
	RefPtr<WebCore::HistoryItem> _field2;
	RefPtr<WebCore::HistoryItem> _field3;
	RefPtr<WebCore::HistoryItem> _field4;
} HistoryController;

typedef struct ResourceLoadNotifier {
	Frame* _field1;
} ResourceLoadNotifier;

typedef struct TextResourceDecoder TextResourceDecoder;

template<>
struct RefPtr<WebCore::TextResourceDecoder> {
	TextResourceDecoder* _field1;
};

typedef struct DocumentWriter {
	Frame* _field1;
	bool _field2;
	String _field3;
	bool _field4;
	String _field5;
	RefPtr<WebCore::TextResourceDecoder> _field6;
} DocumentWriter;

typedef struct DocumentLoader DocumentLoader;

template<>
struct RefPtr<WebCore::DocumentLoader> {
	DocumentLoader* _field1;
};

typedef struct SerializedScriptValue SerializedScriptValue;

template<>
struct RefPtr<WebCore::SerializedScriptValue> {
	SerializedScriptValue* _field1;
};

typedef struct IconLoader IconLoader;

template<>
struct OwnPtr<WebCore::IconLoader> {
	IconLoader* _field1;
};

typedef struct {
	int* _field1;
} XXStruct_f1ovNA;

typedef struct FrameLoader FrameLoader;
template<>
struct Timer<WebCore::FrameLoader> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	FrameLoader* _field6;
	XXStruct_f1ovNA _field7;
};

template<>
struct HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > {
	Frame** _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > {
	HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > _field1;
};

struct FrameLoader {
	/*function-pointer*/ void** _field1;
	Frame* _field2;
	FrameLoaderClient* _field3;
	PolicyChecker _field4;
	HistoryController _field5;
	ResourceLoadNotifier _field6;
	DocumentWriter _field7;
	int _field8;
	int _field9;
	RefPtr<WebCore::DocumentLoader> _field10;
	RefPtr<WebCore::DocumentLoader> _field11;
	RefPtr<WebCore::DocumentLoader> _field12;
	bool _field13;
	bool _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	String _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	bool _field22;
	bool _field23;
	bool _field24;
	RefPtr<WebCore::SerializedScriptValue> _field25;
	KURL _field26;
	KURL _field27;
	OwnPtr<WebCore::IconLoader> _field28;
	bool _field29;
	bool _field30;
	bool _field31;
	bool _field32;
	bool _field33;
	KURL _field34;
	Timer<WebCore::FrameLoader> _field35;
	bool _field36;
	bool _field37;
	Frame* _field38;
	HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > _field39;
	bool _field40;
	bool _field41;
	bool _field42;
	bool _field43;
	bool _field44;
	bool _field45;
	int _field46;
	int _field47;
	bool _field48;
};

typedef struct RedirectScheduler RedirectScheduler;
template<>
struct Timer<WebCore::RedirectScheduler> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	RedirectScheduler* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct ScheduledNavigation ScheduledNavigation;

template<>
struct OwnPtr<WebCore::ScheduledNavigation> {
	ScheduledNavigation* _field1;
};

struct RedirectScheduler {
	Frame* _field1;
	Timer<WebCore::RedirectScheduler> _field2;
	OwnPtr<WebCore::ScheduledNavigation> _field3;
};

typedef struct DOMWindow* DOMWindowRef;

template<>
struct RefPtr<WebCore::DOMWindow> {
	DOMWindowRef _field1;
};

template<>
struct HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > {
	DOMWindowRef* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > {
	HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > _field1;
};

typedef struct HTMLFrameOwnerElement* HTMLFrameOwnerElementRef;

typedef struct FrameView FrameView;

template<>
struct RefPtr<WebCore::FrameView> {
	FrameView* _field1;
};

typedef struct Document Document;

template<>
struct RefPtr<WebCore::Document> {
	Document* _field1;
};

template<>
struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >;

template<>
struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > {
	pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > > {
	HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > _field1;
};

typedef struct RootObject {
	int _field1;
	bool _field2;
	void* _field3;
	ProtectedPtr<JSC::JSGlobalObject> _field4;
	HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > _field5;
	HashSet<JSC::Bindings::RuntimeObject*,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > _field6;
	HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > _field7;
} RootObject;

template<>
struct RefPtr<JSC::Bindings::RootObject> {
	RootObject* _field1;
};

template<>
struct pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >;

template<>
struct HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > {
	pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > {
	HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > _field1;
};

template<>
struct RetainPtr<WebScriptObject> {
	id _field1;
};

struct Frame {
	int _field1;
	Page* _field2;
	FrameTree _field3;
	FrameLoader _field4;
	RedirectScheduler _field5;
	RefPtr<WebCore::DOMWindow> _field6;
	HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > _field7;
	HTMLFrameOwnerElementRef _field8;
	RefPtr<WebCore::FrameView> _field9;
	RefPtr<WebCore::Document> _field10;
	ScriptController _field11;
	String _field12;
	String _field13;
	float _field14;
	SelectionController _field15;
	VisibleSelection _field16;
	Editor _field17;
	EventHandler _field18;
	AnimationController _field19;
	RefPtr<WebCore::CSSMutableStyleDeclaration> _field20;
	Timer<WebCore::Frame> _field21;
	float _field22;
	IntPoint _field23;
	ViewportArguments _field24;
	bool _field25;
	VisibleSelection _field26;
	VisibleSelection _field27;
	FloatSize _field28;
	unsigned _field29;
	unsigned _field30;
	unsigned _field31;
	double _field32;
	double _field33;
	Timer<WebCore::Frame> _field34;
	int _field35;
	bool _field36;
	bool _field37;
	bool _field38;
	bool _field39;
	bool _field40;
	bool _field41;
	int _field42;
};

typedef struct XSSAuditor* XSSAuditorRef;

template<>
struct OwnPtr<WebCore::XSSAuditor> {
	XSSAuditorRef _field1;
};

typedef struct ScriptController {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::ProtectedPtr<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::ProtectedPtr<WebCore::JSDOMWindowShell> > > _field1;
	Frame* _field2;
	int _field3;
	String* _field4;
	bool _field5;
	bool _field6;
	bool _field7;
	bool _field8;
	RefPtr<JSC::Bindings::RootObject> _field9;
	HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > _field10;
	RetainPtr<WebScriptObject> _field11;
	OwnPtr<WebCore::XSSAuditor> _field12;
} ScriptController;

typedef struct Node Node;

template<>
struct RefPtr<WebCore::Node> {
	Node* _field1;
};

typedef struct Position {
	RefPtr<WebCore::Node> _field1;
	int _field2;
	unsigned _field3 : 2;
	unsigned _field4 : 1;
} Position;

typedef struct VisibleSelection {
	Position _field1;
	Position _field2;
	Position _field3;
	Position _field4;
	int _field5;
	int _field6;
	bool _field7;
} VisibleSelection;

typedef struct SelectionController SelectionController;
template<>
struct Timer<WebCore::SelectionController> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	SelectionController* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct IntPoint {
	int m_x;
	int m_y;
} IntPoint;

typedef struct IntSize {
	int m_width;
	int m_height;
} IntSize;

typedef struct IntRect {
	IntPoint m_location;
	IntSize m_size;
} IntRect;

typedef struct Color {
	unsigned m_color;
	bool m_valid;
} Color;

struct SelectionController {
	Frame* _field1;
	int _field2;
	VisibleSelection _field3;
	int _field4;
	Timer<WebCore::SelectionController> _field5;
	IntRect _field6;
	IntRect _field7;
	IntRect _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	bool _field13;
	bool _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	Color _field19;
	int _field20;
};

typedef struct DeleteButtonController DeleteButtonController;

template<>
struct OwnPtr<WebCore::DeleteButtonController> {
	DeleteButtonController* _field1;
};

typedef struct EditCommand EditCommand;

template<>
struct RefPtr<WebCore::EditCommand> {
	EditCommand* _field1;
};

typedef struct Text Text;

template<>
struct RefPtr<WebCore::Text> {
	Text* _field1;
};

typedef struct CompositionUnderline CompositionUnderline;

template<>
struct VectorBuffer<WebCore::CompositionUnderline,0ul> {
	CompositionUnderline* _field1;
	unsigned _field2;
};

template<>
struct Vector<WebCore::CompositionUnderline,0ul> {
	unsigned _field1;
	VectorBuffer<WebCore::CompositionUnderline,0ul> _field2;
};

typedef struct Editor {
	Frame* _field1;
	OwnPtr<WebCore::DeleteButtonController> _field2;
	RefPtr<WebCore::EditCommand> _field3;
	RefPtr<WebCore::Node> _field4;
	RefPtr<WebCore::Text> _field5;
	unsigned _field6;
	unsigned _field7;
	Vector<WebCore::CompositionUnderline,0ul> _field8;
	bool _field9;
	bool _field10;
	bool _field11;
} Editor;

typedef struct EventHandler EventHandler;
template<>
struct Timer<WebCore::EventHandler> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	EventHandler* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct RenderObject RenderObject;

typedef struct SVGElementInstance* SVGElementInstanceRef;

template<>
struct RefPtr<WebCore::SVGElementInstance> {
	SVGElementInstanceRef _field1;
};

typedef struct RenderLayer RenderLayer;

typedef struct Scrollbar Scrollbar;

template<>
struct RefPtr<WebCore::Scrollbar> {
	Scrollbar* _field1;
};

template<>
struct pair<unsigned int,WTF::RefPtr<WebCore::Touch> >;

template<>
struct HashTable<unsigned int,std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> >,WTF::PairFirstExtractor<std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >,WTF::HashTraits<unsigned int> > {
	pair<unsigned int,WTF::RefPtr<WebCore::Touch> >* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > > {
	HashTable<unsigned int,std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> >,WTF::PairFirstExtractor<std::pair<unsigned int, WTF::RefPtr<WebCore::Touch> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > >,WTF::HashTraits<unsigned int> > _field1;
};

struct EventHandler {
	Frame* _field1;
	bool _field2;
	bool _field3;
	RefPtr<WebCore::Node> _field4;
	bool _field5;
	bool _field6;
	bool _field7;
	IntPoint _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	Timer<WebCore::EventHandler> _field12;
	Timer<WebCore::EventHandler> _field13;
	RenderObject* _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	Timer<WebCore::EventHandler> _field18;
	bool _field19;
	RefPtr<WebCore::SVGElementInstance> _field20;
	RefPtr<WebCore::SVGElementInstance> _field21;
	RenderLayer* _field22;
	RefPtr<WebCore::Node> _field23;
	RefPtr<WebCore::Node> _field24;
	RefPtr<WebCore::Node> _field25;
	RefPtr<WebCore::Frame> _field26;
	RefPtr<WebCore::Scrollbar> _field27;
	int _field28;
	RefPtr<WebCore::Node> _field29;
	float _field30;
	float _field31;
	float _field32;
	float _field33;
	unsigned _field34;
	HashMap<unsigned int,WTF::RefPtr<WebCore::Touch>,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WTF::RefPtr<WebCore::Touch> > > _field35;
	HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > _field36;
	RefPtr<WebCore::Frame> _field37;
	RefPtr<WebCore::HTMLFrameSetElement> _field38;
	IntSize _field39;
	IntPoint _field40;
	IntPoint _field41;
	double _field42;
	PlatformMouseEvent _field43;
	bool _field44;
	RefPtr<WebCore::Node> _field45;
	bool _field46;
	RefPtr<WebCore::Node> _field47;
	id _field48;
	bool _field49;
};

template<>
struct RefPtr<WebCore::EventTarget>;

template<>
struct HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > {
	RefPtr<WebCore::EventTarget>* _field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > {
	HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > _field1;
};

typedef struct HTMLFrameSetElement* HTMLFrameSetElementRef;

template<>
struct RefPtr<WebCore::HTMLFrameSetElement> {
	HTMLFrameSetElementRef _field1;
};

typedef struct PlatformMouseEvent {
	IntPoint _field1;
	IntPoint _field2;
	int _field3;
	int _field4;
	int _field5;
	bool _field6;
	bool _field7;
	bool _field8;
	bool _field9;
	double _field10;
	unsigned _field11;
} PlatformMouseEvent;

typedef struct AnimationControllerPrivate AnimationControllerPrivate;

typedef struct AnimationController {
	AnimationControllerPrivate* _field1;
} AnimationController;

typedef struct CSSMutableStyleDeclaration* CSSMutableStyleDeclarationRef;

template<>
struct RefPtr<WebCore::CSSMutableStyleDeclaration> {
	CSSMutableStyleDeclarationRef _field1;
};

template<>
struct Timer<WebCore::Frame> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	Frame* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct ViewportArguments {
	float _field1;
	float _field2;
	float _field3;
	float _field4;
	float _field5;
	float _field6;
} ViewportArguments;

typedef struct FloatSize {
	float m_width;
	float m_height;
} FloatSize;

typedef struct _NSZone NSZone;

template<>
struct RefPtr<WebCore::AccessibilityObject>;

template<>
struct VectorBuffer<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> {
	RefPtr<WebCore::AccessibilityObject>* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> {
	unsigned m_size;
	VectorBuffer<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> m_buffer;
};

@class AccessibilityObjectWrapper;
template<>
struct RetainPtr<AccessibilityObjectWrapper> {
	AccessibilityObjectWrapper* m_ptr;
};

typedef struct AccessibilityObject {
	/*function-pointer*/ void** _field1;
	int _field2;
	unsigned _field3;
	Vector<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> _field4;
	bool _field5;
	int _field6;
	RetainPtr<AccessibilityObjectWrapper> _field7;
} AccessibilityObject;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSRange {
	unsigned _field1;
	unsigned _field2;
} NSRange;

typedef struct Range {
	int _field1;
	RefPtr<WebCore::Document> _field2;
	RangeBoundaryPoint _field3;
	RangeBoundaryPoint _field4;
} Range;

template<>
struct PassRefPtr<WebCore::Range> {
	Range* _field1;
};

typedef struct RangeBoundaryPoint {
	RefPtr<WebCore::Node> _field1;
	int _field2;
	Node* _field3;
} RangeBoundaryPoint;

typedef struct AccessibilityTableHeaderContainer AccessibilityTableHeaderContainer;

typedef struct AccessibilityTable {
	/*function-pointer*/ void** _field1;
	int _field2;
	unsigned _field3;
	Vector<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> _field4;
	bool _field5;
	int _field6;
	RetainPtr<AccessibilityObjectWrapper> _field7;
	RenderObject* _field8;
	int _field9;
	bool _field10;
	int _field11;
	Vector<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> _field12;
	Vector<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> _field13;
	AccessibilityTableHeaderContainer* _field14;
	bool _field15;
} AccessibilityTable;

typedef struct AccessibilityTableCell {
	/*function-pointer*/ void** _field1;
	int _field2;
	unsigned _field3;
	Vector<WTF::RefPtr<WebCore::AccessibilityObject>,0ul> _field4;
	bool _field5;
	int _field6;
	RetainPtr<AccessibilityObjectWrapper> _field7;
	RenderObject* _field8;
	int _field9;
	bool _field10;
	int _field11;
	int _field12;
} AccessibilityTableCell;

typedef struct TextMarkerData {
	unsigned axID;
	Node* node;
	int offset;
	int affinity;
} TextMarkerData;

typedef struct VisiblePosition {
	Position _field1;
	int _field2;
} VisiblePosition;

typedef struct AuthenticationClient {
	/*function-pointer*/ void** _field1;
} AuthenticationClient;

typedef struct _WKQuad {
	CGPoint p1;
	CGPoint p2;
	CGPoint p3;
	CGPoint p4;
} WKQuad;

typedef struct DOMObjectInternal* DOMObjectInternalRef;

typedef struct CGColor* CGColorRef;

typedef struct GraphicsLayerClient GraphicsLayerClient;

typedef struct FloatPoint {
	float m_x;
	float m_y;
} FloatPoint;

typedef struct FloatPoint3D {
	float m_x;
	float m_y;
	float m_z;
} FloatPoint3D;

typedef struct TransformationMatrix {
	double m_matrix[4][4];
} TransformationMatrix;

typedef struct GraphicsLayer GraphicsLayer;
template<>
struct VectorBuffer<WebCore::GraphicsLayer*,0ul> {
	GraphicsLayer** m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::GraphicsLayer*,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::GraphicsLayer*,0ul> m_buffer;
};

struct GraphicsLayer {
	/*function-pointer*/ void** _field1;
	GraphicsLayerClient* _field2;
	String _field3;
	IntSize _field4;
	FloatPoint _field5;
	FloatPoint3D _field6;
	FloatSize _field7;
	TransformationMatrix _field8;
	TransformationMatrix _field9;
	Color _field10;
	float _field11;
	float _field12;
	unsigned _field13 : 1;
	unsigned _field14 : 1;
	unsigned _field15 : 1;
	unsigned _field16 : 1;
	unsigned _field17 : 1;
	unsigned _field18 : 1;
	unsigned _field19 : 1;
	int _field20;
	int _field21;
	int _field22;
	Vector<WebCore::GraphicsLayer*,0ul> _field23;
	GraphicsLayer* _field24;
	GraphicsLayer* _field25;
	GraphicsLayer* _field26;
	GraphicsLayer* _field27;
	FloatPoint _field28;
	IntRect _field29;
	int _field30;
};

@class WebLayer;
template<>
struct RetainPtr<WebLayer> {
	WebLayer* m_ptr;
};

@class CALayer;
template<>
struct RetainPtr<CALayer> {
	CALayer* m_ptr;
};

template<>
struct HashMap<WebCore::String,WTF::RetainPtr<CALayer>,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WTF::RetainPtr<CALayer> > >;

template<>
struct OwnPtr<WTF::HashMap<WebCore::String, WTF::RetainPtr<CALayer>, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<WTF::RetainPtr<CALayer> > > > {
	HashMap<WebCore::String,WTF::RetainPtr<CALayer>,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WTF::RetainPtr<CALayer> > >* m_ptr;
};

@class WebAnimationDelegate;
template<>
struct RetainPtr<WebAnimationDelegate> {
	WebAnimationDelegate* m_ptr;
};

typedef struct CGImage* CGImageRef;

template<>
struct RetainPtr<CGImage*> {
	CGImageRef m_ptr;
};

typedef struct LayerAnimation LayerAnimation;

template<>
struct VectorBuffer<WebCore::GraphicsLayerCA::LayerAnimation,0ul> {
	LayerAnimation* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::GraphicsLayerCA::LayerAnimation,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::GraphicsLayerCA::LayerAnimation,0ul> m_buffer;
};

template<>
struct HashTable<int,int,WTF::IdentityExtractor<int>,WTF::IntHash<unsigned int>,WTF::HashTraits<int>,WTF::HashTraits<int> > {
	int* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<int,WTF::IntHash<unsigned int>,WTF::HashTraits<int> > {
	HashTable<int,int,WTF::IdentityExtractor<int>,WTF::IntHash<unsigned int>,WTF::HashTraits<int>,WTF::HashTraits<int> > m_impl;
};

template<>
struct pair<WebCore::String,WebCore::GraphicsLayerCA::AnimationProcessingAction>;

template<>
struct HashTable<WebCore::String,std::pair<WebCore::String, WebCore::GraphicsLayerCA::AnimationProcessingAction>,WTF::PairFirstExtractor<std::pair<WebCore::String, WebCore::GraphicsLayerCA::AnimationProcessingAction> >,WebCore::StringHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<WebCore::GraphicsLayerCA::AnimationProcessingAction> >,WTF::HashTraits<WebCore::String> > {
	pair<WebCore::String,WebCore::GraphicsLayerCA::AnimationProcessingAction>* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WebCore::String,WebCore::GraphicsLayerCA::AnimationProcessingAction,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WebCore::GraphicsLayerCA::AnimationProcessingAction> > {
	HashTable<WebCore::String,std::pair<WebCore::String, WebCore::GraphicsLayerCA::AnimationProcessingAction>,WTF::PairFirstExtractor<std::pair<WebCore::String, WebCore::GraphicsLayerCA::AnimationProcessingAction> >,WebCore::StringHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<WebCore::GraphicsLayerCA::AnimationProcessingAction> >,WTF::HashTraits<WebCore::String> > m_impl;
};

template<>
struct pair<WebCore::String,WTF::Vector<std::pair<int, int>, 0ul> >;

template<>
struct HashTable<WebCore::String,std::pair<WebCore::String, WTF::Vector<std::pair<int, int>, 0ul> >,WTF::PairFirstExtractor<std::pair<WebCore::String, WTF::Vector<std::pair<int, int>, 0ul> > >,WebCore::StringHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<WTF::Vector<std::pair<int, int>, 0ul> > >,WTF::HashTraits<WebCore::String> > {
	pair<WebCore::String,WTF::Vector<std::pair<int, int>, 0ul> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WebCore::String,WTF::Vector<std::pair<int, int>, 0ul>,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WTF::Vector<std::pair<int, int>, 0ul> > > {
	HashTable<WebCore::String,std::pair<WebCore::String, WTF::Vector<std::pair<int, int>, 0ul> >,WTF::PairFirstExtractor<std::pair<WebCore::String, WTF::Vector<std::pair<int, int>, 0ul> > >,WebCore::StringHash,WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<WTF::Vector<std::pair<int, int>, 0ul> > >,WTF::HashTraits<WebCore::String> > m_impl;
};

typedef struct FloatRect FloatRect;

template<>
struct VectorBuffer<WebCore::FloatRect,0ul> {
	FloatRect* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::FloatRect,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::FloatRect,0ul> m_buffer;
};

typedef struct GraphicsLayerCA {
	/*function-pointer*/ void** _field1;
	GraphicsLayerClient* _field2;
	String _field3;
	IntSize _field4;
	FloatPoint _field5;
	FloatPoint3D _field6;
	FloatSize _field7;
	TransformationMatrix _field8;
	TransformationMatrix _field9;
	Color _field10;
	float _field11;
	float _field12;
	unsigned _field13 : 1;
	unsigned _field14 : 1;
	unsigned _field15 : 1;
	unsigned _field16 : 1;
	unsigned _field17 : 1;
	unsigned _field18 : 1;
	unsigned _field19 : 1;
	int _field20;
	int _field21;
	int _field22;
	Vector<WebCore::GraphicsLayer*,0ul> _field23;
	GraphicsLayer* _field24;
	GraphicsLayer* _field25;
	GraphicsLayer* _field26;
	GraphicsLayer* _field27;
	FloatPoint _field28;
	IntRect _field29;
	int _field30;
	RetainPtr<WebLayer> _field31;
	RetainPtr<CALayer> _field32;
	RetainPtr<CALayer> _field33;
	OwnPtr<WTF::HashMap<WebCore::String, WTF::RetainPtr<CALayer>, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<WTF::RetainPtr<CALayer> > > > _field34;
	OwnPtr<WTF::HashMap<WebCore::String, WTF::RetainPtr<CALayer>, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<WTF::RetainPtr<CALayer> > > > _field35;
	OwnPtr<WTF::HashMap<WebCore::String, WTF::RetainPtr<CALayer>, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<WTF::RetainPtr<CALayer> > > > _field36;
	int _field37;
	unsigned _field38 : 1;
	RetainPtr<WebAnimationDelegate> _field39;
	RetainPtr<CGImage*> _field40;
	RetainPtr<CGImage*> _field41;
	Vector<WebCore::GraphicsLayerCA::LayerAnimation,0ul> _field42;
	HashSet<int,WTF::IntHash<unsigned int>,WTF::HashTraits<int> > _field43;
	HashMap<WebCore::String,WebCore::GraphicsLayerCA::AnimationProcessingAction,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WebCore::GraphicsLayerCA::AnimationProcessingAction> > _field44;
	HashMap<WebCore::String,WTF::Vector<std::pair<int, int>, 0ul>,WebCore::StringHash,WTF::HashTraits<WebCore::String>,WTF::HashTraits<WTF::Vector<std::pair<int, int>, 0ul> > > _field45;
	Vector<WebCore::FloatRect,0ul> _field46;
	unsigned _field47;
	float _field48;
} GraphicsLayerCA;

typedef struct MediaPlayer MediaPlayer;

@class NSObject;
template<>
struct RetainPtr<NSObject> {
	NSObject* m_ptr;
};

@class WebCoreMediaPlayerNotificationHelper;
template<>
struct RetainPtr<WebCoreMediaPlayerNotificationHelper> {
	WebCoreMediaPlayerNotificationHelper* m_ptr;
};

@class NSMutableDictionary;
template<>
struct RetainPtr<NSMutableDictionary> {
	NSMutableDictionary* m_ptr;
};

typedef struct MediaPlayerPrivateiPhone {
	/*function-pointer*/ void** _field1;
	MediaPlayer* _field2;
	RetainPtr<NSObject> _field3;
	RetainPtr<WebCoreMediaPlayerNotificationHelper> _field4;
	RetainPtr<NSMutableDictionary> _field5;
	int _field6;
	int _field7;
	int _field8;
	int _field9;
	float _field10;
	unsigned _field11 : 1;
	unsigned _field12 : 1;
	unsigned _field13 : 1;
	unsigned _field14 : 1;
	unsigned _field15 : 1;
	unsigned _field16 : 1;
} MediaPlayerPrivateiPhone;

typedef struct __SecIdentity SecIdentity;

template<>
struct RetainPtr<__SecIdentity*> {
	SecIdentity* m_ptr;
};

typedef struct __CFArray* CFArrayRef;

template<>
struct RetainPtr<const __CFArray*> {
	CFArrayRef m_ptr;
};

typedef struct Credential {
	String m_user;
	String m_password;
	int m_persistence;
	RetainPtr<__SecIdentity*> m_identity;
	RetainPtr<const __CFArray*> m_certificates;
	int m_type;
} Credential;

typedef struct ResourceHandleInternal ResourceHandleInternal;

template<>
struct OwnPtr<WebCore::ResourceHandleInternal> {
	ResourceHandleInternal* m_ptr;
};

typedef struct ResourceHandle {
	/*function-pointer*/ void** _field1;
	int _field2;
	OwnPtr<WebCore::ResourceHandleInternal> _field3;
} ResourceHandle;

typedef struct SharedBuffer SharedBuffer;
template<>
struct RefPtr<WebCore::SharedBuffer> {
	SharedBuffer* m_ptr;
};

template<>
struct VectorBuffer<char,0ul> {
	char* _field1;
	unsigned _field2;
};

template<>
struct Vector<char,0ul> {
	unsigned _field1;
	VectorBuffer<char,0ul> _field2;
};

template<>
struct VectorBuffer<char*,0ul> {
	char** _field1;
	unsigned _field2;
};

template<>
struct Vector<char*,0ul> {
	unsigned _field1;
	VectorBuffer<char*,0ul> _field2;
};

typedef struct PurgeableBuffer PurgeableBuffer;

template<>
struct OwnPtr<WebCore::PurgeableBuffer> {
	PurgeableBuffer* _field1;
};

typedef struct __CFData* CFDataRef;

template<>
struct RetainPtr<const __CFData*> {
	CFDataRef _field1;
};

struct SharedBuffer {
	int _field1;
	unsigned _field2;
	Vector<char,0ul> _field3;
	Vector<char*,0ul> _field4;
	bool _field5;
	OwnPtr<WebCore::PurgeableBuffer> _field6;
	bool _field7;
	unsigned _field8;
	RetainPtr<const __CFData*> _field9;
};

@class WebThreadCaller;
template<>
struct RetainPtr<WebThreadCaller> {
	WebThreadCaller* m_ptr;
};

template<>
struct pair<WebCore::TileCache::TileIndex,WTF::RefPtr<WebCore::TileCache::Tile> >;

template<>
struct HashTable<WebCore::TileCache::TileIndex,std::pair<WebCore::TileCache::TileIndex, WTF::RefPtr<WebCore::TileCache::Tile> >,WTF::PairFirstExtractor<std::pair<WebCore::TileCache::TileIndex, WTF::RefPtr<WebCore::TileCache::Tile> > >,WebCore::TileCache::TileIndexHash,WTF::PairHashTraits<WebCore::TileCache::TileIndexHashTraits, WTF::HashTraits<WTF::RefPtr<WebCore::TileCache::Tile> > >,WebCore::TileCache::TileIndexHashTraits> {
	pair<WebCore::TileCache::TileIndex,WTF::RefPtr<WebCore::TileCache::Tile> >* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WebCore::TileCache::TileIndex,WTF::RefPtr<WebCore::TileCache::Tile>,WebCore::TileCache::TileIndexHash,WebCore::TileCache::TileIndexHashTraits,WTF::HashTraits<WTF::RefPtr<WebCore::TileCache::Tile> > > {
	HashTable<WebCore::TileCache::TileIndex,std::pair<WebCore::TileCache::TileIndex, WTF::RefPtr<WebCore::TileCache::Tile> >,WTF::PairFirstExtractor<std::pair<WebCore::TileCache::TileIndex, WTF::RefPtr<WebCore::TileCache::Tile> > >,WebCore::TileCache::TileIndexHash,WTF::PairHashTraits<WebCore::TileCache::TileIndexHashTraits, WTF::HashTraits<WTF::RefPtr<WebCore::TileCache::Tile> > >,WebCore::TileCache::TileIndexHashTraits> m_impl;
};

typedef struct TileCache TileCache;
template<>
struct Timer<WebCore::TileCache> {
	/*function-pointer*/ void** _vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	TileCache* m_object;
	struct {
		/*function-pointer*/ void* __pfn;
		int __delta;
	} m_function;
};

template<>
struct VectorBuffer<WebCore::IntRect,0ul> {
	IntRect* m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::IntRect,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::IntRect,0ul> m_buffer;
};

typedef struct _opaque_pthread_mutex_t {
	long __sig;
	BOOL __opaque[40];
} opaque_pthread_mutex_t;

typedef struct Mutex {
	opaque_pthread_mutex_t m_mutex;
} Mutex;

@class NSString, WAKWindow;
struct TileCache {
	RetainPtr<CALayer> _field1;
	WAKWindow* _field2;
	RetainPtr<WebThreadCaller> _field3;
	int _field4;
	int _field5;
	NSString* _field6;
	IntPoint _field7;
	IntSize _field8;
	bool _field9;
	bool _field10;
	HashMap<WebCore::TileCache::TileIndex,WTF::RefPtr<WebCore::TileCache::Tile>,WebCore::TileCache::TileIndexHash,WebCore::TileCache::TileIndexHashTraits,WTF::HashTraits<WTF::RefPtr<WebCore::TileCache::Tile> > > _field11;
	Timer<WebCore::TileCache> _field12;
	Vector<WebCore::IntRect,0ul> _field13;
	Mutex _field14;
	Mutex _field15;
};

template<>
struct Timer<WebCore::TileCache> {
	/*function-pointer*/ void** _field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	TileCache* _field6;
	XXStruct_f1ovNA _field7;
};

typedef struct TileCache {
	RetainPtr<CALayer> _field1;
	id _field2;
	RetainPtr<WebThreadCaller> _field3;
	int _field4;
	int _field5;
	id _field6;
	IntPoint _field7;
	IntSize _field8;
	bool _field9;
	bool _field10;
	HashMap<WebCore::TileCache::TileIndex,WTF::RefPtr<WebCore::TileCache::Tile>,WebCore::TileCache::TileIndexHash,WebCore::TileCache::TileIndexHashTraits,WTF::HashTraits<WTF::RefPtr<WebCore::TileCache::Tile> > > _field11;
	Timer<WebCore::TileCache> _field12;
	Vector<WebCore::IntRect,0ul> _field13;
	Mutex _field14;
	Mutex _field15;
} TileCache;

typedef struct CGContext* CGContextRef;

typedef struct _WKViewContext {
	/*function-pointer*/ void* drawCallback;
	void* drawUserInfo;
	/*function-pointer*/ void* eventCallback;
	void* eventUserInfo;
	/*function-pointer*/ void* notificationCallback;
	void* notificationUserInfo;
	/*function-pointer*/ void* layoutCallback;
	void* layoutUserInfo;
	/*function-pointer*/ void* responderCallback;
	void* responderUserInfo;
	/*function-pointer*/ void* hitTestCallback;
	void* hitTestUserInfo;
	/*function-pointer*/ void* willRemoveSubviewCallback;
	/*function-pointer*/ void* invalidateGStateCallback;
} WKViewContext;

typedef struct _WKClassInfo* WKClassInfoRef;

typedef struct _WKObject {
	unsigned referenceCount;
	WKClassInfoRef classInfo;
} WKObject;

typedef struct WKView WKView;
typedef struct WKWindow {
	WKObject _field1;
	WAKWindow* _field2;
	CGRect _field3;
	WKView* _field4;
	WKView* _field5;
	WKView* _field6;
	CGSize _field7;
	CGSize _field8;
	float _field9;
	unsigned _field10 : 1;
} WKWindow;

struct WKView {
	WKObject _field1;
	WKViewContext* _field2;
	WKWindow* _field3;
	WKView* _field4;
	CFArrayRef _field5;
	CGPoint _field6;
	CGRect _field7;
	unsigned _field8 : 1;
	unsigned _field9;
	float _field10;
	bool _field11;
};

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct FloatQuad {
	FloatPoint _field1;
	FloatPoint _field2;
	FloatPoint _field3;
	FloatPoint _field4;
} FloatQuad;

template<>
struct VectorBuffer<unsigned int,0ul> {
	unsigned* _field1;
	unsigned _field2;
};

template<>
struct Vector<unsigned int,0ul> {
	unsigned _field1;
	VectorBuffer<unsigned int,0ul> _field2;
};

typedef struct __GSFont* GSFontRef;

typedef struct JSValue {
	union {
		long long _field1;
		double _field2;
		IntPoint _field3;
	} _field1;
} JSValue;

typedef struct JSGlobalObject* JSGlobalObjectRef;

template<>
struct ProtectedPtr<JSC::JSGlobalObject> {
	JSGlobalObjectRef m_ptr;
};

template<>
struct pair<JSC::JSObject*,unsigned int>;

template<>
struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > {
	pair<JSC::JSObject*,unsigned int>* m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > {
	HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > m_impl;
};

template<>
struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > {
	HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > m_impl;
};

typedef struct RuntimeObject RuntimeObject;

template<>
struct HashTable<JSC::Bindings::RuntimeObject*,JSC::Bindings::RuntimeObject*,WTF::IdentityExtractor<JSC::Bindings::RuntimeObject*>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > {
	RuntimeObject** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<JSC::Bindings::RuntimeObject*,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > {
	HashTable<JSC::Bindings::RuntimeObject*,JSC::Bindings::RuntimeObject*,WTF::IdentityExtractor<JSC::Bindings::RuntimeObject*>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > m_impl;
};

typedef struct InvalidationCallback InvalidationCallback;

template<>
struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > {
	InvalidationCallback** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > {
	HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > m_impl;
};

typedef struct OpaqueJSValue OpaqueJSValue;

typedef struct Structure Structure;

template<>
struct RefPtr<JSC::Structure> {
	Structure* m_ptr;
};

typedef struct JSObject {
	/*function-pointer*/ void** _field1;
	Structure* _field2;
	union {
		long long* m_externalStorage;
		long long m_inlineStorage[4];
	} _field3;
	RefPtr<JSC::Structure> _field4;
} JSObject;

template<>
struct PassRefPtr<JSC::Bindings::RootObject> {
	RootObject* _field1;
};

@class GeolocationCoreLocationDelegate;
template<>
struct RetainPtr<GeolocationCoreLocationDelegate> {
	GeolocationCoreLocationDelegate* m_ptr;
};

typedef struct GeolocationLink GeolocationLink;

template<>
struct HashTable<WebCore::GeolocationLink*,WebCore::GeolocationLink*,WTF::IdentityExtractor<WebCore::GeolocationLink*>,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > {
	GeolocationLink** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::GeolocationLink*,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > {
	HashTable<WebCore::GeolocationLink*,WebCore::GeolocationLink*,WTF::IdentityExtractor<WebCore::GeolocationLink*>,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > m_impl;
};

typedef struct Geoposition Geoposition;

template<>
struct RefPtr<WebCore::Geoposition> {
	Geoposition* m_ptr;
};

typedef struct PositionError PositionError;

template<>
struct RefPtr<WebCore::PositionError> {
	PositionError* m_ptr;
};

typedef struct GeolocationManager {
	RetainPtr<GeolocationCoreLocationDelegate> _field1;
	HashSet<WebCore::GeolocationLink*,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > _field2;
	bool _field3;
	RefPtr<WebCore::Geoposition> _field4;
	RefPtr<WebCore::PositionError> _field5;
} GeolocationManager;

typedef struct DeviceMotionController DeviceMotionController;
typedef struct DeviceMotionClientIPhone {
	/*function-pointer*/ void** _field1;
	id _field2;
	DeviceMotionController* _field3;
	RefPtr<WebCore::DeviceMotionData> _field4;
	bool _field5;
} DeviceMotionClientIPhone;

template<>
struct HashTable<WebCore::DeviceMotionClientIPhone*,WebCore::DeviceMotionClientIPhone*,WTF::IdentityExtractor<WebCore::DeviceMotionClientIPhone*>,WTF::PtrHash<WebCore::DeviceMotionClientIPhone*>,WTF::HashTraits<WebCore::DeviceMotionClientIPhone*>,WTF::HashTraits<WebCore::DeviceMotionClientIPhone*> > {
	DeviceMotionClientIPhone** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::DeviceMotionClientIPhone*,WTF::PtrHash<WebCore::DeviceMotionClientIPhone*>,WTF::HashTraits<WebCore::DeviceMotionClientIPhone*> > {
	HashTable<WebCore::DeviceMotionClientIPhone*,WebCore::DeviceMotionClientIPhone*,WTF::IdentityExtractor<WebCore::DeviceMotionClientIPhone*>,WTF::PtrHash<WebCore::DeviceMotionClientIPhone*>,WTF::HashTraits<WebCore::DeviceMotionClientIPhone*>,WTF::HashTraits<WebCore::DeviceMotionClientIPhone*> > m_impl;
};

typedef struct DeviceOrientationController DeviceOrientationController;
typedef struct DeviceOrientationClientIPhone {
	/*function-pointer*/ void** _field1;
	id _field2;
	DeviceOrientationController* _field3;
	RefPtr<WebCore::DeviceOrientation> _field4;
	bool _field5;
} DeviceOrientationClientIPhone;

template<>
struct HashTable<WebCore::DeviceOrientationClientIPhone*,WebCore::DeviceOrientationClientIPhone*,WTF::IdentityExtractor<WebCore::DeviceOrientationClientIPhone*>,WTF::PtrHash<WebCore::DeviceOrientationClientIPhone*>,WTF::HashTraits<WebCore::DeviceOrientationClientIPhone*>,WTF::HashTraits<WebCore::DeviceOrientationClientIPhone*> > {
	DeviceOrientationClientIPhone** m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::DeviceOrientationClientIPhone*,WTF::PtrHash<WebCore::DeviceOrientationClientIPhone*>,WTF::HashTraits<WebCore::DeviceOrientationClientIPhone*> > {
	HashTable<WebCore::DeviceOrientationClientIPhone*,WebCore::DeviceOrientationClientIPhone*,WTF::IdentityExtractor<WebCore::DeviceOrientationClientIPhone*>,WTF::PtrHash<WebCore::DeviceOrientationClientIPhone*>,WTF::HashTraits<WebCore::DeviceOrientationClientIPhone*>,WTF::HashTraits<WebCore::DeviceOrientationClientIPhone*> > m_impl;
};

struct DeviceOrientationController DeviceOrientationController;

typedef struct DeviceOrientation DeviceOrientation;

template<>
struct RefPtr<WebCore::DeviceOrientation> {
	DeviceOrientation* _field1;
};

struct DeviceMotionController DeviceMotionController;

typedef struct DeviceMotionData DeviceMotionData;

template<>
struct RefPtr<WebCore::DeviceMotionData> {
	DeviceMotionData* _field1;
};

template<>
struct PassRefPtr<WebCore::SharedBuffer> {
	SharedBuffer* _field1;
};

typedef struct DOMObject* DOMObjectRef;

template<>
struct WeakGCPtr<WebCore::DOMObject> {
	DOMObjectRef _field1;
};

typedef struct QualifiedNameImpl QualifiedNameImpl;

typedef struct QualifiedName {
	QualifiedNameImpl* _field1;
} QualifiedName;

typedef struct NamedNodeMap NamedNodeMap;

template<>
struct RefPtr<WebCore::NamedNodeMap> {
	NamedNodeMap* _field1;
};

typedef struct Element {
	/*function-pointer*/ void** _field1;
	/*function-pointer*/ void** _field2;
	int _field3;
	Node* _field4;
	WeakGCPtr<WebCore::DOMObject> _field5;
	Document* _field6;
	Node* _field7;
	Node* _field8;
	RenderObject* _field9;
	unsigned _field10;
	Node* _field11;
	Node* _field12;
	QualifiedName _field13;
	RefPtr<WebCore::NamedNodeMap> _field14;
} Element;


