/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import "Message-Structs.h"
#import "MessageLibrary.h"

@class NSTimer, NSDate, NSString, MFWeakSet, NSSet, NSMutableSet;
@protocol MFMailboxPathProvider, MFLibraryMigrationHandler;

@interface MailMessageLibrary : MessageLibrary {
	NSDate* _lastUpdateDate;
	NSTimer* _commitTimer;
	double _beginTransactionTime;
	sqlite3* _writerDB;
	CFDictionaryRef _mailboxCache;
	NSMutableSet* _cachedDatabases;
	CFDictionaryRef _statementCachesByDB;
	double _dateDatabaseBecameLocked;
	opaque_pthread_mutex_t _dbLock;
	opaque_pthread_mutex_t _seqNumbersLock;
	opaque_pthread_mutex_t _priorityLock;
	dispatch_queue_s* _writingQueue;
	BOOL _outstandingWritesExist;
	BOOL _writerDBIsBeingUsedAsReader;
	void* _ICUSearchContext;
	void* _CPSearchContext;
	id<MFMailboxPathProvider> _mailboxPathProvider;
	/*function-pointer*/ void* resetHandler;
	/*function-pointer*/ void* _busyHandler;
	void* _busyHandlerContext;
	MFWeakSet* _accounts;
	NSString* _activeAccountClause;
	id<MFLibraryMigrationHandler> _migrationHandler;
	unsigned _attached : 1;
	NSSet* _messagesToUpdateThreadingInfo;
}
+(id)defaultInstance;
+(unsigned long)priorityKey;
+(void)initialize;
-(id)initWithPath:(id)path;
-(void)dealloc;
-(void)registerForMobileKeyBagNotifications;
-(void)deleteDatabaseAtPath:(id)path;
-(void)renameDatabaseAtPath:(id)path;
-(void)renameOrRemoveDatabase;
-(void)queueCommitOnMainThread;
-(void)scheduleCommitOnMainThread;
-(void)queueCommitForCurrentThread;
-(void)rescheduleCommit;
-(void)maybeCommitTransaction;
-(void)synchronouslyCommitTransaction;
-(void)commit;
-(void)setFlags:(unsigned long long)flags forMessage:(id)message;
-(void)setFlagsForMessages:(id)messages mask:(unsigned long long)mask;
-(id)setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;
-(void)setNumberOfAttachments:(unsigned)attachments isSigned:(BOOL)aSigned isEncrypted:(BOOL)encrypted forMessage:(id)message;
-(void)setMessage:(id)message isPartial:(BOOL)partial;
-(BOOL)initializeDatabase:(sqlite3*)database;
-(void)_invalidateActiveAccountsClause;
-(BOOL)_writeEmlxFile:(id)file withBodyData:(id)bodyData protectionClass:(int)aClass;
-(void)notifyConversation:(id)conversation hasMergedIntoConversation:(id)conversation2;
-(void)notifyMessage:(unsigned)message hasConversationID:(id)anId;
-(id)referencesFromHeaders:(id)headers;
-(id)addThreadingInfoBySubjectForMessageID:(unsigned)messageID nonPrefixedSubject:(id)subject messageIDsBySubject:(id)subject3 usingDatabase:(sqlite3*)database toReferences:(id)references withinMailbox:(int)mailbox;
-(id)addReferenceInformationForMessageID:(unsigned)messageID encodedMessageID:(id)anId withSubject:(id)subject withReferences:(id)references usingDatabase:(sqlite3*)database otherSubjectIDMappings:(id)mappings usingMailbox:(int)mailbox notify:(BOOL)notify;
-(id)addMessages:(id)messages withMailbox:(id)mailbox fetchBodies:(BOOL)bodies newMessagesByOldMessage:(id)message remoteIDs:(id)ids setFlags:(unsigned long long)flags clearFlags:(unsigned long long)flags7 messageFlagsForMessages:(id)messages8 copyFiles:(BOOL)files addPOPUIDs:(BOOL)popuids dataSectionsByMessage:(id)message11;
-(void)updateRecipientsForMessage:(id)message fromHeaders:(id)headers;
-(void)updateThreadingInfoForMessage:(id)message fromHeaders:(id)headers;
-(void)setThreadPriority:(int)priority;
-(int)threadPriority;
-(unsigned)updateSequenceNumber;
-(unsigned)accessSequenceNumber;
-(void)_rebuildActiveAccountsClause;
-(void)setBusyHandler:(/*function-pointer*/ void*)handler context:(void*)context;
-(void)iterateStatement:(sqlite3_stmt*)statement db:(sqlite3*)db withProgressMonitor:(id)progressMonitor andRowHandler:(/*function-pointer*/ void*)handler context:(void*)context;
-(void)sendMessagesForStatement:(sqlite3_stmt*)statement db:(sqlite3*)db to:(id)to options:(unsigned)options timestamp:(unsigned long long)timestamp;
-(void)sendMessagesMatchingQuery:(const char*)query to:(id)to options:(unsigned)options;
-(id)messagesMatchingQuery:(const char*)query options:(unsigned)options;
-(id)messagesForMailbox:(id)mailbox olderThanNumberOfDays:(int)days;
-(id)serverSearchResultMessagesForMailbox:(id)mailbox;
-(id)dateOfOldestNonSearchResultMessageInMailbox:(id)mailbox;
-(id)copyMessageInfosForMailbox:(id)mailbox;
-(CFSetRef)copyLibraryIDsWithoutConversationHashesForMailbox:(id)mailbox;
-(id)messagesWithSummariesForMailbox:(id)mailbox range:(NSRange)range;
-(id)messagesWithoutSummariesForMailbox:(id)mailbox;
-(id)messagesWithSummariesForMailbox:(id)mailbox fromRowID:(unsigned)rowID limit:(unsigned)limit;
-(id)messagesWithoutSummariesForMailbox:(id)mailbox fromRowID:(unsigned)rowID limit:(unsigned)limit;
-(unsigned)integerForQuery:(id)query withTextArgument:(id)textArgument;
-(unsigned)unreadCountForMailbox:(id)mailbox;
-(unsigned)deletedCountForMailbox:(id)mailbox;
-(unsigned)nonDeletedCountForMailbox:(id)mailbox includeServerSearchResults:(BOOL)results includeThreadSearchResults:(BOOL)results3;
-(unsigned)nonDeletedCountForMailbox:(id)mailbox;
-(unsigned)totalCountForMailbox:(id)mailbox;
-(id)oldestMessageInMailbox:(id)mailbox;
-(id)messageWithRemoteID:(id)remoteID inRemoteMailbox:(id)remoteMailbox;
-(unsigned)maximumRemoteIDForMailbox:(id)mailbox;
-(unsigned)minimumRemoteIDForMailbox:(id)mailbox;
-(id)sequenceIdentifierForMailbox:(id)mailbox;
-(void)setSequenceIdentifier:(id)identifier forMailbox:(id)mailbox;
-(id)sequenceIdentifierForMessagesWithRemoteIDs:(id)remoteIDs inMailbox:(id)mailbox;
-(void)setSequenceIdentifier:(id)identifier forMessageWithLibraryID:(unsigned)libraryID;
-(void)setSequenceIdentifier:(id)identifier forMessagesWithRemoteIDs:(id)remoteIDs inMailbox:(id)mailbox;
-(id)getDetailsForMessagesWithRemoteIDInRange:(NSRange)range fromMailbox:(id)mailbox;
-(id)getDetailsForAllMessagesFromMailbox:(id)mailbox;
-(id)messageWithMessageID:(id)messageID options:(unsigned)options inMailbox:(id)mailbox;
-(id)messagesWithMessageIDHeader:(id)messageIDHeader;
-(id)messageWithLibraryID:(unsigned)libraryID options:(unsigned)options inMailbox:(id)mailbox;
-(int)mailboxLocationOfMessageID:(unsigned)messageID usingDatabase:(sqlite3*)database;
-(id)conversationIDsOfMessagesInSameThreadAsMessageID:(unsigned)sameThreadAsMessageID onlyWithinMailbox:(BOOL)mailbox;
-(id)copyMessageInfosOfMessagesInSameThreadAsMessage:(id)sameThreadAsMessage onlyWithinMailbox:(BOOL)mailbox;
-(CFDictionaryRef)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)conversation;
-(id)_getReferencesForHashesWithOwners:(CFDictionaryRef)owners;
-(int)countOfMessagesMissingFromThreadContainingMessage:(id)threadContainingMessage;
-(int)loadMoreMessagesForThreadContainingMessage:(id)threadContainingMessage hasNoMoreMessages:(BOOL*)messages;
-(id)stringForQuery:(id)query monitor:(id)monitor;
-(id)stringForQuery:(id)query;
-(id)urlForMailboxID:(unsigned)mailboxID;
-(unsigned)mailboxIDForURLString:(id)urlstring;
-(id)pathForMailboxURL:(id)mailboxURL;
-(id)mailboxURLForMessage:(id)message;
-(id)mailboxUidForMessage:(id)message;
-(id)remoteStoreForMessage:(id)message;
-(id)accountForMessage:(id)message;
-(BOOL)shouldCancel;
-(void)messagesWereCompacted:(id)compacted mailboxes:(id)mailboxes;
-(void)compactMessages:(id)messages permanently:(BOOL)permanently;
-(void)compactMailbox:(id)mailbox;
-(BOOL)renameMailboxes:(id)mailboxes to:(id)to;
-(void)deleteMailboxes:(id)mailboxes;
-(void)removeAllMessagesFromMailbox:(id)mailbox removeMailbox:(BOOL)mailbox2 andNotify:(BOOL)notify;
-(id)messageWithMessageID:(id)messageID inMailbox:(id)mailbox;
-(id)dataPathForMessage:(id)message type:(int)type;
-(id)dataPathForMessage:(id)message;
-(id)attachmentsDirectoryForLibraryID:(unsigned)libraryID mailboxID:(unsigned)anId;
-(id)dataPathForMessage:(id)message part:(id)part;
-(id)dataConsumerForMessage:(id)message part:(id)part;
-(id)dataConsumerForMessage:(id)message part:(id)part incomplete:(BOOL)incomplete;
-(id)dataConsumerForMessage:(id)message isPartial:(BOOL)partial;
-(id)dataConsumerForMessage:(id)message;
-(void)setData:(id)data forMessage:(id)message isPartial:(BOOL)partial;
-(BOOL)_setMessageData:(id)data libraryID:(unsigned)anId part:(id)part partial:(BOOL)partial complete:(BOOL)complete;
-(void)_setMessageDataString:(id)string forKey:(id)key forMessage:(id)message;
-(void)setSummary:(id)summary forMessage:(id)message;
-(void)updateMessage:(id)message withMetadata:(id)metadata;
-(id)metadataForMessage:(id)message key:(id)key;
-(id)loadMeetingDataForMessage:(id)message;
-(id)loadMeetingExternalIDForMessage:(id)message;
-(id)bodyDataAtPath:(id)path headerData:(id*)data;
-(id)headerDataAtPath:(id)path;
-(id)bodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id*)available isComplete:(BOOL*)complete;
-(id)bodyDataForMessage:(id)message;
-(id)headerDataForMessage:(id)message;
-(id)fullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id*)available;
-(id)dataForMimePart:(id)mimePart isComplete:(BOOL*)complete;
-(BOOL)hasCompleteDataForMimePart:(id)mimePart;
-(BOOL)isMessageContentsLocallyAvailable:(id)available;
-(id)queryForCriterion:(id)criterion options:(unsigned)options baseTable:(unsigned)table isSubquery:(BOOL)subquery range:(NSRange)range;
-(id)queryForCriterion:(id)criterion options:(unsigned)options baseTable:(unsigned)table isSubquery:(BOOL)subquery;
-(id)queryForCriterion:(id)criterion options:(unsigned)options baseTable:(unsigned)table;
-(id)queryForCriterion:(id)criterion options:(unsigned)options range:(NSRange)range;
-(id)queryForCriterion:(id)criterion options:(unsigned)options;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options range:(NSRange)range;
-(void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options;
-(void)iterateMessagesMatchingCriterion:(id)criterion withResultHandler:(id)resultHandler options:(unsigned)options withMonitor:(id)monitor;
-(id)messagesMatchingCriterion:(id)criterion options:(unsigned)options range:(NSRange)range;
-(id)messagesMatchingCriterion:(id)criterion options:(unsigned)options;
-(id)filterContiguousMessages:(id)messages forCriterion:(id)criterion options:(unsigned)options;
-(void)setDatabasePath:(id)path;
-(id)defaultDatabasePath;
-(BOOL)isBusy;
-(void)setBusyTimeoutInterval:(double)interval;
-(void)cleanOldDatabases;
-(void)closeDatabaseConnections;
-(void)deletePOPUID:(id)popuid inMailbox:(id)mailbox;
-(id)UIDsToDeleteInMailbox:(id)mailbox;
-(id)deletedUIDsInMailbox:(id)mailbox;
-(id)allUIDsInMailbox:(id)mailbox;
-(id)hiddenPOPUIDsInMailbox:(id)mailbox;
-(void)unlockDB:(sqlite3*)db;
-(void)closeDB:(sqlite3*)db;
-(void)checkInDB:(sqlite3*)db;
-(void)setMigrationHandler:(id)handler;
-(sqlite3*)_getWriterDBWithRetryCount:(int)retryCount;
-(sqlite3*)setupWriterDB;
-(BOOL)cleanupProtectedTables:(sqlite3*)tables checkForInconsistencies:(BOOL)inconsistencies;
-(void)_reconcileJournal:(sqlite3*)journal;
-(int)attachProtectedDatabase:(sqlite3*)database;
-(int)detachProtectedDatabase:(sqlite3*)database;
-(void)handleKeybagLock;
-(void)handleKeybagUnlock;
-(sqlite3*)openNewHandle;
-(BOOL)outstandingWritesExist;
-(sqlite3*)getWriterDB;
-(sqlite3_stmt*)preparedStatement:(sqlite3*)statement pattern:(id)pattern;
-(int)handleSqliteError:(sqlite3*)error format:(id)format;
-(void)lockDBForWriting;
-(void)_yieldDBToOtherProcess;
-(void)setMailAccounts:(id)accounts;
-(unsigned)locationOfMessageID:(long long)messageID inMailbox:(id)mailbox;
-(void)setResetHandler:(/*function-pointer*/ void*)handler;
-(void)setMailboxPathProvider:(id)provider;
-(id)allMailboxURLStrings;
-(void)populateThreadingInfoForMessage:(id)message withLibraryID:(unsigned)libraryID andMailboxID:(int)anId withHeaders:(id)headers andMessageIDSubjectMapping:(id)mapping inDatabase:(sqlite3*)database;
-(void)populateAddressListInfoForLibraryID:(unsigned)libraryID withHeaders:(id)headers inDatabase:(sqlite3*)database;
-(id)populateExternalIDForLibraryID:(unsigned)libraryID inDatabase:(sqlite3*)database;
-(void)migrateExternalFilesForMessage:(id)message withLibraryID:(unsigned)libraryID andMailboxID:(int)anId externalID:(id)anId4 listingsByDirectory:(id)directory;
-(void)populateInfo:(unsigned)info fromMessageDataForAllMessages:(sqlite3*)allMessages;
@end

