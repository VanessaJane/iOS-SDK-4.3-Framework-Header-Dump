/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "Message-Structs.h"

@class MailAccount, MailboxUid, ActivityMonitor, NSMutableArray, NSTimer;

@interface MailMessageStore : XXUnknownSuperclass {
	struct {
		unsigned isReadOnly : 1;
		unsigned hasUnsavedChangesToMessageData : 1;
		unsigned haveOpenLockFile : 1;
		unsigned compacting : 1;
		unsigned cancelInvalidation : 1;
		unsigned forceInvalidation : 1;
		unsigned isWritingChangesToDisk : 1;
		unsigned isTryingToClose : 1;
		unsigned compactOnClose : 1;
		unsigned reserved : 22;
	} _flags;
	MailboxUid* _mailboxUid;
	MailAccount* _account;
	NSMutableArray* _allMessages;
	unsigned _deletedMessagesSize;
	unsigned _deletedMessageCount;
	unsigned _unreadMessageCount;
	unsigned _lastFetchCount;
	unsigned _generationNumber;
	int _state;
	NSTimer* _timer;
	double timeOfLastAutosaveOperation;
	ActivityMonitor* _openMonitor;
}
+(BOOL)createEmptyStoreIfNeededForPath:(id)path;
+(BOOL)createEmptyStoreForPath:(id)path;
+(BOOL)storeAtPathIsWritable:(id)pathIsWritable;
+(Class)classForMimePart;
+(int)copyMessages:(id)messages toMailbox:(id)mailbox markAsRead:(BOOL)read deleteOriginals:(BOOL)originals isDeletion:(BOOL)deletion unsuccessfulOnes:(id)ones;
+(void)_autosaveMessageStore:(void*)store;
+(Class)headersClass;
-(id)initWithMailboxUid:(id)mailboxUid readOnly:(BOOL)only;
-(void)dealloc;
-(void)openAsynchronously;
-(void)openSynchronously;
-(void)didOpen;
-(void)cancelOpen;
-(void)writeUpdatedMessageDataToDisk;
-(id)account;
-(id)mailboxUid;
-(BOOL)isOpened;
-(id)storePathRelativeToAccount;
-(id)displayName;
-(BOOL)isReadOnly;
-(id)description;
-(BOOL)isDrafts;
-(void)messageFlagsDidChange:(id)messageFlags flags:(id)flags;
-(void)structureDidChange;
-(void)messagesWereAdded:(id)added;
-(void)messagesWereCompacted:(id)compacted;
-(void)updateUserInfoToLatestValues;
-(void)deletedCount:(unsigned*)count andSize:(unsigned*)size;
-(unsigned)totalCount;
-(unsigned)nonDeletedCountIncludingServerSearch:(BOOL)search andThreadSearch:(BOOL)search2;
-(unsigned)serverMessageCount;
-(unsigned)serverUnreadOnlyOnServerCount;
-(unsigned)serverUnreadCount;
-(BOOL)hasMoreMessages:(unsigned)messages;
-(void)purgeMessagesBeyondLimit:(unsigned)limit keepingMessage:(id)message;
-(unsigned)unreadCount;
-(BOOL)hasMessageForAccount:(id)account;
-(unsigned)indexOfMessage:(id)message;
-(id)copyOfAllMessages;
-(id)copyOfMessagesInRange:(NSRange)range;
-(id)mutableCopyOfAllMessages;
-(id)copyOfAllMessagesWithOptions:(unsigned)options;
-(id)copyOfAllMessagesForBodyLoadingFromRowID:(unsigned)rowID limit:(unsigned)limit;
-(id)copyMessagesMatchingText:(id)text;
-(id)copyMessagesMatchingText:(id)text options:(unsigned)options;
-(id)copyMessagesMatchingCriterion:(id)criterion options:(unsigned)options;
-(BOOL)canFetchSearchResults;
-(int)fetchMessagesMatchingCriterion:(id)criterion limit:(unsigned)limit;
-(BOOL)canFetchMessageIDs;
-(int)fetchMessagesWithMessageIDs:(id)messageIDs andSetFlags:(unsigned long long)flags;
-(id)_defaultRouterDestination;
-(id)finishRoutingMessages:(id)messages routed:(id)routed;
-(BOOL)canRebuild;
-(void)rebuildTableOfContentsAsynchronously;
-(BOOL)canCompact;
-(void)doCompact;
-(void)deleteMessagesOlderThanNumberOfDays:(int)days compact:(BOOL)compact;
-(void)deleteMessages:(id)messages moveToTrash:(BOOL)trash;
-(void)undeleteMessages:(id)messages;
-(void)messagesWereDeleted:(id)deleted;
-(BOOL)allowsAppend;
-(int)appendMessages:(id)messages unsuccessfulOnes:(id)ones newMessageIDs:(id)ids newMessages:(id)messages4 flagsToSet:(id)set;
-(int)appendMessages:(id)messages unsuccessfulOnes:(id)ones newMessageIDs:(id)ids newMessages:(id)messages4;
-(int)appendMessages:(id)messages unsuccessfulOnes:(id)ones newMessageIDs:(id)ids;
-(int)appendMessages:(id)messages unsuccessfulOnes:(id)ones;
-(id)messageWithValue:(id)value forHeader:(id)header options:(unsigned)options;
-(id)messageForMessageID:(id)messageID options:(unsigned)options;
-(id)messageForRemoteID:(id)remoteID;
-(id)lastViewedMessageWithOptions:(unsigned)options;
-(id)lastViewedMessageDate;
-(id)headerDataForMessage:(id)message downloadIfNecessary:(BOOL)necessary;
-(BOOL)hasCachedDataForMimePart:(id)mimePart;
-(id)setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;
-(id)setFlagsLocallyFromDictionary:(id)dictionary forMessages:(id)messages;
-(void)setFlag:(id)flag state:(BOOL)state forMessages:(id)messages;
-(id)willSetFlagsFromDictionary:(id)dictionary forMessages:(id)messages;
-(void)setFlagsCancelled:(id)cancelled forMessages:(id)messages;
-(void)setNumberOfAttachments:(unsigned)attachments isSigned:(BOOL)aSigned isEncrypted:(BOOL)encrypted forMessage:(id)message;
-(id)status;
-(int)fetchNumMessages:(unsigned)messages preservingUID:(id)uid fetchType:(int)type synchronize:(BOOL)synchronize compact:(BOOL)compact;
-(int)fetchMobileSynchronously:(unsigned)synchronously preservingUID:(id)uid compact:(BOOL)compact;
-(int)fetchMobileSynchronously:(unsigned)synchronously;
-(BOOL)setPreferredEncoding:(unsigned long)encoding forMessage:(id)message;
-(void)setData:(id)data forMimePart:(id)mimePart isComplete:(BOOL)complete;
-(void)close;
-(void)_flushAllMessageData;
-(void)setLibrary:(id)library;
-(BOOL)shouldDownloadBodyDataForMessage:(id)message;
-(id)loadMeetingExternalIDForMessage:(id)message;
-(id)loadMeetingDataForMessage:(id)message;
-(BOOL)shouldSetSummaryForMessage:(id)message;
-(BOOL)canDeleteMessage:(id)message;
-(BOOL)shouldDeleteInPlace;
-(void)_cancelAutosave;
-(void)_setNeedsAutosave;
-(id)_fetchHeaderDataForMessage:(id)message downloadIfNecessary:(BOOL)necessary;
-(void)_rebuildTableOfContentsSynchronously;
-(void)updateBodyFlagsForMessage:(id)message body:(id)body;
-(id)_setOrGetBody:(id)body forMessage:(id)message updateFlags:(BOOL)flags;
-(void)_setFlagsForMessages:(id)messages mask:(unsigned long long)mask;
-(void)_setFlagsForMessages:(id)messages;
-(void)updateMessages:(id)messages updateNumberOfAttachments:(BOOL)attachments;
-(void)messagesWereAdded:(id)added forIncrementalLoading:(BOOL)incrementalLoading;
-(BOOL)_updateFlagForMessage:(id)message key:(id)key value:(BOOL)value;
-(BOOL)_shouldChangeComponentMessageFlags;
-(BOOL)_shouldChangeComponentMessageFlagsForMessage:(id)message;
@end

