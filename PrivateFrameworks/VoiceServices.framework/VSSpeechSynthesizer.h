/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
 */

#import "VoiceServices-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSString;
@protocol VSSpeechSynthesizerDelegate;

@interface VSSpeechSynthesizer : XXUnknownSuperclass {
@private
	void* _speechJob;
	void* _keepAlive;
	id<VSSpeechSynthesizerDelegate> _delegate;
	NSString* _voice;
	float _rate;
	float _pitch;
	float _volume;
	struct {
		unsigned delegateStart : 1;
		unsigned delegateFinish : 1;
		unsigned delegatePause : 1;
		unsigned delegateContinue : 1;
		unsigned delegateWillSpeak : 1;
		unsigned willUseInput : 1;
	} _synthesizerFlags;
}
+(id)availableVoices;
+(id)availableVoicesForLanguageCode:(id)languageCode;
+(id)availableLanguageCodes;
+(BOOL)isSystemSpeaking;
+(void)_localeDidChange;
-(id)init;
-(id)initForInputFeedback;
-(void)dealloc;
-(void)setDelegate:(id)delegate;
-(id)startSpeakingString:(id)string;
-(id)startSpeakingString:(id)string toURL:(id)url;
-(id)startSpeakingString:(id)string attributedString:(id)string2 toURL:(id)url withLanguageCode:(id)languageCode;
-(id)startSpeakingString:(id)string toURL:(id)url withLanguageCode:(id)languageCode;
-(id)startSpeakingAttributedString:(id)string;
-(id)startSpeakingAttributedString:(id)string toURL:(id)url;
-(id)startSpeakingAttributedString:(id)string toURL:(id)url withLanguageCode:(id)languageCode;
-(id)stopSpeakingAtNextBoundary:(int)nextBoundary;
-(id)stopSpeakingAtNextBoundary:(int)nextBoundary synchronously:(BOOL)synchronously;
-(id)pauseSpeakingAtNextBoundary:(int)nextBoundary;
-(id)pauseSpeakingAtNextBoundary:(int)nextBoundary synchronously:(BOOL)synchronously;
-(id)continueSpeaking;
-(BOOL)isSpeaking;
-(id)speechString;
-(float)rate;
-(id)setRate:(float)rate;
-(float)minimumRate;
-(float)maximumRate;
-(id)setPitch:(float)pitch;
-(float)pitch;
-(id)setVolume:(float)volume;
-(float)volume;
-(void)setVoice:(id)voice;
-(id)voice;
-(void)setMaintainPersistentConnection:(BOOL)connection;
-(void)_handleSpeechStarted:(VSSpeechRef)started;
-(void)_handleSpeechPaused:(VSSpeechRef)paused;
-(void)_handleSpeechContinued:(VSSpeechRef)continued;
-(void)_handleSpeech:(VSSpeechRef)speech completed:(BOOL)completed withError:(id)error;
-(void)_handleSpeech:(VSSpeechRef)speech willSpeakMarkType:(int)type inRange:(XXStruct_K5nmsA)range;
@end

