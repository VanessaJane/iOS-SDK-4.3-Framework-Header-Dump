/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection
 */

#import "PersistentConnection-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSTimer, NSMachPort, NSRecursiveLock, PCPersistentTimer, NSString;

@interface PCPersistentInterfaceManager : XXUnknownSuperclass {
	NSRecursiveLock* _lock;
	CFDictionaryRef _delegatesAndRunLoops;
	CFSetRef _WWANInterfaceAssertionDelegates;
	NSTimer* _WWANInterfaceAssertionDisableTimer;
	CFSetRef _WiFiAutoAssociationDelegates;
	PCPersistentTimer* _WiFiAutoAssociationDisableTimer;
	CFSetRef _wakeOnWiFiDelegates;
	PCPersistentTimer* _wakeOnWiFiDisableTimer;
	void* _ctServerConnection;
	NSMachPort* _machPort;
	void* _interfaceAssertion;
	void* _wifiManager;
	void* _reachability;
	int _WWANContextIdentifier;
	NSString* _WWANInterfaceName;
	BOOL _isWWANInterfaceUp;
	BOOL _isWWANInterfaceDataActive;
	BOOL _isWWANInHomeCountry;
	BOOL _isPowerStateDetectionSupported;
	BOOL _isWWANInterfaceInProlongedHighPowerState;
	BOOL _isWWANInterfaceActivationPermitted;
	double _lastActivationTime;
	int _wwanRSSI;
	BOOL _belowRSSIThreshold;
	BOOL _isInCall;
	BOOL _isInternetReachable;
	BOOL _isInternetReachableViaWiFi;
	BOOL _isWakeOnWiFiSupported;
	BOOL _isWakeOnWiFiEnabled;
}
@property(readonly, assign) BOOL areAllNetworkInterfacesDisabled;
@property(readonly, assign) BOOL isWWANInterfaceActivationPermitted;
@property(readonly, assign) BOOL isInCall;
@property(readonly, assign) BOOL isWWANInterfaceInProlongedHighPowerState;
@property(readonly, assign) BOOL isPowerStateDetectionSupported;
@property(readonly, assign) BOOL isInternetReachable;
@property(readonly, assign) BOOL isWakeOnWiFiSupported;
@property(readonly, assign) BOOL isInternetReachableViaWiFi;
@property(readonly, assign) NSString* WWANInterfaceName;
@property(readonly, assign) BOOL doesWWANInterfaceExist;
@property(readonly, assign) BOOL isWWANInHomeCountry;
@property(readonly, assign) BOOL isWWANInterfaceUp;
+(id)sharedInstance;
-(id)init;
-(void)addDelegate:(id)delegate callbackRunLoop:(id)loop;
-(void)removeDelegate:(id)delegate;
-(void)_createCTConnection;
-(void)_mainThreadDelayedInvalidation;
-(void)_ctConnectionWasInvalidated;
-(void)_createReachabilityMonitor;
-(void)handleMachMessage:(void*)message;
-(void)_serverCallback:(id)callback info:(id)info;
-(void)_serverCallbackLocked:(id)locked info:(id)info;
-(BOOL)_wwanRSSIBelowThresholdAndWoWAvailableLocked;
-(void)_updateWWANInterfaceUpStateLocked;
-(void)_reachabilityCallback:(unsigned)callback;
-(void)_reachabilityCallbackLocked:(unsigned)locked;
-(void)_scheduleCalloutsForSelector:(SEL)selector;
-(void)_performCalloutsForSelectorValue:(id)selectorValue;
-(id)WiFiInterfaceName;
-(void)keepWWANInterfaceUp:(BOOL)up forDelegate:(id)delegate;
-(BOOL)_wantsWWANInterfaceAssertion;
-(void)_updateWWANInterfaceAssertions;
-(void)_updateWWANInterfaceAssertionsLocked;
-(void)_createWiFiManager;
-(void)_populateWakeOnWiFiCapabliity;
-(void)_populateWakeOnWiFiCapabliityLocked;
-(void)enableWiFiAutoAssociation:(BOOL)association forDelegate:(id)delegate;
-(void)_adjustWiFiAutoAssociation;
-(void)_adjustWiFiAutoAssociationLocked;
-(void)enableWakeOnWiFi:(BOOL)fi forDelegate:(id)delegate;
-(BOOL)_wantsWakeOnWiFiEnabled;
-(void)_adjustWakeOnWiFi;
-(void)_adjustWakeOnWiFiLocked;
-(id)dhcpLeaseExpirationDate;
-(BOOL)_allowBindingToWWAN;
-(void)bindSocket:(int)socket toWWANInterface:(BOOL)wwaninterface;
-(void)bindSocketToWWANInterface:(int)wwaninterface;
-(void)bindCFStream:(CFReadStreamRef)stream toWWANInterface:(BOOL)wwaninterface;
-(void)bindCFStreamToWWANInterface:(CFReadStreamRef)wwaninterface;
-(id)urlConnectionBoundToWWANInterface:(BOOL)wwaninterface withRequest:(id)request delegate:(id)delegate usesCache:(BOOL)cache maxContentLength:(long long)length startImmediately:(BOOL)immediately connectionProperties:(id)properties;
-(id)urlConnectionBoundToWWANInterfaceWithRequest:(id)request delegate:(id)delegate usesCache:(BOOL)cache maxContentLength:(long long)length startImmediately:(BOOL)immediately connectionProperties:(id)properties;
@end

