/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 */

#import "iTunesStoreUI-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "NSCopying.h"

@class NSDictionary, NSArray, NSString, SSItemOffer, SSItemImageCollection, NSDate, SUItemReviewStatistics, SUItemLink, SUItemContentRating;

@interface SUItem : XXUnknownSuperclass <NSCopying> {
@private
	NSString* _artistName;
	NSString* _bundleIdentifier;
	NSString* _bundleVersion;
	NSString* _collectionName;
	SUItem* _containerItem;
	NSString* _containerName;
	SUItemContentRating* _contentRating;
	NSString* _copyrightString;
	SSItemOffer* _defaultStoreOffer;
	NSDictionary* _dictionary;
	NSString* _disclaimerString;
	BOOL _gameCenterEnabled;
	NSString* _genreName;
	NSString* _humanReadableDescription;
	int _itemDisplayType;
	unsigned long long _itemIdentifier;
	SSItemImageCollection* _itemImageCollection;
	NSArray* _itemLinks;
	NSString* _itemMediaKind;
	int _itemType;
	NSDate* _releaseDate;
	NSString* _releaseDateString;
	int _representedItemCount;
	SUItemReviewStatistics* _reviewStatistics;
	NSString* _secondaryTitle;
	NSArray* _storeOffers;
	NSString* _title;
	NSString* _unmodifiedTitle;
}
@property(copy, nonatomic) NSString* artistName;
@property(copy, nonatomic) NSString* bundleIdentifier;
@property(copy, nonatomic) NSString* bundleVersion;
@property(copy, nonatomic) NSString* collectionName;
@property(retain, nonatomic) SUItem* containerItem;
@property(copy, nonatomic) NSString* containerName;
@property(copy, nonatomic) SUItemContentRating* contentRating;
@property(copy, nonatomic) NSString* copyrightString;
@property(readonly, assign, nonatomic) SSItemOffer* defaultStoreOffer;
@property(copy, nonatomic) NSString* disclaimerString;
@property(assign, nonatomic, getter=isGameCenterEnabled) BOOL gameCenterEnabled;
@property(copy, nonatomic) NSString* genreName;
@property(copy, nonatomic) NSString* humanReadableDescription;
@property(readonly, assign, nonatomic) NSDictionary* itemDictionary;
@property(assign, nonatomic) int itemDisplayType;
@property(assign, nonatomic) unsigned long long itemIdentifier;
@property(copy, nonatomic) SSItemImageCollection* itemImageCollection;
@property(copy, nonatomic) NSArray* itemLinks;
@property(copy, nonatomic) NSString* itemMediaKind;
@property(assign, nonatomic) int itemType;
@property(retain, nonatomic) NSDate* releaseDate;
@property(assign, nonatomic) int representedItemCount;
@property(copy, nonatomic) SUItemReviewStatistics* reviewStatistics;
@property(copy, nonatomic) NSString* secondaryTitle;
@property(copy, nonatomic) NSArray* storeOffers;
@property(copy, nonatomic) NSString* title;
@property(copy, nonatomic) NSString* unmodifiedTitle;
@property(readonly, assign, nonatomic) NSString* itemTypeString;
@property(readonly, assign, nonatomic) SUItemLink* externalArtistPageLink;
@property(readonly, assign, nonatomic, getter=isDownloadable) BOOL downloadable;
-(id)initWithDictionary:(id)dictionary;
-(void)dealloc;
-(id)copyWithZone:(NSZone*)zone;
-(BOOL)boolValueForProperty:(id)property;
-(id)copyReleaseDateStringWithStyle:(long)style;
-(id)dateValueForProperty:(id)property;
-(id)firstItemLinkForType:(int)type;
-(int)integerValueForProperty:(id)property;
-(BOOL)isDisplayable:(id*)displayable;
-(id)itemLinksForType:(int)type;
-(id)storeOfferForIdentifier:(id)identifier;
-(id)stringValueForProperty:(id)property;
-(id)valueForProperty:(id)property;
-(int)_linkTargetForTargetString:(id)targetString typeString:(id)string;
-(int)_linkTypeForString:(id)string;
-(id)_newItemLinkWithType:(int)type dictionary:(id)dictionary;
-(id)_newItemLinkWithType:(int)type URLKey:(id)key titleKey:(id)key3;
-(id)_newPrimaryItemLink;
-(void)_reloadDefaultStoreOffer;
-(void)_reloadImagesAndLinksFromSquishes:(id)squishes;
-(void)_reloadItemImages;
-(void)_reloadItemLinks;
-(void)_reloadProperties;
-(void)_reloadStoreOffers;
-(id)_squishImageForSquishDictionary:(id)squishDictionary;
-(id)_valueForFirstAvailableKey:(id)firstAvailableKey;
@end

