/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/iAdCore.framework/iAdCore
 */

#import "iAdCore-Structs.h"
#import "ADMessageProxyItem.h"
#import "ADStoryboardTransitionWindowDelegate.h"
#import "ADCacheSubscriber.h"
#import "ADStoryboardControllerDelegate.h"
#import "AdSheetBannerViewDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, ADDistributedMessagingCenter, ADSRVBannerView, ADServerAccessCoordinator, ADLayerHostWindow, NSTimer, ADStoryboardController, ADStoryboardTransitionWindow, NSString, CPDistributedMessagingCenter;
@protocol AdSheetSessionDelegate;

@interface ADSRVBannerController : XXUnknownSuperclass <ADStoryboardTransitionWindowDelegate, AdSheetBannerViewDelegate, ADStoryboardControllerDelegate, ADCacheSubscriber, ADMessageProxyItem> {
	NSString* _bundleIdentifier;
	NSString* _sessionIdentifier;
	BOOL _isPrivilegedClient;
	NSString* _serverURL;
	NSString* _authenticationUserName;
	ADServerAccessCoordinator* _serverAccessCoordinator;
	BOOL _serverReachable;
	CPDistributedMessagingCenter* _localCenter;
	ADDistributedMessagingCenter* _remoteCenter;
	ADLayerHostWindow* _bannerViewWindow;
	ADSRVBannerView* _bannerView;
	ADStoryboardTransitionWindow* _storyboardWindow;
	ADStoryboardController* _storyboard;
	id<AdSheetSessionDelegate> _delegate;
	int _clientOrientation;
	BOOL _isWaitingToRequestDataLoad;
	BOOL _isOpen;
	NSTimer* _unloadStoryboardWatchdog;
	CGRect _bannerFrame;
	CGPoint _clickLocation;
	SCNetworkReachabilityRef _reachability;
	NSMutableArray* _adEventQueue;
	dispatch_source_s* _adEventDispatchTimer;
	dispatch_queue_s* _ipcReplyQueue;
	double _lastReachabilityUpdateTime;
	BOOL _userIsInStoryboard;
	double _createdAt;
}
@property(retain, nonatomic) NSString* bundleIdentifier;
@property(retain, nonatomic) NSString* sessionIdentifier;
@property(readonly, assign, nonatomic) BOOL isPrivilegedClient;
@property(retain, nonatomic) NSString* serverURL;
@property(retain, nonatomic) NSString* authenticationUserName;
@property(retain, nonatomic) ADServerAccessCoordinator* serverAccessCoordinator;
@property(assign, nonatomic, getter=isServerReachable) BOOL serverReachable;
@property(retain, nonatomic) CPDistributedMessagingCenter* localCenter;
@property(retain, nonatomic) ADDistributedMessagingCenter* remoteCenter;
@property(retain, nonatomic) ADLayerHostWindow* bannerViewWindow;
@property(retain, nonatomic) ADSRVBannerView* bannerView;
@property(retain, nonatomic) ADStoryboardTransitionWindow* storyboardWindow;
@property(retain, nonatomic) ADStoryboardController* storyboard;
@property(assign, nonatomic) id<AdSheetSessionDelegate> delegate;
@property(assign, nonatomic) int clientOrientation;
@property(readonly, assign, nonatomic) BOOL isWaitingToRequestDataLoad;
@property(readonly, assign, nonatomic) BOOL isOpen;
@property(retain, nonatomic) NSTimer* unloadStoryboardWatchdog;
@property(assign, nonatomic) CGRect bannerFrame;
@property(assign, nonatomic) CGPoint clickLocation;
@property(readonly, assign, nonatomic) SCNetworkReachabilityRef reachability;
@property(retain, nonatomic) NSMutableArray* adEventQueue;
@property(assign, nonatomic) dispatch_source_s* adEventDispatchTimer;
@property(assign, nonatomic) dispatch_queue_s* ipcReplyQueue;
@property(assign, nonatomic) double lastReachabilityUpdateTime;
@property(assign, nonatomic) BOOL userIsInStoryboard;
@property(assign) double createdAt;
@property(readonly, assign, nonatomic) BOOL isBusy;
+(id)serverMessagingCenterNameForClientName:(id)clientName;
-(id)init;
-(void)dealloc;
-(id)proxyItemIdentifier;
-(void)sendMessageName:(id)name userInfo:(id)info;
-(void)open;
-(void)close;
-(void)serverAccessCoordinatorAllowsRequestsNotification:(id)notification;
-(void)statusBarHiddenDidChangeNotification:(id)statusBarHidden;
-(void)statusBarOrientationDidChangeNotification:(id)statusBarOrientation;
-(void)_setZoom:(BOOL)zoom animated:(BOOL)animated;
-(void)updateZoomedAnimated:(BOOL)animated;
-(void)startReachability;
-(void)stopReachability;
-(BOOL)loadStoryboardController;
-(void)loadStoryboardWindow;
-(void)sendBannerUrlActionMessage:(BOOL)message;
-(void)applicationMenuButtonUp:(id)up;
-(void)dismissStoryboardWithDelay:(BOOL)delay;
-(void)unloadStoryboardWindow;
-(BOOL)isValidAuditToken:(XXStruct_kUSYWB*)token;
-(int)hostInterfaceOrientation;
-(CGRect)hostBannerRect;
-(void)transitionToAdWillBegin;
-(void)transitionToAdDidFinish;
-(void)transitionFromAdWillBegin;
-(void)transitionFromAdDidFinish;
-(void)storyboardDidFinishFirstSignificantDraw:(id)storyboard;
-(void)storyboardDidChangeSupportedOrientations:(id)storyboard;
-(void)storyboardShouldDismiss:(id)storyboard;
-(void)storyboard:(id)storyboard didFailLoadWithError:(id)error;
-(BOOL)openURL:(id)url;
-(void)_logSysEvent:(int)event forAd:(id)ad sequence:(unsigned)sequence overclick:(unsigned)overclick clickLocation:(id)location;
-(void)storyboard:(id)storyboard didReportSystemEventWithType:(int)type;
-(void)_flushAdEventQueue;
-(void)storyboard:(id)storyboard didReportContentEventWithMessage:(id)message;
-(void)storyboardContentRequestsGeolocation:(id)geolocation approval:(id)approval;
-(void)storyboardContentSignalsReady:(id)ready;
-(void)storyboardVideoPlayerWentFullScreen:(id)screen;
-(void)storyboardVideoPlayerExitedFullScreen:(id)screen;
-(id)storyboardHumanReadableContentName:(id)name;
-(void)bannerViewDidRequestDataLoad:(id)bannerView;
-(void)bannerViewDidCancelDataLoad:(id)bannerView;
-(void)bannerViewDidLoadAd:(id)bannerView;
-(void)bannerView:(id)view didFailToReceiveAdWithError:(id)error;
-(int)bannerViewRequestsHostInterfaceOrientation:(id)orientation;
-(void)bannerViewActionDidAbandon:(id)bannerViewAction;
-(void)bannerView:(id)view shouldLogImpressionForAd:(id)ad impressionSequence:(unsigned)sequence;
-(void)bannerView:(id)view shouldLogClickForAd:(id)ad impressionSequence:(unsigned)sequence overclickCount:(unsigned)count;
-(void)interstitialView:(id)view shouldLogSystemEvent:(int)event forAd:(id)ad impressionSequence:(unsigned)sequence overclickCount:(unsigned)count;
-(void)interstitialViewExpiredAndWasUnloaded:(id)unloaded;
-(void)readyForAuthoredTransitionIn;
-(void)authoredTransitionInComplete;
-(void)cacheLoadedBannerData:(id)data;
-(void)cacheFailedToLoadBanner:(id)loadBanner withError:(id)error;
-(id)uniqueIdentifier;
-(void)updateSpecificationMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)removedFromSuperviewMessage:(id)superviewMessage userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)closeMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerFrameDidChangeMessage:(id)bannerFrame userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerVisibilityHeartbeat:(id)heartbeat userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerKeysDidChangeMessage:(id)bannerKeys userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)controllerKeysDidChangeMessage:(id)controllerKeys userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)loadLocalAdMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerBeginActionMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerRefuseActionMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerCancelBannerViewActionMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerLogExternalActionMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)bannerOrientationDidChangeMessage:(id)bannerOrientation userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)storyboardOpenURLReply:(id)reply userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)clientApplicationDidEnterBackground;
-(void)clientApplicationDidResignActive;
-(void)clientApplicationWillEnterForeground;
-(void)clientApplicationDidBecomeActive;
-(void)interstitialTouchDismissMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)interstitialPresentedInViewMessage:(id)viewMessage userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
-(void)loadDebuggerMessage:(id)message userInfo:(id)info auditToken:(XXStruct_kUSYWB*)token;
@end

