/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/YouTube.framework/YouTube
 */

#import "YouTube-Structs.h"
#import "YTImageLoader.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSLock, NSMutableArray, NSMutableSet, NSMutableDictionary, NSNotificationCenter, NSTimer;

@interface YTImageLoader : XXUnknownSuperclass {
	NSLock* _queueLock;
	NSMutableArray* _loadQueue;
	NSMutableSet* _loadsInProgress;
	NSLock* _cacheLock;
	NSMutableDictionary* _imageCache;
	NSMutableDictionary* _roundedThumbnailImageCache;
	NSMutableDictionary* _largeThumbnailImageCache;
	NSMutableDictionary* _pluginImageCache;
	NSMutableArray* _imageCacheLRU;
	CFRunLoopRef _loaderRunLoop;
	CFRunLoopSourceRef _loaderSource;
	NSNotificationCenter* _notificationCenter;
	NSTimer* _loadStatusNotificationTimer;
	opaque_pthread_mutex_t _startupLock;
	opaque_pthread_cond_t _startupCondition;
}
+(id)sharedImageLoader;
-(id)init;
-(BOOL)isLoadingImages;
-(CGImageRef)createRoundedThumbnailWithImage:(CGImageRef)image;
-(CGImageRef)_largeThumbnailOverlay;
-(CGImageRef)createSheenedThumbnailWithImage:(CGImageRef)image overlay:(CGImageRef)overlay width:(int)width height:(int)height;
-(CGImageRef)imageForURL:(id)url rounded:(BOOL)rounded videoID:(id)anId loadIfAbsent:(BOOL)absent;
-(CGImageRef)largeImageForURL:(id)url videoID:(id)anId loadIfAbsent:(BOOL)absent;
-(CGImageRef)pluginImageForURL:(id)url videoID:(id)anId loadIfAbsent:(BOOL)absent;
-(id)notificationCenter;
-(void)saveCache:(id)cache;
-(void)loadCache:(id)cache;
@end

@interface YTImageLoader (Internal)
-(void)_mainThread_postLoadingStatusChanged;
-(void)_postLoadingStatusChanged;
-(void)_loadingStatusChanged;
-(void)_startLoader;
-(BOOL)_locked_URLIsLoading:(id)loading;
-(void)_locked_loadImageForURL:(id)url videoID:(id)anId;
-(void)_loadImageURL:(id)url videoID:(id)anId;
-(void)_setImageData:(id)data videoID:(id)anId forURL:(id)url cacheLocked:(BOOL)locked;
-(void)_postImageLoadedNotification:(id)notification;
-(void)_locked_imageLoadStarted:(id)started;
-(void)_imageLoadFinished:(id)finished;
-(id)_locked_saveImageCache:(id)cache;
-(id)_locked_loadImageCache:(id)cache;
@end

