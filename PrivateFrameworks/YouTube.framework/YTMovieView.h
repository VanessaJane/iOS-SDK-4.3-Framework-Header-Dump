/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/YouTube.framework/YouTube
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "YouTube-Structs.h"

@class NSURL, NSArray, UIMoviePlayerController, UIImageView, UILabel, YTSearchRequest, YTVideo;

@interface YTMovieView : XXUnknownSuperclass {
	id _delegate;
	YTVideo* _video;
	NSArray* _videoList;
	NSURL* _youTubeURL;
	YTSearchRequest* _videoInfoRequest;
	UIMoviePlayerController* _moviePlayer;
	UIImageView* _bugView;
	UIImageView* _gradientView;
	BOOL _canAutoPlay;
	BOOL _shownFromExternalURL;
	BOOL _switchingVideos;
	BOOL _controlsShown;
	BOOL _useSmallLogo;
	BOOL _showControlsAfterFullscreenExit;
	double _seekTime;
	UILabel* _logLabel;
}
-(id)initWithFrame:(CGRect)frame;
-(void)dealloc;
-(void)setDelegate:(id)delegate;
-(void)setFrame:(CGRect)frame;
-(void)setSeekTime:(double)time;
-(void)_destroyMoviePlayer;
-(BOOL)_canShare;
-(BOOL)_canBookmark;
-(void)_setupBackground;
-(BOOL)_loggingEnabled;
-(void)_switchToVideo:(id)video;
-(void)_loadVideoFromURL:(BOOL)url;
-(void)_loadVideoInfoWithID:(id)anId;
-(void)_cancelVideoInfoRequest;
-(void)willShowForVideo:(id)video inList:(id)list orVideoID:(id)anId;
-(void)didShow;
-(void)willHide;
-(void)didHide;
-(void)play;
-(void)pause;
-(BOOL)isPlaying;
-(BOOL)canContinuePlayingWhenLocked;
-(int)orientation;
-(void)setCanAutoPlay:(BOOL)play;
-(void)willShowAlert;
-(void)setFullscreen:(BOOL)fullscreen;
-(id)fullscreenView;
-(id)moviePlayer;
-(void)useSmallLogo:(BOOL)logo;
-(id)video;
-(BOOL)moviePlayerExitRequest:(id)request exitReason:(int)reason;
-(void)_hideOverlay;
-(void)_hideBug;
-(void)moviePlayerPlaybackStateDidChange:(id)moviePlayerPlaybackState fromPlaybackState:(unsigned)playbackState;
-(void)moviePlayerBufferingStateDidChange:(id)moviePlayerBufferingState;
-(BOOL)moviePlayerAddBookmarkButtonPressed:(id)pressed;
-(BOOL)moviePlayerEmailButtonPressed:(id)pressed;
-(void)shareSheetDidHide;
-(BOOL)moviePlayerForwardButtonPressed:(id)pressed;
-(BOOL)moviePlayerBackwardButtonPressed:(id)pressed;
-(BOOL)moviePlayerHeadsetNextTrackPressed:(id)pressed;
-(BOOL)moviePlayerHeadsetPreviousTrackPressed:(id)pressed;
-(BOOL)moviePlayer:(id)player validateAction:(SEL)action;
-(void)moviePlayerWillEnterFullscreen:(id)moviePlayer;
-(void)moviePlayerWillExitFullscreen:(id)moviePlayer;
-(void)moviePlayerDidExitFullscreen:(id)moviePlayer;
-(void)moviePlayerWillShowOverlay:(id)moviePlayer;
-(void)moviePlayerDidShowOverlay:(id)moviePlayer;
-(void)moviePlayerWillHideOverlay:(id)moviePlayer;
-(void)moviePlayerDidHideOverlay:(id)moviePlayer;
-(CGRect)moviePlayerFrameAfterFullscreenExit:(id)exit;
-(void)moviePlayerPlaybackDidEnd:(id)moviePlayerPlayback;
-(void)_presentAlertForError:(id)error reasonCode:(id)code;
-(void)searchRequest:(id)request receivedVideos:(id)videos startIndex:(unsigned)index videosRemaining:(unsigned)remaining;
-(void)searchRequest:(id)request didFailWithError:(id)error;
-(void)forceControlsVisible:(BOOL)visible;
@end

